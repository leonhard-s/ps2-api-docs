{
  "openapi": "3.1.0",
  "info": {
    "title": "PlanetSide 2 API",
    "summary": "Public API for PlanetSide 2 community developers",
    "description": "Unofficial API specification for [PlanetSide 2](https://www.planetside2.com/) as made available through the [Daybreak Game Company Census API](http://census.daybreakgames.com/).\n\nThese API specs are not affiliated with Daybreak Game Company, Rogue Planet Games, or the PlanetSide 2 developer team and come with absolutely no warranty.",
    "termsOfService": "https://census.daybreakgames.com#services-api-policy",
    "contact": {
      "name": "Project Homepage",
      "url": "https://github.com/leonhard-s/ps2-api-docs"
    },
    "version": "0.3"
  },
  "jsonSchemaDialect": "https://spec.openapis.org/oas/3.1/dialect/base",
  "externalDocs": {
    "description": "Official documentation for the documentation for the PlanetSide 2 API.",
    "url": "http://census.daybreakgames.com/"
  },
  "servers": [
    {
      "url": "http://census.daybreakgames.com",
      "description": "Casual-use Daybreak Games endpoint, throttled to 10 requests per minute and IP address"
    },
    {
      "url": "http://census.daybreakgames.com/{serviceId}",
      "description": "Production Daybreak Games endpoint, with service ID",
      "variables": {
        "serviceId": {
          "enum": [
            "s:example"
          ],
          "default": "s:example",
          "description": "Unique string used to identify a given consumer on the API. The default value of `s:example` underlies the same rate limits as the endpoint without service ID information. A custom service ID can be requested via [this form](https://census.daybreakgames.com/#devSignup)."
        }
      }
    },
    {
      "url": "https://census.lithafalcon.cc",
      "description": "Unofficial Community endpoint for static data.\nVisit the project URL for details."
    }
  ],
  "tags": [
    {
      "name": "Game-Agnostic Endpoints",
      "description": "Generic documentation of the Census API endpoints available for all games. The PlanetSide 2 endpoints are listed separtely to provide more detail, but they generally also support the full set of query parameters and commands list here. For a list of exceptions, see the [\"Special\" PS2 Collections](https://census.daybreakgames.com/#special-collections) section of the Census API documentation."
    },
    {
      "name": "Character Information",
      "description": "Collections related to PlanetSide 2 character information and lookups."
    },
    {
      "name": "Basics",
      "description": "General information about factions, classes, continents, and servers in PlanetSide 2."
    },
    {
      "name": "Player Outfits",
      "description": "Collections related to PlanetSide 2 outfits and outfit membership."
    },
    {
      "name": "Statistics",
      "description": "Collections concerning character statistics for weapon, classes, or vehicles."
    }
  ],
  "security": [],
  "paths": {
    "/get/{game}": {
      "get": {
        "summary": "Listing available collections",
        "description": "Return a list of all collections available for the current game namespace.\n\nThe keys in the entries' `resolve_list` field can be passed to the `c:resolve` parameter when accessing the respective collection to insert additional data into the response payload.\n\nNote that while the examples only show a single record, this endpoint cannot be filtered and always returns all results.",
        "tags": [
          "Game-Agnostic Endpoints"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "datatype_list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/datatype"
                      }
                    },
                    "returned": {
                      "type": "integer"
                    }
                  }
                },
                "examples": {
                  "character": {
                    "$ref": "#/components/examples/datatype_character"
                  },
                  "outfitMember": {
                    "$ref": "#/components/examples/datatype_outfitMember"
                  },
                  "characterOnlineStatus": {
                    "$ref": "#/components/examples/datatype_characterOnlineStatus"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/count/{game}/{collection}": {
      "get": {
        "summary": "Get the number of records in a collection",
        "description": "Instead of returning the given results directly, this endpoint returns the number of results.\n\nThis is especially useful for large collections which cannot be fetched in full, such as `ps2/character`. This endpoint still supports filtering by parameters, as well as some query commands such as `c:has`.\n\nConsumers may also want to query the result count for a given query before fetching to decide whether to paginate the response.",
        "tags": [
          "Game-Agnostic Endpoints"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/collectionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                },
                "examples": {
                  "success": {
                    "$ref": "#/components/examples/count_success"
                  },
                  "error": {
                    "$ref": "#/components/examples/count_error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/{collection}": {
      "get": {
        "summary": "Retrieve results from a collection",
        "description": "This endpoint documents generic parameters available on most collections. For details on collection-specific variables and response schemas, please see the respective collection's query entry.",
        "tags": [
          "Game-Agnostic Endpoints"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/collectionParam"
          },
          {
            "$ref": "#/components/parameters/qcShowParam"
          },
          {
            "$ref": "#/components/parameters/qcHideParam"
          },
          {
            "$ref": "#/components/parameters/qcSortParam"
          },
          {
            "$ref": "#/components/parameters/qcHasParam"
          },
          {
            "$ref": "#/components/parameters/qcResolveParam"
          },
          {
            "$ref": "#/components/parameters/qcCaseParam"
          },
          {
            "$ref": "#/components/parameters/qcLimitParam"
          },
          {
            "$ref": "#/components/parameters/qcLimitPerDbParam"
          },
          {
            "$ref": "#/components/parameters/qcStartParam"
          },
          {
            "$ref": "#/components/parameters/qcIncludeNullParam"
          },
          {
            "$ref": "#/components/parameters/qcLangParam"
          },
          {
            "$ref": "#/components/parameters/qcJoinParam"
          },
          {
            "$ref": "#/components/parameters/qcTreeParam"
          },
          {
            "$ref": "#/components/parameters/qcTimingParam"
          },
          {
            "$ref": "#/components/parameters/qcExactMatchFirstParam"
          },
          {
            "$ref": "#/components/parameters/qcDistinctParam"
          },
          {
            "$ref": "#/components/parameters/qcRetryParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "{collection}_list": {
                      "type": "array",
                      "members": {
                        "type": "object",
                        "additionalProperties": true
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "timing": {
                      "type": "object",
                      "summary": "Only included if `c:timing` is enabled.",
                      "properties": {
                        "total-ms": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "characterInfo": {
                    "$ref": "#/components/examples/collection_characterInfo"
                  },
                  "factionTags": {
                    "$ref": "#/components/examples/collection_factionTags"
                  },
                  "mapFacilities": {
                    "$ref": "#/components/examples/collection_mapFacilities"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/character": {
      "get": {
        "summary": "Character",
        "description": "Game-specific documentation for the `character` collection.\n\nThis collection is randomly distributed across 20 different databases, causing some unusual behaviour when filtering. For example, the `c:distinct` parameter will fetch the distinct values for each database and aggregate them in the response, resulting in duplicate entries. This and other special cases are documented with the corresponding query command parameters in the `General` section.\n\nIn addition to the commonly-used parameters provided, this endpoint may be queried by any of its fields, including sub-keys like `times.creation`.",
        "tags": [
          "Character Information"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/qcLimitPerDbParam"
          },
          {
            "$ref": "#/components/parameters/characterIdParam"
          },
          {
            "$ref": "#/components/parameters/characterNameFirstParam"
          },
          {
            "$ref": "#/components/parameters/characterNameFirstLowerParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "character_list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/character"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "higby": {
                    "$ref": "#/components/examples/character_higby"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/character_name": {
      "get": {
        "summary": "Character Name",
        "description": "Optimized, low-bandwidth endpoint for character name resolution.",
        "tags": [
          "Character Information"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/characterIdParam"
          },
          {
            "$ref": "#/components/parameters/characterNameFirstParam"
          },
          {
            "$ref": "#/components/parameters/characterNameFirstLowerParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "character_name_list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/character_name"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "higby": {
                    "$ref": "#/components/examples/character_name_higby"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/characters_friend": {
      "get": {
        "summary": "Friends List",
        "description": "Query the friends list of a character.",
        "tags": [
          "Character Information"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/characterIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "characters_friend_list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/characters_friend"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "higby": {
                    "$ref": "#/components/examples/characters_friend"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/characters_online_status": {
      "get": {
        "summary": "Online Status",
        "description": "Query the online status of a character.",
        "tags": [
          "Character Information"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/characterIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "characters_online_status_list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/characters_online_status"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "higby": {
                    "$ref": "#/components/examples/characters_online_status"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/characters_stat": {
      "get": {
        "summary": "Character Statistics",
        "description": "Basic statistics endpoint for character-wide and class-specific statistics.\n\n- `stat_name` lists the name of the stat\n- `profile` represents the class, with a value of 0 denoting a character-wide value",
        "tags": [
          "Statistics"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/characterIdParam"
          },
          {
            "$ref": "#/components/parameters/statNameParam_characters_stat"
          },
          {
            "$ref": "#/components/parameters/profileIdParam_characters_stat"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "characters_stat_list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/characters_stat"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "higby": {
                    "$ref": "#/components/examples/characters_stat"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/characters_world": {
      "get": {
        "summary": "Character Server Lookup",
        "description": "Query the server a character is on.",
        "tags": [
          "Character Information"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/characterIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "characters_world_list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/characters_world"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "higby": {
                    "$ref": "#/components/examples/characters_world"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/faction": {
      "get": {
        "summary": "Faction",
        "description": "Playable and NPC factions.",
        "tags": [
          "Basics"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/factionIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "faction_list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/faction"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "tr": {
                    "$ref": "#/components/examples/faction"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/loadout": {
      "get": {
        "summary": "Loadout",
        "description": "Enumeration of the six infantry classes for each playable faction.\n\nNote that this is different from the in-game loadouts, which are not available on the API.",
        "tags": [
          "Basics"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/loadoutIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "loadout_list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/loadout"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "ncInfiltrator": {
                    "$ref": "#/components/examples/loadout"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/outfit": {
      "get": {
        "summary": "Outfit",
        "description": "A player-run outfit or clan.",
        "tags": [
          "Player Outfits"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/outfitIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "outfit_list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/outfit"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "fno": {
                    "$ref": "#/components/examples/outfit"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/outfit_member": {
      "get": {
        "summary": "Outfit Member",
        "description": "Outfit membership information for a givne character. Characters that are not members of any outfit will not have an entry in this collection.",
        "tags": [
          "Player Outfits"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/characterIdParam"
          },
          {
            "$ref": "#/components/parameters/outfitIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "outfit_member_list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/outfit_member"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "luperza": {
                    "$ref": "#/components/examples/outfit_member"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/outfit_member_extended": {
      "get": {
        "summary": "Outfit Member (Extended)",
        "description": "Another variant of the `ps2/outfit_member` collection, but with the contents of the corresponding `ps2/outfit` merged in. This is useful for bulk lookups of outfit information for heterogenous lists of characters without requiring the explicit use of `c:join` or `c:resolve`.",
        "tags": [
          "Player Outfits"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/characterIdParam"
          },
          {
            "$ref": "#/components/parameters/outfitIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "outfit_member_extended_list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/outfit_member_extended"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "luperza": {
                    "$ref": "#/components/examples/outfit_member_extended"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/outfit_rank": {
      "get": {
        "summary": "Custom Outfit Rank",
        "description": "Outfits can define their own custom rank names and permissions, which are listed here. Outfits using the default rank names may not have an entry here.",
        "tags": [
          "Player Outfits"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/outfitIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "outfit_rank_list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/outfit_rank"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "fno": {
                    "$ref": "#/components/examples/outfit_rank"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/profile": {
      "get": {
        "summary": "Profile (Infantry)",
        "description": "Original endpoint for infantry profiles. This covers the names and loadout IDs connected to a given profile, and additionally provides movement speed multiplier information for infantry classes. Note that the key fields are also provided by `ps2/profile_2`, which not only covers infantry but also vehicles, deployables, and other entities.",
        "tags": [
          "Basics"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/profileIdParam"
          },
          {
            "$ref": "#/components/parameters/loadoutIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "profile_list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/profile"
                      }
                    }
                  }
                },
                "examples": {
                  "trLightAssault": {
                    "$ref": "#/components/examples/profile"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/profile_2": {
      "get": {
        "summary": "Profile (All)",
        "description": "Extended profile endpoint containing all entity types, including NPCs, construction items, and deployables.",
        "tags": [
          "Basics"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/profileIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "profile_2_list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/profile_2"
                      }
                    }
                  }
                },
                "examples": {
                  "sunderer": {
                    "$ref": "#/components/examples/profile_2"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/world": {
      "get": {
        "summary": "World",
        "description": "A game server for a given region and game.",
        "tags": [
          "Basics"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/worldIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "world_list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/world"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "connery": {
                    "$ref": "#/components/examples/world"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/zone": {
      "get": {
        "summary": "Zone",
        "description": "World continent and dynamic zone information.",
        "tags": [
          "Basics"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/zoneIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "zone_list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/zone"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "indar": {
                    "$ref": "#/components/examples/zone"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "collectionParam": {
        "name": "collection",
        "in": "path",
        "description": "Name of the collection to access.",
        "required": true,
        "schema": {
          "type": "string",
          "enum": [
            "character",
            "world",
            "zone"
          ]
        },
        "examples": {
          "character": {
            "summary": "Character",
            "value": "character"
          },
          "outfit": {
            "summary": "Outfit",
            "value": "outfit"
          },
          "world": {
            "summary": "Game Servers",
            "value": "world"
          }
        }
      },
      "gameParam": {
        "name": "game",
        "in": "path",
        "description": "The API game to access.",
        "required": true,
        "schema": {
          "type": "string",
          "enum": [
            "ps2",
            "ps2:v2",
            "ps2ps4eu",
            "ps2ps4eu:v2",
            "ps2ps4us",
            "ps2ps4us:v2"
          ]
        },
        "examples": {
          "ps2": {
            "summary": "PS2 on PC (all servers)",
            "value": "ps2"
          },
          "ps2ps4eu": {
            "summary": "PS2 on PS4 (EU server)",
            "value": "ps2ps4eu"
          },
          "ps2ps4us": {
            "summary": "PS2 on PS4 (US server)",
            "value": "ps2ps4us"
          }
        }
      },
      "qcShowParam": {
        "name": "c:show",
        "in": "query",
        "description": "If set, only the response keys listed will be included in the response object. Overrides `c:hide`. Multiple fields can be comma-separated. Dot-notation is supported to select sub-keys.",
        "schema": {
          "type": "string"
        },
        "style": "form",
        "explode": false,
        "examples": {
          "notSet": {
            "summary": "Unset",
            "value": ""
          },
          "Basic Character Info": {
            "summary": "Basic character info only",
            "value": "name.first,character_id,battle_rank.value,prestige_level"
          }
        }
      },
      "qcHideParam": {
        "name": "c:hide",
        "in": "query",
        "description": "If set, the given response fields will be excluded from the response. If `c:show` is also set, this parameter will be ignored. Multiple fields can be comma-separated. Dot-notation is supported to select sub-keys.",
        "schema": {
          "type": "string"
        },
        "style": "form",
        "explode": false,
        "examples": {
          "hideNoisyKeys": {
            "summary": "Remove noisy subkeys",
            "value": "name.first_lower,cert,daily_ribbon"
          }
        }
      },
      "qcSortParam": {
        "name": "c:sort",
        "in": "query",
        "description": "Allows sorting the results by one or more fields. Multiple fields can be comma-separated. The sorting direction can be specified by appending `:1` (ascending, default) or `:-1` (descending).",
        "schema": {
          "type": "string"
        },
        "style": "form",
        "explode": false,
        "examples": {
          "notSet": {
            "summary": "Unset",
            "value": ""
          },
          "factionAsp": {
            "summary": "Sort by faction (asc) and ASP rank (desc)",
            "value": "faction_id,prestige_level:-1"
          }
        }
      },
      "qcHasParam": {
        "name": "c:has",
        "in": "query",
        "description": "Filters results by entries with non-NULL values in the given fields. Multiple fields can be comma-separated.",
        "schema": {
          "type": "string"
        },
        "style": "form",
        "explode": false
      },
      "qcResolveParam": {
        "name": "c:resolve",
        "in": "query",
        "description": "Include additional fields in the response. See the `resolve_list` field of the collection list for permissible values for a given collection.",
        "schema": {
          "type": "string"
        },
        "style": "form",
        "explode": true,
        "examples": {
          "notSet": {
            "summary": "Unset",
            "value": ""
          },
          "outfitMember": {
            "summary": "Outfit Member",
            "value": "outfit_member"
          },
          "profile": {
            "summary": "Last Seen Profile",
            "value": "profile"
          }
        }
      },
      "qcCaseParam": {
        "name": "c:case",
        "in": "query",
        "description": "Whether case sensitivity is enabled for string comparisongs. Defaults to true. Note that this impacts query performance, `ps2/character.name`, `ps2/outfit.name`, `ps2/outfit.alias` all provide lowercase variants for improved performance.",
        "schema": {
          "type": "string",
          "enum": [
            "true",
            "false",
            "0",
            "1"
          ]
        },
        "examples": {
          "notSet": {
            "summary": "Unset",
            "value": ""
          },
          "disable": {
            "summary": "Disabled",
            "value": "false"
          }
        }
      },
      "qcLimitParam": {
        "name": "c:limit",
        "in": "query",
        "description": "Return up to N results from the collection. Defaults to 1.",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 100000
        },
        "examples": {
          "notSet": {
            "summary": "Unset",
            "value": ""
          },
          "five": {
            "summary": "5 Results",
            "value": 5
          }
        }
      },
      "qcLimitPerDbParam": {
        "name": "c:limitPerDB",
        "in": "query",
        "description": "The `ps2/character` collection is distributed across 20 distinct databases. The per-DB limit may be more predictable in some use-cases. If set, `c:limit` will be ignored. For collections other than `ps2/character`, this parameter falls behaves exactly like `c:limit`.",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 5000
        },
        "examples": {
          "notSet": {
            "summary": "Unset",
            "value": ""
          },
          "five": {
            "summary": "1 Result per DB",
            "value": 1
          }
        }
      },
      "qcStartParam": {
        "name": "c:start",
        "in": "query",
        "description": "Skips the first N results from the result list. Together with `c:limit`, can be used for pagination. Note that sorting may be required to get consistent orderings. Due to the multiple databases used, this behaves unusually for the `ps2/character` collection.",
        "schema": {
          "type": "integer",
          "minimum": 0
        },
        "examples": {
          "notSet": {
            "summary": "Unset",
            "value": 0
          },
          "five": {
            "summary": "Skip first 10 Results",
            "value": 10
          }
        }
      },
      "qcIncludeNullParam": {
        "name": "c:includeNull",
        "in": "query",
        "description": "Whether to include response keys for NULL values, rather than omitting them. Note that this does not return the canonical `null`, but the string `\"NULL\"`.",
        "schema": {
          "type": "string",
          "enum": [
            "true",
            "false",
            "1",
            "0"
          ]
        },
        "examples": {
          "notSet": {
            "summary": "Unset",
            "value": ""
          },
          "five": {
            "summary": "Enabled",
            "value": "true"
          }
        }
      },
      "qcLangParam": {
        "name": "c:lang",
        "in": "query",
        "description": "By default, localized fields such as `ps2/item.name` will return results for all supported locales. This field allows specifying a single locale to return, greatly reducing response payload size.",
        "schema": {
          "type": "string",
          "enum": [
            "en",
            "de",
            "es",
            "fr",
            "it",
            "tr"
          ]
        },
        "examples": {
          "enOnly": {
            "summary": "Only EN locale",
            "value": "en"
          }
        }
      },
      "qcJoinParam": {
        "name": "c:join",
        "in": "query",
        "description": "Similar to `c:resolve`, but allows specifying arbitrary subqueries to add to the response. For details, see the [Census API documentation](https://census.daybreakgames.com/#collection-joining) or the community [Census API Primer](https://github.com/leonhard-s/auraxium/wiki/Census-API-Primer#joined-queries).",
        "schema": {
          "type": "string"
        },
        "style": "form",
        "explode": false,
        "examples": {
          "notSet": {
            "summary": "Unset",
            "value": ""
          },
          "charctersWorld": {
            "summary": "Character with game server",
            "value": "characers_world"
          },
          "characterOnlineStatus": {
            "summary": "Character online status",
            "value": "characters_online_status^show:online_status"
          }
        }
      },
      "qcTreeParam": {
        "name": "c:tree",
        "in": "query",
        "description": "Allows rearranging lists of result into a tree. See the [Census API documentation](https://census.daybreakgames.com/#tree-reformatting) for deatils.",
        "schema": {
          "type": "string"
        }
      },
      "qcTimingParam": {
        "name": "c:timing",
        "in": "query",
        "description": "Adds the top-level field `timing` containing timing information to the result object. For queries using `c:resolve` or `c:join`, this also contains information about the subqueries.",
        "schema": {
          "type": "string",
          "enum": [
            "true",
            "false",
            "0",
            "1"
          ]
        },
        "examples": {
          "notSet": {
            "summary": "Unset",
            "value": ""
          },
          "timing": {
            "summary": "With timing info",
            "value": "true"
          }
        }
      },
      "qcExactMatchFirstParam": {
        "name": "c:exactMatchFirst",
        "in": "query",
        "description": "When performing fuzzy string queries, such as `^` (startswith) or `*` (contains), promote any match exactly matching the full input string to the top of the search list. Useful for user-facing name lookups.",
        "schema": {
          "type": "string",
          "enum": [
            "true",
            "false",
            "0",
            "1"
          ]
        }
      },
      "qcDistinctParam": {
        "name": "c:distinct",
        "in": "query",
        "description": "Instead of fetching results, list all distinct values for a given field. Note that this may include duplicate entries for `ps2/character` due to the multiple databases. Results are truncated to 20'000 values.",
        "schema": {
          "type": "string"
        },
        "examples": {
          "notSet": {
            "summary": "Unset",
            "value": ""
          },
          "factions": {
            "summary": "Unique factions",
            "value": "faction_id"
          },
          "profiles": {
            "summary": "Unique profiles",
            "value": "profile_id"
          }
        }
      },
      "qcRetryParam": {
        "name": "c:retry",
        "in": "query",
        "description": "By default, the API will retry any queries once before failing. By setting this value to `false`, you can fail earlier, which can be useful if you have your own retry mechanisms or logging configuration.",
        "schema": {
          "type": "string",
          "enum": [
            "true",
            "false",
            "0",
            "1"
          ]
        },
        "examples": {
          "notSet": {
            "summary": "Unset",
            "value": ""
          },
          "noRetry": {
            "summary": "Retry disabled",
            "value": "false"
          }
        }
      },
      "characterIdParam": {
        "name": "character_id",
        "in": "query",
        "description": "Unique identifier of a charcter. Note that character IDs are not guaranteed to be unique across games; the same ID may be assigned to different characters for `ps2` than for `ps2ps4us`.\n\nWhen converting this value to native representations, note that a 64 bit integer type is required to avoid truncation.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int64",
        "examples": {
          "pc": {
            "summary": "Higby (PC)",
            "value": "5428010618015189601"
          },
          "ps4eu": {
            "summary": "Dreadnaught (PS4 EU)",
            "value": "5428352936466451601"
          },
          "ps4us": {
            "summary": "Kevin (PS4 US)",
            "value": "5428352933375941729"
          }
        }
      },
      "characterNameFirstParam": {
        "name": "name.first",
        "in": "query",
        "description": "Name of the character. Note that when looking up characters, it is preferable to query `name.first_lower` with a lowercase version of the search string.",
        "schema": {
          "type": "string"
        },
        "examples": {
          "notSet": {
            "summary": "Unset",
            "value": ""
          },
          "higby": {
            "summary": "Higby",
            "value": "Higby"
          }
        }
      },
      "characterNameFirstLowerParam": {
        "name": "name.first_lower",
        "in": "query",
        "description": "Lowercase version of `name.first`. When performing case-insensitive lookups, using this field is more performant than setting `c:case=false`.",
        "schema": {
          "type": "string"
        },
        "examples": {
          "notSet": {
            "summary": "Unset",
            "value": ""
          },
          "higby": {
            "summary": "Higby",
            "value": "higby"
          }
        }
      },
      "factionIdParam": {
        "name": "faction_id",
        "in": "query",
        "description": "Unique identifier of a faction.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "loadoutIdParam": {
        "name": "loadout_id",
        "in": "query",
        "description": "Unique identifier of a loadout.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "outfitIdParam": {
        "name": "outfit_id",
        "in": "query",
        "description": "Unique identifier of an outfit.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int64"
      },
      "profileIdParam": {
        "name": "profile_id",
        "in": "query",
        "description": "Unique identifier of a profile.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "statNameParam_characters_stat": {
        "name": "stat_name",
        "in": "query",
        "description": "Name of a statistic for the `characters_stat` collection.",
        "schema": {
          "type": "string",
          "enum": [
            "achievement_count",
            "assist_count",
            "deaths",
            "facility_defended_count",
            "fire_count",
            "hit_count",
            "medal_count",
            "play_time",
            "score",
            "skill_points",
            "weapon_deaths",
            "weapon_fire_count",
            "weapon_hit_count",
            "weapon_play_time",
            "weapon_score"
          ]
        }
      },
      "profileIdParam_characters_stat": {
        "name": "profile_id",
        "in": "query",
        "description": "Subset of identifiers from the `profile_id` collection. The values map onto the NC loadout IDs regardless of faction. 0: All time, 1: Infiltrator, 3: Light Assault, 4: Combat Medic, 5: Engineer, 6: MAX Unit.",
        "schema": {
          "type": "string",
          "enum": [
            "0",
            "1",
            "3",
            "4",
            "5",
            "6",
            "7"
          ]
        }
      },
      "worldIdParam": {
        "name": "world_id",
        "in": "query",
        "description": "Unique identifier of a world.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "zoneIdParam": {
        "name": "zone_id",
        "in": "query",
        "description": "Unique identifier of a zone.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      }
    },
    "schemas": {
      "datatype": {
        "type": "object",
        "properties": {
          "count": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "type": "string",
                "enum": [
                  "dynamic",
                  "?"
                ]
              }
            ],
            "description": "The number of entries in this colleciton. The values `?` and `dynamic` both signify an uncountable collection. Note that even though no count is displayed here, it may still be accessible via the `count/{game}/{collection}` endpoint."
          },
          "hidden": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "type": "string",
                "enum": [
                  "false"
                ]
              }
            ],
            "description": "Whether this table is hidden from the API. Always false-y. Note that this may either be an actual `false` value, or the string `\"false\"`."
          },
          "name": {
            "type": "string",
            "description": "Unique name of the collection."
          },
          "resolve_list": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of resolvable names for the collection. These can be passed to the `c:resolve` query parameter to insert additional fields into the returned payload."
          }
        }
      },
      "character": {
        "type": "object",
        "properties": {
          "character_id": {
            "type": "string",
            "description": "Unique ID of the collection.",
            "x-cast-to": "int64"
          },
          "name": {
            "type": "object",
            "description": "Name of the character. Use the `first_lower` field for faster case-insensitive searches without needing to set `c:case=false`.",
            "properties": {
              "first": {
                "type": "string"
              },
              "first_lower": {
                "type": "string"
              }
            }
          },
          "faction_id": {
            "type": "string",
            "description": "Faction of the character. For NSOs, this equals the value of NSOs. An NSOs currently or home faction is not exposed on the REST API, but can be determined via the `team_id` of some WebSocket payloads.",
            "x-reference-to": "faction.faction_id",
            "x-cast-to": "int32"
          },
          "head_id": {
            "type": "string",
            "description": "Identifier for the character's in-game model. Note that with gender change tokens, this is no longer guaranteed to be immutable across a character's career.",
            "x-cast-to": "int32"
          },
          "title_id": {
            "type": "string",
            "description": "Currently selected title of the character. Useful for playing long names of players, e.g. \"Snowblower Higby\". A title ID of `0` corresponds to a player having selected \"No Title\" in-game.",
            "x-reference-to": "title.title_id",
            "x-cast-to": "int32"
          },
          "times": {
            "type": "object",
            "description": "Sub-object providing login time and playtime information.",
            "properties": {
              "creation": {
                "type": "string",
                "description": "Character creation timestamp in UTC."
              },
              "creation_date": {
                "type": "string",
                "description": "Human-readable version of `creation`."
              },
              "last_save": {
                "type": "string",
                "description": "Last time the character info was updated. This generally corresponds to the last time the character logged off. For this reason, characters are generally not available on the API during their first play session."
              },
              "last_save_date": {
                "type": "string",
                "description": "Human-readable version of `last_save`."
              },
              "last_login": {
                "type": "string",
                "description": "Last time the character logged in. Together with `last_save`, this can be used to construct the duration of the last play session of the character."
              },
              "last_login_date": {
                "type": "string",
                "description": "Human-readable version of `last_login`."
              },
              "login_count": {
                "type": "string",
                "x-cast-to": "int32",
                "description": "Number of individual logins by the character."
              },
              "minutes_played": {
                "type": "string",
                "x-cast-to": "int32",
                "description": "Total playtime in minutes."
              }
            }
          },
          "certs": {
            "type": "object",
            "description": "Sub-object providing certification point information.",
            "properties": {
              "earned_points": {
                "type": "string",
                "description": "Certifications earned through experience gain.",
                "x-cast-to": "int32"
              },
              "gifted_points": {
                "type": "string",
                "description": "Certifications gifted through in-game events or refunds.",
                "x-cast-to": "int32"
              },
              "spent_points": {
                "type": "string",
                "description": "Certifications points spent on skills and implant bundles.",
                "x-cast-to": "int32"
              },
              "available_points": {
                "type": "string",
                "description": "Current certification point balance.",
                "x-cast-to": "int32"
              },
              "percent_to_next": {
                "type": "string",
                "description": "Progress to earning the next certification point (every 250 exp).",
                "x-cast-to": "float"
              }
            }
          },
          "battle_rank": {
            "type": "object",
            "description": "Sub-object providing battle rank information.",
            "properties": {
              "percent_to_next": {
                "type": "string",
                "description": "Progress to the next level-up.",
                "x-cast-to": "float"
              },
              "value": {
                "type": "string",
                "description": "Current battle rank. Note that due to the A.S.P. prestige system, this is no longer sufficient to express player level. Always check `prestige_level` as well."
              }
            }
          },
          "profile_id": {
            "type": "string",
            "description": "Class of the character when the last logged off. This value can generally only be one of the 24 infantry classes available in the legacy `ps2/profile` collection, though other values are possible due to bad data or deleted characters.",
            "x-cast-to": "int32",
            "x-reference-to": "profile_2.profile_id"
          },
          "daily_ribbon": {
            "type": "object",
            "description": "Sub-object for daily ribbon bonuses. Note that ribbon bonuses have been disabled, rendering this object useless. It is recommended to treat is as optional in client code in case it ever gets removed from the response object.",
            "properties": {
              "count": {
                "type": "string",
                "description": "Number of daily ribbon bonuses available for collection.",
                "x-cast-to": "int32"
              },
              "time": {
                "type": "string",
                "description": "Next time a daily ribbon bonus will be granted."
              },
              "date": {
                "type": "string",
                "description": "Human-readable version of `time`."
              }
            }
          },
          "prestige_level": {
            "type": "string",
            "description": "The A.S.P. rank of the character.",
            "x-cast-to": "int32"
          }
        }
      },
      "character_name": {
        "type": "object",
        "properties": {
          "character_id": {
            "type": "string",
            "description": "Unique ID of the collection.",
            "x-cast-to": "int64"
          },
          "name": {
            "type": "object",
            "description": "Name of the character. Use the `first_lower` field for faster case-insensitive searches without needing to set `c:case=false`.",
            "properties": {
              "first": {
                "type": "string"
              },
              "first_lower": {
                "type": "string"
              }
            }
          }
        }
      },
      "characters_friend": {
        "type": "object",
        "properties": {
          "character_id": {
            "type": "string",
            "description": "Character for which the friends list is being returned.",
            "x-cast-to": "int64",
            "x-reference-to": "character.character_id"
          },
          "name": {
            "type": "string",
            "description": "Defunct. Always returns `null`."
          },
          "friend_list": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "character_id": {
                  "type": "string",
                  "description": "Character ID of the friend.",
                  "x-cast-to": "int64",
                  "x-reference-to": "character.character_id"
                },
                "last_login_time": {
                  "type": "string",
                  "description": "Last time the friend logged in."
                },
                "online": {
                  "type": "string",
                  "description": "Whether the friend is currently online. Offline players will return 0, otherwise the value will be the `world_id` of the `ps2/world` they are online on.",
                  "x-cast-to": "int32"
                }
              }
            }
          }
        }
      },
      "characters_online_status": {
        "type": "object",
        "properties": {
          "character_id": {
            "type": "string",
            "description": "Character for which the online status is being returned.",
            "x-cast-to": "int64",
            "x-reference-to": "character.character_id"
          },
          "online_status": {
            "type": "string",
            "description": "Whether the character is currently online. Offline players will return 0, otherwise the value will be the `world_id` of the `ps2/world` they are online on.",
            "x-cast-to": "int32"
          }
        }
      },
      "characters_stat": {
        "type": "object",
        "properties": {
          "character_id": {
            "type": "string",
            "description": "Character for which the stats are being returned.",
            "x-cast-to": "int64",
            "x-reference-to": "character.character_id"
          },
          "stat_name": {
            "type": "string",
            "description": "Name of the stat being returned."
          },
          "profile_id": {
            "type": "string",
            "description": "Class for which stats are being returne.",
            "x-cast-to": "int32",
            "x-reference-to": "profile_2.profile_id"
          },
          "value_forever": {
            "type": "string",
            "description": "All-time value of the stat.",
            "x-cast-to": "int32"
          },
          "value_monthly": {
            "type": "string",
            "description": "Value of the stat for the last 30 days.",
            "x-cast-to": "int32"
          },
          "value_weekly": {
            "type": "string",
            "description": "Value of the stat for the last 7 days.",
            "x-cast-to": "int32"
          },
          "value_daily": {
            "type": "string",
            "description": "Value of the stat for the last 24 hours.",
            "x-cast-to": "int32"
          },
          "value_one_life_max": {
            "type": "string",
            "description": "Highest value of the stat in a single life.",
            "x-cast-to": "int32"
          },
          "last_save": {
            "type": "string",
            "description": "Last time the stat was saved."
          },
          "last_save_date": {
            "type": "string",
            "description": "Human-readable version of `last_save`."
          }
        }
      },
      "faction": {
        "type": "object",
        "properties": {
          "faction_id": {
            "type": "string",
            "description": "Unique ID of the collection.",
            "x-cast-to": "int32"
          },
          "name": {
            "description": "Canonical name of the faction",
            "$ref": "#/components/schemas/localized_string"
          },
          "image_set_id": {
            "type": "string",
            "description": "The `ps2/image_set` of the faction.",
            "x-cast-to": "int32",
            "x-reference-to": "image_set.image_set_id"
          },
          "image_id": {
            "type": "string",
            "description": "The `ps2/image` of the faction.",
            "x-cast-to": "int32",
            "x-reference-to": "image.image_id"
          },
          "image_path": {
            "type": "string",
            "description": "Relative path to the default image of the faction."
          },
          "code_tag": {
            "type": "string",
            "description": "The unique tag of the faction, or `None` for common-pool nanite systems."
          },
          "user_selectable": {
            "type": "string",
            "description": "Whether this faction is playable or reserved for NPCs.",
            "x-cast-to": "bool"
          }
        }
      },
      "characters_world": {
        "type": "object",
        "properties": {
          "character_id": {
            "type": "string",
            "description": "Character for which the world is being returned.",
            "x-cast-to": "int64",
            "x-reference-to": "character.character_id"
          },
          "world_id": {
            "type": "string",
            "description": "The `ps2/world` of the character.",
            "x-cast-to": "int32",
            "x-reference-to": "world.world_id"
          }
        }
      },
      "loadout": {
        "type": "object",
        "properties": {
          "loadout_id": {
            "type": "string",
            "description": "Unique ID of the collection.",
            "x-cast-to": "int32"
          },
          "profile_id": {
            "type": "string",
            "description": "The `ps2/profile_2` matching this loadout.",
            "x-cast-to": "int32",
            "x-reference-to": "profile_2.profile_id"
          },
          "faction_id": {
            "type": "string",
            "description": "The `ps2/faction` of the loadout.",
            "x-cast-to": "int32",
            "x-reference-to": "faction.faction_id"
          }
        }
      },
      "outfit": {
        "type": "object",
        "properties": {
          "outfit_id": {
            "type": "string",
            "description": "Unique ID of the collection.",
            "x-cast-to": "int64"
          },
          "name": {
            "type": "string",
            "description": "Canonical name of the outfit."
          },
          "name_lower": {
            "type": "string",
            "description": "Lowercase version of `name`."
          },
          "alias": {
            "type": "string",
            "description": "The outfit's alias (aka. tag), or an empty string if the outfit has no alias."
          },
          "alias_lower": {
            "type": "string",
            "description": "Lowercase version of `alias`."
          },
          "time_created": {
            "type": "string",
            "description": "Time the outfit was created."
          },
          "time_creeated_date": {
            "type": "string",
            "description": "Human-readable version of `time_created`."
          },
          "leader_character_id": {
            "type": "string",
            "description": "The `ps2/character` of the outfit's leader.",
            "x-cast-to": "int64",
            "x-reference-to": "character.character_id"
          },
          "member_count": {
            "type": "string",
            "description": "Number of members in the outfit.",
            "x-cast-to": "int32"
          }
        }
      },
      "outfit_member": {
        "type": "object",
        "properties": {
          "outfit_id": {
            "type": "string",
            "description": "The `ps2/outfit` the character is a member of.",
            "x-cast-to": "int64",
            "x-reference-to": "outfit.outfit_id"
          },
          "character_id": {
            "type": "string",
            "description": "The `ps2/character` for this membership entry.",
            "x-cast-to": "int64",
            "x-reference-to": "character.character_id"
          },
          "member_since": {
            "type": "string",
            "description": "Time the character joined the outfit."
          },
          "member_since_date": {
            "type": "string",
            "description": "Human-readable version of `member_since`."
          },
          "rank": {
            "type": "string",
            "description": "Custom rank of the character in the outfit.",
            "x-cast-to": "int32"
          },
          "rank_ordinal": {
            "type": "string",
            "description": "Ordinal of the character's rank in the outfit. Lower values are higher ranks.",
            "x-cast-to": "int32"
          }
        }
      },
      "outfit_member_extended": {
        "type": "object",
        "properties": {
          "character_id": {
            "type": "string",
            "description": "The `ps2/character` for this membership entry.",
            "x-cast-to": "int64",
            "x-reference-to": "character.character_id"
          },
          "member_since": {
            "type": "string",
            "description": "Time the character joined the outfit."
          },
          "member_since_date": {
            "type": "string",
            "description": "Human-readable version of `member_since`."
          },
          "member_rank": {
            "type": "string",
            "description": "Custom rank of the character in the outfit.",
            "x-cast-to": "int32"
          },
          "member_rank_ordinal": {
            "type": "string",
            "description": "Ordinal of the character's rank in the outfit. Lower values are higher ranks.",
            "x-cast-to": "int32"
          },
          "outfit_id": {
            "type": "string",
            "description": "The `ps2/outfit` the character is a member of.",
            "x-cast-to": "int64",
            "x-reference-to": "outfit.outfit_id"
          },
          "name": {
            "type": "string",
            "description": "Canonical name of the outfit."
          },
          "name_lower": {
            "type": "string",
            "description": "Lowercase version of `name`."
          },
          "alias": {
            "type": "string",
            "description": "The outfit's alias (aka. tag), or an empty string if the outfit has no alias."
          },
          "alias_lower": {
            "type": "string",
            "description": "Lowercase version of `alias`."
          },
          "time_created": {
            "type": "string",
            "description": "Time the outfit was created."
          },
          "time_creeated_date": {
            "type": "string",
            "description": "Human-readable version of `time_created`."
          },
          "leader_character_id": {
            "type": "string",
            "description": "The `ps2/character` of the outfit's leader.",
            "x-cast-to": "int64",
            "x-reference-to": "character.character_id"
          },
          "member_count": {
            "type": "string",
            "description": "Number of members in the outfit.",
            "x-cast-to": "int32"
          }
        }
      },
      "outfit_rank": {
        "type": "object",
        "properties": {
          "outfit_id": {
            "type": "string",
            "description": "The `ps2/outfit` the rank belongs to.",
            "x-cast-to": "int64",
            "x-reference-to": "outfit.outfit_id"
          },
          "ordinal": {
            "type": "string",
            "description": "Ordinal of the rank. Lower values are higher ranks.",
            "x-cast-to": "int32"
          },
          "name": {
            "type": "string",
            "description": "Custom name of the rank."
          },
          "description": {
            "type": "string",
            "description": "Custom description of the rank."
          }
        }
      },
      "profile": {
        "type": "object",
        "properties": {
          "profile_id": {
            "type": "string",
            "description": "Unique ID of the collection.",
            "x-cast-to": "int32"
          },
          "profile_type_id": {
            "type": "string",
            "description": "The type of the profile. There is no public `profile_type` collection, this is an internal ID.",
            "x-cast-to": "int32"
          },
          "profile_type_description": {
            "type": "string",
            "description": "Internal description for the associated `profile_type_id`."
          },
          "name": {
            "description": "Localized name of the profile",
            "$ref": "#/components/schemas/localized_string"
          },
          "description": {
            "description": "Localized description of the profile",
            "$ref": "#/components/schemas/localized_string"
          },
          "image_set_id": {
            "type": "string",
            "description": "The `ps2/image_set` of the profile.",
            "x-cast-to": "int32",
            "x-reference-to": "image_set.image_set_id"
          },
          "image_id": {
            "type": "string",
            "description": "The `ps2/image` of the profile.",
            "x-cast-to": "int32",
            "x-reference-to": "image.image_id"
          },
          "image_path": {
            "type": "string",
            "description": "Relative path to the default image of the profile."
          },
          "movement_speed": {
            "type": "string",
            "description": "The base movement speed of the profile.",
            "x-cast-to": "float"
          },
          "backpedal_speed_modifier": {
            "type": "string",
            "description": "The modifier applied to the movement speed when walking backwards.",
            "x-cast-to": "float"
          },
          "sprint_speed_modifier": {
            "type": "string",
            "description": "The modifier applied to the movement speed when sprinting.",
            "x-cast-to": "float"
          },
          "crouch_speed_modifier": {
            "type": "string",
            "description": "The modifier applied to the movement speed when crouching.",
            "x-cast-to": "float"
          }
        }
      },
      "profile_2": {
        "type": "object",
        "properties": {
          "profile_id": {
            "type": "string",
            "description": "Unique ID of the collection. Note that this is one of the few collections where the ID field is not `<collection>_id`.",
            "x-cast-to": "int32"
          },
          "description": {
            "type": "string",
            "description": "Internal description of this profile. Not localized or user-facing."
          }
        }
      },
      "world": {
        "type": "object",
        "properties": {
          "world_id": {
            "type": "string",
            "description": "Unique ID of the collection.",
            "x-cast-to": "int32"
          },
          "state": {
            "type": "string",
            "enum": [
              "online",
              "locked"
            ],
            "description": "Current availability of the game server."
          },
          "name": {
            "description": "Localized name of the world",
            "$ref": "#/components/schemas/localized_string"
          },
          "description": {
            "description": "Localized description set for some worlds. Unused for most.",
            "$ref": "#/components/schemas/localized_string"
          }
        }
      },
      "zone": {
        "type": "object",
        "properties": {
          "zone_id": {
            "type": "string",
            "description": "Unique ID of the collection.",
            "x-cast-to": "int32"
          },
          "code": {
            "type": "string",
            "description": "Internal code of the zone. Used to connect map textures to the zone."
          },
          "hex_size": {
            "type": "string",
            "description": "Radius of a map hex in metres.",
            "x-cast-to": "float"
          },
          "name": {
            "description": "Localized name of the zone",
            "$ref": "#/components/schemas/localized_string"
          },
          "description": {
            "description": "Localized description of the zone",
            "$ref": "#/components/schemas/localized_string"
          },
          "geometry_id": {
            "type": "string",
            "description": "Internal geometry ID of the zones with dynamic IDs. Prior to this field being added, this ID was referred to as `definition_id` by community developers.",
            "x-cast-to": "int32"
          },
          "dynamic": {
            "type": "string",
            "description": "Whether this zone is dynamic or not. Multiple dynamic zones of the same `geometry_id` may exist for a given `ps2/world`, such as Sanctuary instances or Outfit Wars rooms.",
            "x-cast-to": "bool"
          }
        }
      },
      "localized_string": {
        "type": "object",
        "properties": {
          "de": {
            "type": "string",
            "description": "German locale"
          },
          "en": {
            "type": "string",
            "description": "English locale"
          },
          "es": {
            "type": "string",
            "description": "Spanish locale"
          },
          "fr": {
            "type": "string",
            "description": "French locale"
          },
          "it": {
            "type": "string",
            "description": "Italian locale"
          },
          "tr": {
            "type": "string",
            "description": "Turkish locale, unfinished and not available for most fields"
          }
        }
      }
    },
    "examples": {
      "character_higby": {
        "summary": "Higby",
        "value": {
          "character_list": [
            {
              "character_id": "5428010618015189601",
              "name": {
                "first": "Higby",
                "first_lower": "higby"
              },
              "faction_id": "2",
              "head_id": "1",
              "title_id": "100",
              "times": {
                "creation": "1353427357",
                "creation_date": "2012-11-20 16:02:37.0",
                "last_save": "1669323771",
                "last_save_date": "2022-11-24 21:02:51.0",
                "last_login": "1669320455",
                "last_login_date": "2022-11-24 20:07:35.0",
                "login_count": "1738",
                "minutes_played": "75517"
              },
              "certs": {
                "earned_points": "214706",
                "gifted_points": "78844",
                "spent_points": "257491",
                "available_points": "36059",
                "percent_to_next": "0.1721388888362"
              },
              "battle_rank": {
                "percent_to_next": "2",
                "value": "101"
              },
              "profile_id": "4",
              "daily_ribbon": {
                "count": "0",
                "time": "1669248000",
                "date": "2022-11-24 00:00:00.0"
              },
              "prestige_level": "0"
            }
          ],
          "returned": 1
        }
      },
      "character_name_higby": {
        "summary": "Higby",
        "value": {
          "character_list": [
            {
              "character_id": "5428010618015189601",
              "name": {
                "first": "Higby",
                "first_lower": "higby"
              }
            }
          ],
          "returned": 1
        }
      },
      "characters_friend": {
        "summary": "Higby",
        "description": "Only the first 3 friends are shown for brevity.",
        "value": {
          "characters_friend_list": [
            {
              "character_id": "5428010618015189601",
              "name": null,
              "friend_list": [
                {
                  "character_id": "5428010618014254785",
                  "last_login_time": "1679721693",
                  "online": "0"
                },
                {
                  "character_id": "5428010618014429969",
                  "last_login_time": "1658899596",
                  "online": "0"
                },
                {
                  "character_id": "5428010618015193969",
                  "last_login_time": "1679718619",
                  "online": "0"
                }
              ]
            }
          ],
          "returned": 1
        }
      },
      "characters_online_status": {
        "summary": "Higby",
        "value": {
          "characters_online_status_list": [
            {
              "character_id": "5428010618015189601",
              "online_status": "0"
            }
          ],
          "returned": 1
        }
      },
      "characters_world": {
        "summary": "Higby",
        "value": {
          "characters_world_list": [
            {
              "character_id": "5428010618015189601",
              "world_id": "1"
            }
          ],
          "returned": 1
        }
      },
      "characters_stat": {
        "summary": "Character Statistics",
        "description": "Shows the playtime for Combat Medic.\nhttps://census.daybreakgames.com/get/ps2/characters_stat?character_id=5428072203494645969&stat_name=play_time&profile_id=4",
        "value": {
          "characters_stat_list": [
            {
              "character_id": "5428072203494645969",
              "stat_name": "play_time",
              "profile_id": "4",
              "value_forever": "4947689",
              "value_monthly": "41461",
              "value_weekly": "13599",
              "value_daily": "197",
              "value_one_life_max": "10459",
              "last_save": "1684499211",
              "last_save_date": "2023-05-19 12:26:50.711936"
            }
          ],
          "returned": 1
        }
      },
      "collection_characterInfo": {
        "summary": "Character Info",
        "description": "Shows basic character information while hiding unwanted fields.\nhttps://census.daybreakgames.com/get/ps2/character?c:show=name.first,faction_id,battle_rank.value,prestige_level",
        "value": {
          "character_list": [
            {
              "name": {
                "first": "360Xvortex"
              },
              "faction_id": "3",
              "battle_rank": {
                "value": "1"
              },
              "prestige_level": "0"
            }
          ],
          "returned": 1
        }
      },
      "collection_factionTags": {
        "summary": "Faction tags",
        "description": "Uses `c:distinct` to get all faction tags.\nhttps://census.daybreakgames.com/get/ps2/faction?c:distinct=code_tag",
        "value": {
          "count": 5,
          "faction_list": [
            {
              "code_tag": [
                "NC",
                "None",
                "NSO",
                "TR",
                "VS"
              ]
            }
          ],
          "returned": 1
        }
      },
      "collection_mapFacilities": {
        "summary": "Map state with facility names",
        "description": "Example using nested key access to insert data into the middle of a payload. Note that only one record is shown for brevity, the provided link returns the entire zone's region list.\nhttps://census.daybreakgames.com/get/ps2/map?world_id=1&zone_ids=2&c:join=map_region%5Einject_at:map_region%5Eon:Regions.Row.RowData.RegionId%5Eto:map_region_id",
        "value": {
          "map_list": [
            {
              "ZoneId": "2",
              "Regions": {
                "IsList": "1",
                "Row": [
                  {
                    "RowData": {
                      "RegionId": "2101",
                      "FactionId": "3",
                      "map_region": {
                        "map_region_id": "2101",
                        "zone_id": "2",
                        "facility_id": "7500",
                        "facility_name": "Hvar",
                        "facility_type_id": "4",
                        "facility_type": "Tech Plant",
                        "location_x": "-656.0273",
                        "location_y": "491.7669",
                        "location_z": "-2444.069",
                        "reward_amount": "1",
                        "reward_currency_id": "1000"
                      }
                    }
                  }
                ]
              }
            }
          ],
          "returned": 1
        }
      },
      "count_success": {
        "summary": "Success",
        "value": {
          "count": 14
        }
      },
      "count_error": {
        "summary": "Error",
        "value": {
          "count": -1
        }
      },
      "datatype_character": {
        "summary": "Character",
        "value": {
          "datatype_list": {
            "name": "character",
            "hidden": false,
            "count": 15095335,
            "resolve_list": [
              "item",
              "item_full",
              "profile",
              "faction",
              "stat",
              "stat_by_faction",
              "weapon_stat",
              "weapon_stat_by_faction",
              "stat_history",
              "online_status",
              "friends",
              "world",
              "outfit",
              "outfit_member",
              "outfit_member_extended",
              "currency"
            ]
          },
          "returned": 1
        }
      },
      "datatype_outfitMember": {
        "summary": "Outfit Member",
        "value": {
          "datatype_list": {
            "name": "outfit_member",
            "hidden": false,
            "count": "?",
            "resolve_list": [
              "character",
              "character_name",
              "characters_stat_history",
              "online_status",
              "outfit"
            ]
          },
          "returned": 1
        }
      },
      "datatype_characterOnlineStatus": {
        "summary": "Character Online Status",
        "value": {
          "datatype_list": {
            "count": "dynamic",
            "hidden": "false",
            "name": "characters_online_status",
            "resolve_list": []
          },
          "returned": 1
        }
      },
      "faction": {
        "summary": "TR",
        "value": {
          "faction_list": [
            {
              "faction_id": "3",
              "name": {
                "de": "Terranische Republik",
                "en": "Terran Republic",
                "es": "República Terran",
                "fr": "République Terrane",
                "it": "Repubblica Terrestre",
                "tr": "Terran Cumhuriyeti"
              },
              "image_set_id": "20",
              "image_id": "18",
              "image_path": "/files/ps2/images/static/18.png",
              "code_tag": "TR",
              "user_selectable": "1"
            }
          ],
          "returned": 1
        }
      },
      "loadout": {
        "summary": "NC Infiltrator",
        "value": {
          "loadout_list": [
            {
              "loadout_id": "1",
              "profile_id": "2",
              "faction_id": "2",
              "code_name": "NC Infiltrator"
            }
          ],
          "returned": 1
        }
      },
      "outfit": {
        "summary": "Friday Night Ops",
        "value": {
          "outfit_list": [
            {
              "outfit_id": "37525047953333155",
              "name": "Friday Night Ops",
              "name_lower": "friday night ops",
              "alias": "FNO",
              "alias_lower": "fno",
              "time_created": "1413001215",
              "time_created_date": "2014-10-11 04:20:15.0",
              "leader_character_id": "5428010618015197505",
              "member_count": "5"
            }
          ],
          "returned": 1
        }
      },
      "outfit_member": {
        "summary": "Luperza",
        "value": {
          "outfit_member_list": [
            {
              "outfit_id": "37525047953333155",
              "character_id": "5428010618015197505",
              "member_since": "1413001215",
              "member_since_date": "2014-10-11 04:20:15.0",
              "rank": "Leader",
              "rank_ordinal": "1"
            }
          ],
          "returned": 1
        }
      },
      "outfit_member_extended": {
        "summary": "Luperza",
        "value": {
          "outfit_member_extended_list": [
            {
              "character_id": "5428010618015197505",
              "member_since": "1413001215",
              "member_since_date": "2014-10-11 04:20:15.0",
              "member_rank": "Leader",
              "member_rank_ordinal": "1",
              "outfit_id": "37525047953333155",
              "name": "Friday Night Ops",
              "name_lower": "friday night ops",
              "alias": "FNO",
              "alias_lower": "fno",
              "time_created": "1413001215",
              "time_created_date": "2014-10-11 04:20:15.0",
              "leader_character_id": "5428010618015197505",
              "member_count": "5"
            }
          ],
          "returned": 1
        }
      },
      "outfit_rank": {
        "summary": "URGE Bastion Commander",
        "value": {
          "outfit_rank_list": [
            {
              "outfit_id": "37564049462661850",
              "ordinal": "5",
              "name": "BASTION COMMANDER",
              "description": "Outfit Enlisted"
            }
          ],
          "returned": 1
        }
      },
      "profile": {
        "summary": "TR Light Assault",
        "value": {
          "profile_list": [
            {
              "profile_id": "12",
              "profile_type_id": "3",
              "profile_type_description": "Light Assault",
              "faction_id": "3",
              "name": {
                "de": "Leichte Angriffseinheit",
                "en": "Light Assault",
                "es": "Asalto ligero",
                "fr": "Assaut léger",
                "it": "Assalto Leggero",
                "tr": "Hafif Taarruz"
              },
              "description": {
                "de": "Leichte Angriffseinheit",
                "en": "Light Assault",
                "es": "Asalto ligero",
                "fr": "Assaut léger",
                "it": "Assalto Leggero",
                "tr": "Hafif Taarruz"
              },
              "image_set_id": "8",
              "image_id": "62",
              "image_path": "/files/ps2/images/static/62.png",
              "movement_speed": "4",
              "backpedal_speed_modifier": "0.75",
              "sprint_speed_modifier": "1.625",
              "strafe_speed_modifier": "0.75"
            }
          ],
          "returned": 1
        }
      },
      "profile_2": {
        "summary": "Sunderer",
        "value": {
          "profile_2_list": [
            {
              "profile_id": "33",
              "description": "Sunderer"
            }
          ],
          "returned": 1
        }
      },
      "world": {
        "summary": "Cobalt",
        "value": {
          "world_list": [
            {
              "world_id": "13",
              "state": "online",
              "name": {
                "en": "Cobalt",
                "de": "Cobalt",
                "es": "Cobalt",
                "fr": "Cobalt",
                "it": "Cobalt",
                "tr": "Cobalt"
              }
            }
          ],
          "returned": 1
        }
      },
      "zone": {
        "summary": "Oshur",
        "value": {
          "zone_list": [
            {
              "zone_id": "344",
              "code": "Oshur",
              "hex_size": "100",
              "name": {
                "de": "Oshur",
                "en": "Oshur",
                "es": "Oshur",
                "fr": "Oshur",
                "it": "Oshur"
              },
              "description": {
                "de": "Oshurs Strand-Archipel und das glitzernde blaue Wasser bieten die Möglichkeit für Einsätze zu Land, Luft und Wasser.",
                "en": "Oshur's sandy archipelago and sparkling blue waters provide opportunities for engagement by land, sea, and air.",
                "es": "El arenoso archipiélago de Oshur y sus resplandecientes aguas azules son el entorno ideal para luchar por tierra, mar y aire.",
                "fr": "L'archipel sablonneux d'Oshur et ses eaux bleues cristallines offrent des possibilités de combats terrestres, maritimes et aériens.",
                "it": "L'arcipelago sabbioso e le vivaci acque blu di Oshur forniscono ottime opportunità d'ingaggio via mare, terra e aria."
              },
              "geometry_id": "367",
              "dynamic": "0"
            }
          ],
          "returned": 1
        }
      }
    }
  }
}