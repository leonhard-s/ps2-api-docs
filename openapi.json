{
  "openapi": "3.1.0",
  "info": {
    "title": "PlanetSide 2 API",
    "summary": "Public API for PlanetSide 2 community developers",
    "description": "Unofficial API specification for [PlanetSide 2](https://www.planetside2.com/) as made available through the [Daybreak Game Company Census API](https://census.daybreakgames.com/).\n\nThese API specs are not affiliated with Daybreak Game Company, Rogue Planet Games, or the PlanetSide 2 developer team and come with absolutely no warranty.",
    "termsOfService": "https://census.daybreakgames.com#services-api-policy",
    "contact": {
      "name": "Project Homepage",
      "url": "https://github.com/leonhard-s/ps2-api-docs"
    },
    "version": "0.3"
  },
  "jsonSchemaDialect": "https://spec.openapis.org/oas/3.1/dialect/base",
  "externalDocs": {
    "description": "Official documentation for the documentation for the PlanetSide 2 API.",
    "url": "https://census.daybreakgames.com/"
  },
  "servers": [
    {
      "url": "https://census.daybreakgames.com",
      "description": "Casual-use Daybreak Games endpoint, throttled to 10 requests per minute and IP address"
    },
    {
      "url": "https://census.daybreakgames.com/{serviceId}",
      "description": "Production Daybreak Games endpoint, with service ID",
      "variables": {
        "serviceId": {
          "enum": [
            "s:example"
          ],
          "default": "s:example",
          "description": "Unique string used to identify a given consumer on the API. The default value of `s:example` underlies the same rate limits as the endpoint without service ID information. A custom service ID can be requested via [this form](https://census.daybreakgames.com/#devSignup)."
        }
      }
    },
    {
      "url": "https://census.lithafalcon.cc",
      "description": "Unofficial Community endpoint for static data.\nVisit the project URL for details."
    }
  ],
  "tags": [
    {
      "name": "Game-Agnostic Endpoints",
      "description": "Generic documentation of the Census API endpoints available for all games. The PlanetSide 2 endpoints are listed separtely to provide more detail, but they generally also support the full set of query parameters and commands list here. For a list of exceptions, see the [\"Special\" PS2 Collections](https://census.daybreakgames.com/#special-collections) section of the Census API documentation."
    },
    {
      "name": "Character Information",
      "description": "Collections related to PlanetSide 2 character information and lookups."
    },
    {
      "name": "Basics",
      "description": "General information about factions, classes, continents, and servers in PlanetSide 2."
    },
    {
      "name": "Player Outfits",
      "description": "Collections related to PlanetSide 2 outfits and outfit membership."
    },
    {
      "name": "Statistics",
      "description": "Collections concerning character statistics for weapon, classes, or vehicles."
    },
    {
      "name": "Leaderboards",
      "description": "Global or server-wide leaderboards for select statistics."
    },
    {
      "name": "Items & Bundles",
      "description": "Collections related to item enumeration and availability, as well as the in-game depot."
    },
    {
      "name": "Weapons & Firing Mechanics",
      "description": "Weapon and firing mechanics data, including fire modes, projectiles, and ammo types."
    },
    {
      "name": "Vehicles",
      "description": "Collections related to vehicles, attachments, and vehicle certifications."
    },
    {
      "name": "Damage Calculation",
      "description": "Armor values and resistances."
    },
    {
      "name": "Effects & Abilities",
      "description": "Collections related to abilities, effects, their types and consumed resources."
    },
    {
      "name": "Certifications & A.S.P.",
      "description": "Collections related to certification trees and A.S.P. skills."
    },
    {
      "name": "Progression",
      "description": "Collections related to in-game progression, such as directives, weapon medals, titles, and service ribbons."
    },
    {
      "name": "Map Data",
      "description": "Collections related to map rendering, such as facility types, lattice links, and map hexes."
    },
    {
      "name": "Image Assets",
      "description": "Image sets, icons and other assets available through the static `/files/` path."
    },
    {
      "name": "Metagame & Alerts",
      "description": "Endpoints related to in-game alerts, outfit wars, and other large-scale events."
    },
    {
      "name": "Event History",
      "description": "ReST interface for in-game events, such as kills, deaths, and battle rank gains."
    }
  ],
  "security": [],
  "paths": {
    "/get/{game}": {
      "get": {
        "summary": "Listing available collections",
        "description": "Return a list of all collections available for the current game namespace.\n\nThe keys in the entries' `resolve_list` field can be passed to the `c:resolve` parameter when accessing the respective collection to insert additional data into the response payload.\n\nNote that while the examples only show a single record, this endpoint cannot be filtered and always returns all results.",
        "tags": [
          "Game-Agnostic Endpoints"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "datatype_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/datatype.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer"
                    }
                  }
                },
                "examples": {
                  "character": {
                    "$ref": "#/components/examples/datatype_character"
                  },
                  "outfitMember": {
                    "$ref": "#/components/examples/datatype_outfitMember"
                  },
                  "characterOnlineStatus": {
                    "$ref": "#/components/examples/datatype_characterOnlineStatus"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/count/{game}/{collection}": {
      "get": {
        "summary": "Get the number of records in a collection",
        "description": "Instead of returning the given results directly, this endpoint returns the number of results.\n\nThis is especially useful for large collections which cannot be fetched in full, such as `ps2/character`. This endpoint still supports filtering by parameters, as well as some query commands such as `c:has`.\n\nConsumers may also want to query the result count for a given query before fetching to decide whether to paginate the response.",
        "tags": [
          "Game-Agnostic Endpoints"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/collectionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                },
                "examples": {
                  "success": {
                    "$ref": "#/components/examples/count_success"
                  },
                  "error": {
                    "$ref": "#/components/examples/count_error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/{collection}": {
      "get": {
        "summary": "Retrieve results from a collection",
        "description": "This endpoint documents generic parameters available on most collections. For details on collection-specific variables and response schemas, please see the respective collection's query entry.",
        "tags": [
          "Game-Agnostic Endpoints"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/collectionParam"
          },
          {
            "$ref": "#/components/parameters/qcShowParam"
          },
          {
            "$ref": "#/components/parameters/qcHideParam"
          },
          {
            "$ref": "#/components/parameters/qcSortParam"
          },
          {
            "$ref": "#/components/parameters/qcHasParam"
          },
          {
            "$ref": "#/components/parameters/qcResolveParam"
          },
          {
            "$ref": "#/components/parameters/qcCaseParam"
          },
          {
            "$ref": "#/components/parameters/qcLimitParam"
          },
          {
            "$ref": "#/components/parameters/qcLimitPerDbParam"
          },
          {
            "$ref": "#/components/parameters/qcStartParam"
          },
          {
            "$ref": "#/components/parameters/qcIncludeNullParam"
          },
          {
            "$ref": "#/components/parameters/qcLangParam"
          },
          {
            "$ref": "#/components/parameters/qcJoinParam"
          },
          {
            "$ref": "#/components/parameters/qcTreeParam"
          },
          {
            "$ref": "#/components/parameters/qcTimingParam"
          },
          {
            "$ref": "#/components/parameters/qcExactMatchFirstParam"
          },
          {
            "$ref": "#/components/parameters/qcDistinctParam"
          },
          {
            "$ref": "#/components/parameters/qcRetryParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "{collection}_list": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": true
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "timing": {
                      "type": "object",
                      "summary": "Only included if `c:timing` is enabled.",
                      "properties": {
                        "total-ms": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "characterInfo": {
                    "$ref": "#/components/examples/collection_characterInfo"
                  },
                  "factionTags": {
                    "$ref": "#/components/examples/collection_factionTags"
                  },
                  "mapFacilities": {
                    "$ref": "#/components/examples/collection_mapFacilities"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/ability": {
      "get": {
        "summary": "Ability",
        "description": "An ability triggered by a character or vehicle.\n\nAbilities in the API are more generic than the in-game abilities and also cover other mechanics such as scopes and consumables.\n\nThe generic fields `paramX` and `stringX` are documented in the the corresponding `ps2/ability_type` entry.",
        "tags": [
          "Effects & Abilities"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/abilityIdParam"
          },
          {
            "$ref": "#/components/parameters/abilityTypeIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ability_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/ability.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "ability": {
                    "$ref": "#/components/examples/ability"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/ability_type": {
      "get": {
        "summary": "Ability Type",
        "description": "A type of ability.\n\nThe generic fields `paramX` and `stringX` are documented here. Note that most of these generic fields are currently not used.",
        "tags": [
          "Effects & Abilities"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/abilityTypeIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ability_type_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/ability_type.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "ability_type": {
                    "$ref": "#/components/examples/ability_type"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/achievement": {
      "get": {
        "summary": "Achievements",
        "description": "Endpoint for weapon medals and service ribbons.\n\nThere is no \"achievement type\" collection or field, but they can be grouped by the `repeatable` field, which is only true for service ribbons.",
        "tags": [
          "Progression"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/achievementIdParam"
          },
          {
            "$ref": "#/components/parameters/itemIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "achievement_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/achievement.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "medals": {
                    "$ref": "#/components/examples/achievement_medals"
                  },
                  "ribbon": {
                    "$ref": "#/components/examples/achievement_ribbon"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/character": {
      "get": {
        "summary": "Character",
        "description": "Game-specific documentation for the `character` collection.\n\nThis collection is randomly distributed across 20 different databases, causing some unusual behaviour when filtering. For example, the `c:distinct` parameter will fetch the distinct values for each database and aggregate them in the response, resulting in duplicate entries. This and other special cases are documented with the corresponding query command parameters in the `General` section.\n\nIn addition to the commonly-used parameters provided, this endpoint may be queried by any of its fields, including sub-keys like `times.creation`.",
        "tags": [
          "Character Information"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/qcLimitPerDbParam"
          },
          {
            "$ref": "#/components/parameters/characterIdParam"
          },
          {
            "$ref": "#/components/parameters/characterNameFirstParam"
          },
          {
            "$ref": "#/components/parameters/characterNameFirstLowerParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "character_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/character.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "higby": {
                    "$ref": "#/components/examples/character_higby"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/currency": {
      "get": {
        "summary": "Currency",
        "description": "Lists currencies available in the game.\n\nAs of 2023-06-13, the only currency available are Nanites. Outfit resources and other currencies such as Daybreak Cash, ISO-4, or A7 are not available on the API, while Cert Points and A.S.P. tokens are stored in the `character` collection.",
        "tags": [
          "Basics"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/currencyIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "currency_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/currency.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "nanites": {
                    "$ref": "#/components/examples/currency"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/armor_facing": {
      "get": {
        "summary": "Armor Facing",
        "description": "Enumerates the armor facing angles used for directional damage reduction on vehicles.",
        "tags": [
          "Damage Calculation"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/armorFacingIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "armor_facing_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/armor_facing.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "armor_facing": {
                    "$ref": "#/components/examples/armor_facing"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/armor_info": {
      "get": {
        "summary": "Armor Info",
        "description": "A set of armor values for each armor facing angle on a vehicle.",
        "tags": [
          "Damage Calculation"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/armorInfoIdParam"
          },
          {
            "$ref": "#/components/parameters/armorFacingIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "armor_info_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/armor_info.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "armor_info": {
                    "$ref": "#/components/examples/armor_info"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/character_name": {
      "get": {
        "summary": "Character Name",
        "description": "Optimized, low-bandwidth endpoint for character name resolution.",
        "tags": [
          "Character Information"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/characterIdParam"
          },
          {
            "$ref": "#/components/parameters/characterNameFirstParam"
          },
          {
            "$ref": "#/components/parameters/characterNameFirstLowerParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "character_name_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/character_name.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "higby": {
                    "$ref": "#/components/examples/character_name_higby"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/characters_achievement": {
      "get": {
        "summary": "Character Achievements",
        "description": "List the achievement progress for a character.",
        "tags": [
          "Character Information"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/characterIdParam"
          },
          {
            "$ref": "#/components/parameters/achievementIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "characters_achievement_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/characters_achievement.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "medal": {
                    "$ref": "#/components/examples/characters_achievement_medal"
                  },
                  "ribbon": {
                    "$ref": "#/components/examples/characters_achievement_ribbon"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/characters_currency": {
      "get": {
        "summary": "Character Currency",
        "description": "Lists the currencies owned by a character.\n\nNote that this table has been inconsistent since the introduction of the A.S.P. system: in addition to the currency value (Nanites), an extra `prestige_currency` key has been added, rather than being its own currency.",
        "tags": [
          "Character Information"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/characterIdParam"
          },
          {
            "$ref": "#/components/parameters/currencyIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "characters_currency_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/characters_currency.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "currency": {
                    "$ref": "#/components/examples/characters_currency"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/characters_directive": {
      "get": {
        "summary": "Character Directives",
        "description": "Directive completion information for a character.\n\nNote that this also lists entries for incomplete directives; use the `completion_time` field to determine whether a directive has been completed.",
        "tags": [
          "Character Information"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/characterIdParam"
          },
          {
            "$ref": "#/components/parameters/directiveTreeIdParam"
          },
          {
            "$ref": "#/components/parameters/directiveIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "characters_directive_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/characters_directive.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "directive": {
                    "$ref": "#/components/examples/characters_directive"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/characters_directive_objective": {
      "get": {
        "summary": "Character Directive Objectives",
        "description": "Current progress of a character within a directive.\n\nThe current value of the directive progress can be found in the `state_data` field of this endpoint. The corresponding target value is found in the corresponding `objective`, usually in the `param1` field.",
        "tags": [
          "Character Information"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/characterIdParam"
          },
          {
            "$ref": "#/components/parameters/directiveIdParam"
          },
          {
            "$ref": "#/components/parameters/objectiveIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "characters_directive_objective_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/characters_directive_objective.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "directive_objective": {
                    "$ref": "#/components/examples/characters_directive_objective"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/characters_directive_tier": {
      "get": {
        "summary": "Character Directive Tier",
        "description": "Directive tier completion information for a character.",
        "tags": [
          "Character Information"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/characterIdParam"
          },
          {
            "$ref": "#/components/parameters/directiveTreeIdParam"
          },
          {
            "$ref": "#/components/parameters/directiveTierIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "characters_directive_tier_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/characters_directive_tier.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "directive_tier": {
                    "$ref": "#/components/examples/characters_directive_tier"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/characters_directive_tree": {
      "get": {
        "summary": "Character Directive Tree",
        "description": "Directive tree completion information for a character.",
        "tags": [
          "Character Information"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/characterIdParam"
          },
          {
            "$ref": "#/components/parameters/directiveTreeIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "characters_directive_tree_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/characters_directive_tree.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "directive_tree": {
                    "$ref": "#/components/examples/characters_directive_tree"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/characters_event": {
      "get": {
        "summary": "Character Event",
        "description": "ReST endpoint for retrieving historical character event data.\n\nLike `event`, but allows querying by character. The `character_id` and `id` fields are interchangeable.",
        "tags": [
          "Event History"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/characterIdParam"
          },
          {
            "$ref": "#/components/parameters/characterEventCharacterIdParam"
          },
          {
            "$ref": "#/components/parameters/characterEventTypeParam"
          },
          {
            "$ref": "#/components/parameters/beforeParam"
          },
          {
            "$ref": "#/components/parameters/afterParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "characters_event_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/characters_event.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/characters_event_grouped": {
      "get": {
        "summary": "Grouped Character Event",
        "description": "Return character vs. character statistics.\n\nAllows calculating player vs. player KDR.",
        "tags": [
          "Event History"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/characterIdParam"
          },
          {
            "$ref": "#/components/parameters/characterEventsGroupedEventTypeParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "characters_event_grouped_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/characters_event_grouped.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/characters_friend": {
      "get": {
        "summary": "Friends List",
        "description": "Query the friends list of a character.",
        "tags": [
          "Character Information"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/characterIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "characters_friend_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/characters_friend.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "higby": {
                    "$ref": "#/components/examples/characters_friend"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/characters_item": {
      "get": {
        "summary": "Character Items",
        "description": "Query the items of a character. Note that this collection no longer lists account-wide item unlocks as this served as a fingerprint to identify players across multiple characters.",
        "tags": [
          "Character Information"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/characterIdParam"
          },
          {
            "$ref": "#/components/parameters/itemIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "characters_item_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/characters_item.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "higby": {
                    "$ref": "#/components/examples/characters_item"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/characters_leaderboard": {
      "get": {
        "summary": "Character Leaderboard",
        "description": "Query the leaderboard for a character. Note that only the top 10'000 players for a given statistic are tracked in the leaderboard; many characters will not have an entry in this collection.\n\nThe `limit` key inserted into the response indicates the number of requested entries when passing multiple character IDs. Comparison with `returned` may be used to determine whether any characters were skipped due to not being in the leaderboard.",
        "tags": [
          "Leaderboards"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/leaderboardCharacterIdParam"
          },
          {
            "$ref": "#/components/parameters/leaderboardNameParam"
          },
          {
            "$ref": "#/components/parameters/leaderboardPeriodParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "limit": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "characters_leaderboard_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/leaderboard.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "key": {
                      "type": "string"
                    },
                    "count": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/characters_online_status": {
      "get": {
        "summary": "Online Status",
        "description": "Query the online status of a character.",
        "tags": [
          "Character Information"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/characterIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "characters_online_status_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/characters_online_status.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "higby": {
                    "$ref": "#/components/examples/characters_online_status"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/characters_skill": {
      "get": {
        "summary": "Character Skills",
        "description": "List the skills unlocked by a character.",
        "tags": [
          "Character Information"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/characterIdParam"
          },
          {
            "$ref": "#/components/parameters/skillIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "characters_skill_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/characters_skill.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "higby": {
                    "$ref": "#/components/examples/characters_skill"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/characters_stat": {
      "get": {
        "summary": "Character Statistics",
        "description": "Basic statistics endpoint for character-wide and class-specific statistics.\n\n- `stat_name` lists the name of the stat\n- `profile` represents the class, with a value of 0 denoting a character-wide value",
        "tags": [
          "Statistics"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/characterIdParam"
          },
          {
            "$ref": "#/components/parameters/statNameParam_characters_stat"
          },
          {
            "$ref": "#/components/parameters/profileIdParam_character"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "characters_stat_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/characters_stat.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "higby": {
                    "$ref": "#/components/examples/characters_stat"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/characters_stat_by_faction": {
      "get": {
        "summary": "Character Statistics by Faction",
        "description": "Faction-specific statistics endpoint. Useful for determining faction bias or kill spread.\n\n- `stat_name` lists the name of the stat\n- `profile` represents the class, with a value of 0 denoting a character-wide value\n\nAll `value_*` fields are provided per-faction. Note that the value for the own faction is often blanked: `value_nc` of the stat `kills` cannot be used to enumerate an NC character's team kills, for example.",
        "tags": [
          "Statistics"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/characterIdParam"
          },
          {
            "$ref": "#/components/parameters/statNameParam_characters_stat_by_faction"
          },
          {
            "$ref": "#/components/parameters/profileIdParam_character"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "characters_stat_by_faction_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/characters_stat_by_faction.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "higby": {
                    "$ref": "#/components/examples/characters_stat_by_faction"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/characters_stat_history": {
      "get": {
        "summary": "Historical Statistics",
        "description": "Statistics endpoint for historical character stats. In addition to the `all_time` and `one_life_max` keys, values are also provided for the last 31 days (`day`), 12 months (`month`), or 13 weeks (`week`).\n\n- `stat_name` lists the name of the stat\n- `profile` represents the class, with a value of 0 denoting a character-wide value.",
        "tags": [
          "Statistics"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/characterIdParam"
          },
          {
            "$ref": "#/components/parameters/statNameParam_characters_stat_history"
          },
          {
            "$ref": "#/components/parameters/profileIdParam_character"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "characters_stat_history_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/characters_stat_history.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "higby": {
                    "$ref": "#/components/examples/characters_stat_history"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/characters_weapon_stat": {
      "get": {
        "summary": "Weapon Statistics",
        "description": "Weapon statistics endpoint containing generic values such as playtime or score while wielding. The most common use is calculating the accuracy of a player with a given weapon by dividing `weapon_hit_count` by `weapon_fire_count`.\n\n- `stat_name` lists the name of the stat\n- `item_id` identifies the item for the weapon. Note that this value can be zero, in that case it serves as a catch-all for all weapons for the given `vehicle_id`.\n- `vehicle_id` the vehicle on which the weapon is available.",
        "tags": [
          "Statistics"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/characterIdParam"
          },
          {
            "$ref": "#/components/parameters/statNameParam_characters_weapon_stat"
          },
          {
            "$ref": "#/components/parameters/itemIdParam"
          },
          {
            "$ref": "#/components/parameters/vehicleIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "characters_weapon_stat_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/characters_weapon_stat.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "weapon": {
                    "$ref": "#/components/examples/characters_weapon_stat_infantry_weapon"
                  },
                  "vehicle": {
                    "$ref": "#/components/examples/characters_weapon_stat_vehicle"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/characters_weapon_stat_by_faction": {
      "get": {
        "summary": "Weapon Statistics By Faction",
        "description": "Faction-specific weapon statistics endpoint containing combat-focussed stats such as kills, deaths, headshots and damage dealt/taken.\n\n- `stat_name` lists the name of the stat\n- `item_id` identifies the item for the weapon. Note that this value can be zero, in that case it serves as a catch-all for all weapons for the given `vehicle_id`.\n- `vehicle_id` the vehicle on which the weapon is available.",
        "tags": [
          "Statistics"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/characterIdParam"
          },
          {
            "$ref": "#/components/parameters/statNameParam_characters_weapon_stat_by_faction"
          },
          {
            "$ref": "#/components/parameters/itemIdParam"
          },
          {
            "$ref": "#/components/parameters/vehicleIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "characters_weapon_stat_by_faction_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/characters_weapon_stat_by_faction.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "weapon": {
                    "$ref": "#/components/examples/characters_weapon_stat_by_faction_infantry_weapon"
                  },
                  "vehicle": {
                    "$ref": "#/components/examples/characters_weapon_stat_by_faction_vehicle"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/characters_world": {
      "get": {
        "summary": "Character Server Lookup",
        "description": "Query the server a character is on.",
        "tags": [
          "Character Information"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/characterIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "characters_world_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/characters_world.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "higby": {
                    "$ref": "#/components/examples/characters_world"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/directive": {
      "get": {
        "summary": "Directive",
        "description": "An individual directive that may be completed by a player.\n\nThis collection lists an individual directive, such as \"100 Roadkills\".",
        "tags": [
          "Progression"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/directiveIdParam"
          },
          {
            "$ref": "#/components/parameters/directiveTreeIdParam"
          },
          {
            "$ref": "#/components/parameters/directiveTierIdParam"
          },
          {
            "$ref": "#/components/parameters/objectiveSetIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "directive_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/directive.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "higby": {
                    "$ref": "#/components/examples/directive"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/directive_tier": {
      "get": {
        "summary": "Directive Tier",
        "description": "A completion tier within a directive tree.\n\nThis covers the individual stages of directive tiers, such as \"Combat Medic: Adept\".",
        "tags": [
          "Progression"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/directiveTreeIdParam"
          },
          {
            "$ref": "#/components/parameters/directiveTierIdParam"
          },
          {
            "$ref": "#/components/parameters/rewardSetIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "directive_tier_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/directive_tier.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "higby": {
                    "$ref": "#/components/examples/directive_tier"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/directive_tree": {
      "get": {
        "summary": "Directive Tree",
        "description": "A tree of directives sorted into multiple tiers.\n\nThis collection represents the individual paths within a directive category, such as \"Light Assault\" or \"Combat Medic\".",
        "tags": [
          "Progression"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/directiveTreeIdParam"
          },
          {
            "$ref": "#/components/parameters/directiveTreeCategoryIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "directive_tree_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/directive_tree.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "higby": {
                    "$ref": "#/components/examples/directive_tree"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/directive_tree_category": {
      "get": {
        "summary": "Directive Tree Category",
        "description": "Top-level categorisation of directive trees.\n\nThis covers the main sections in the Directive menu, such as \"Infantry\", \"Vehicles\", or \"Events\".",
        "tags": [
          "Progression"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/directiveTreeCategoryIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "directive_tree_category_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/directive_tree_category.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "higby": {
                    "$ref": "#/components/examples/directive_tree_category"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/empire_scores": {
      "get": {
        "summary": "(Defunct) Empire Scores",
        "description": "Defunct endpoint for the \"World Domination Series\" event scores.",
        "tags": [
          "Metagame & Alerts"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "empire_scores_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/empire_scores.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "higby": {
                    "$ref": "#/components/examples/empire_scores"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/effect": {
      "get": {
        "summary": "Effect",
        "description": "A weapon-based effect acting on players or vehicles.\n\nWeapon-based effects include direct and indirect damage effects, tactical grenade impacts, as well as pseudo-weapons such as the Medic tool or Engineer repair tool. For world-based effects, weapon attachments and buffs, see the `ps2/zone_effect` collection instead.\n\nSee the `ps2/effect_type` collection for a list of available effect types.",
        "tags": [
          "Effects & Abilities"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/effectIdParam"
          },
          {
            "$ref": "#/components/parameters/effectTypeIdParam"
          },
          {
            "$ref": "#/components/parameters/abilityIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "effect_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/effect.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "effect": {
                    "$ref": "#/components/examples/effect"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/effect_type": {
      "get": {
        "summary": "Effect Type",
        "description": "A type of effect.\n\nThe generic fields `paramX` and `stringX` are documented here. Note that not all fields are used by all effect types, or at all.",
        "tags": [
          "Effects & Abilities"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/effectTypeIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "effect_type_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/effect_type.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "effect_type": {
                    "$ref": "#/components/examples/effect_type"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/event": {
      "get": {
        "summary": "Event",
        "description": "ReST endpoint for retrieving historical event data.\n\nThese largely mirror the corresponding events in the ESS:\n\n- `ItemAdded` -> `ITEM`\n- `Death` -> `KILL`/`DEATH`\n- `BattleRankUp` -> `BATTLE_RANK`\n- `PlayerFacilityCapture`/`PlayerFacilityDefend` -> `FACILITY_CHARACTER`\n- `AchievementEarned` -> `ACHIEVEMENT`\n- `FacilityControl` -> `FACILITYCONTROL`\n- `MetagameEvent` -> `METAGAME`",
        "tags": [
          "Event History"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/eventTypeParam"
          },
          {
            "$ref": "#/components/parameters/beforeParam"
          },
          {
            "$ref": "#/components/parameters/afterParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "event_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/event.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/experience": {
      "get": {
        "summary": "Experience",
        "description": "Lists the different types of experience ticks.",
        "tags": [
          "Basics"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/experienceIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "experience_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/experience.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "experience": {
                    "$ref": "#/components/examples/experience"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/experience_rank": {
      "get": {
        "summary": "Experience Rank",
        "description": "Player rank gained through leveling up.\n\nNote that the `rank` field is not unique, as each rank is duplicated for each prestige (aka. A.S.P.) level. The prestige entries can only be distinguished by their icons.",
        "tags": [
          "Progression"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "experience_rank_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/experience_rank.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "experience_rank": {
                    "$ref": "#/components/examples/experience_rank"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/facility_link": {
      "get": {
        "summary": "Facility Link",
        "description": "Resolves lattice links between facilities.\n\nThere is no reliable difference between `facility_id_a` and `facility_id_b`; the former tends to be closer to the respective warpgate, but this does not hold true for all links. It is recommended to treat the link direction as arbitrary.",
        "tags": [
          "Map Data"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/facilityIdAParam"
          },
          {
            "$ref": "#/components/parameters/facilityIdBParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "facility_link_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/facility_link.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "facility_link": {
                    "$ref": "#/components/examples/facility_link"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/facility_type": {
      "get": {
        "summary": "Facility Type",
        "description": "Lists all facility types across all zones and game modes.",
        "tags": [
          "Map Data"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/facilityTypeIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "facility_type_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/facility_type.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "facility_type": {
                    "$ref": "#/components/examples/facility_type"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/faction": {
      "get": {
        "summary": "Faction",
        "description": "Playable and NPC factions.",
        "tags": [
          "Basics"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/factionIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "faction_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/faction.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "tr": {
                    "$ref": "#/components/examples/faction"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/fire_group": {
      "get": {
        "summary": "Fire Group",
        "description": "Fire groups in the API are synonymous with fire modes in-game, they represent the different operating modes some weapons can switch between.\n\nThis includes select-fire modes for infantry weapons, as well as knives switching between quick knife, wielded knive, and - in the case of power knives - the one-hit-kill mode.",
        "tags": [
          "Weapons & Firing Mechanics"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/fireGroupIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "fire_group_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/fire_group.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "chamber": {
                    "$ref": "#/components/examples/fire_group_chamber"
                  },
                  "regular": {
                    "$ref": "#/components/examples/fire_group_regular"
                  },
                  "spool": {
                    "$ref": "#/components/examples/fire_group_spool"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/fire_mode": {
      "get": {
        "summary": "Fire Mode (Legacy)",
        "description": "**Note:** This table has been largely superceded by `ps2/fire_mode_2`, which contains additional and more accurate information about firing mechanics.\n\nThis endpoint shows detailed information about a given fire mode for a weapon, including damage ranges, muzzle velocity, and reload time.\n\nFor details on the cone-of-fire mechanics, resolve the `player_state_group_id` field.",
        "tags": [
          "Weapons & Firing Mechanics"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/fireModeIdParam"
          },
          {
            "$ref": "#/components/parameters/itemIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "fire_mode_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/fire_mode.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "fire_mode": {
                    "$ref": "#/components/examples/fire_mode"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/fire_mode_2": {
      "get": {
        "summary": "Fire Mode",
        "description": "Main endpoint for baseline weapon characteristics and firing mechanics. This includes:\n\n- Damage effects and ranges\n- Recoil magnitude and pattern\n- Triggered abilities for pseudo-weapons such as the medical applicator\n- Ammunition consumption and pellet count\n- Heat-mechanics\n\nBe aware that lockon information is currently disconnected from the game data and has not been outdated. Refer to the PS2 Wiki for up-to-date information for the time being.",
        "tags": [
          "Weapons & Firing Mechanics"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/fireModeIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "fire_mode_2_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/fire_mode_2.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "NS-11A": {
                    "$ref": "#/components/examples/fire_mode_2_ns11a"
                  },
                  "Lasher X2": {
                    "$ref": "#/components/examples/fire_mode_2_lasherx2"
                  },
                  "HAWK GD-68": {
                    "$ref": "#/components/examples/fire_mode_2_hawkgd68"
                  },
                  "Betelgeuse 54-A": {
                    "$ref": "#/components/examples/fire_mode_2_betelgeuse54a"
                  },
                  "G30 Vulcan": {
                    "$ref": "#/components/examples/fire_mode_2_g30vulcan"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/fire_mode_to_projectile": {
      "get": {
        "summary": "Fire Mode to Projectile",
        "description": "Maps fire modes to their projectiles.",
        "tags": [
          "Weapons & Firing Mechanics"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/fireModeIdParam"
          },
          {
            "$ref": "#/components/parameters/itemIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "fire_mode_to_projectile_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/fire_mode_to_projectile.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "fire_mode_to_projectile": {
                    "$ref": "#/components/examples/fire_mode_to_projectile"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/fire_mode_type": {
      "get": {
        "summary": "Fire Mode Type",
        "description": "Enumeration of the types of fire modes.\n\nThis servers to differentiate between melee attacks, projectile weapons, throwables, and pseudo-weapon fire modes used to trigger activated items.",
        "tags": [
          "Weapons & Firing Mechanics"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/fireModeTypeIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "fire_mode_type_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/fire_mode_type.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "fire_mode_type": {
                    "$ref": "#/components/examples/fire_mode_type"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/image": {
      "get": {
        "summary": "Image",
        "description": "Lists individual image assets available on the API.\n\nNote that historically, not all assets listed here are available on the image endpoint, and not all available assets are listed.",
        "tags": [
          "Image Assets"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/imageIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "image_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/image.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "image": {
                    "$ref": "#/components/examples/image"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/image_set": {
      "get": {
        "summary": "Image Set",
        "description": "Lists related image assets belonging to the same set.\n\nNote that this endpoint is a mapping; the `iamge_set_id` is not a unique key. The individual image types in a set are generally used to provide different sizes of the same image (e.g. icon previes or minimal icons).",
        "tags": [
          "Image Assets"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/imageSetIdParam"
          },
          {
            "$ref": "#/components/parameters/imageIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "image_set_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/image_set.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "image_set": {
                    "$ref": "#/components/examples/image_set"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/image_set_default": {
      "get": {
        "summary": "Image Set Default",
        "description": "Lists the default image for a given image set.",
        "tags": [
          "Image Assets"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/imageSetIdParam"
          },
          {
            "$ref": "#/components/parameters/imageIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "image_set_default_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/image_set_default.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "image_set_default": {
                    "$ref": "#/components/examples/image_set_default"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/item": {
      "get": {
        "summary": "Items",
        "description": "Items in PlanetSide 2 are used to represent weapons, tools, and consumables, but also cosmetic items and internal control objects for player renaming or outfit resource consumption. Use the `item_type` collection to narrow searches to specific types.",
        "tags": [
          "Items & Bundles"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/itemIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/item.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "knife": {
                    "$ref": "#/components/examples/item"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/item_attachment": {
      "get": {
        "summary": "Item Attachments",
        "description": "Maps attachment items to the items they can be attached to.",
        "tags": [
          "Items & Bundles"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/itemIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item_attachment_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/item_attachment.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "knife": {
                    "$ref": "#/components/examples/item_attachment"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/item_category": {
      "get": {
        "summary": "Item Categories",
        "description": "Item categories are used to group items together for display in the loadout screen or depot.",
        "tags": [
          "Items & Bundles"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/itemCategoryIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item_category_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/item_category.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "knife": {
                    "$ref": "#/components/examples/item_category"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/item_profile": {
      "get": {
        "summary": "Item-Class Mapping",
        "description": "Maps items to profiles (classes/vehicles) that have access to them.",
        "tags": [
          "Items & Bundles"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/itemIdParam"
          },
          {
            "$ref": "#/components/parameters/profileIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item_profile_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/item_profile.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "knife": {
                    "$ref": "#/components/examples/item_profile"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/item_to_weapon": {
      "get": {
        "summary": "Item-Weapon Mapping",
        "description": "Maps items (including name, availability) to its respective weapon object\n\nNot all items have a weapon objects, though some filtering can be done through the `item_type_id` field, with the ID 26 representing most weapon types.",
        "tags": [
          "Items & Bundles"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/itemIdParam"
          },
          {
            "$ref": "#/components/parameters/weaponIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item_to_weapon_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/item_to_weapon.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "knife": {
                    "$ref": "#/components/examples/item_to_weapon"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/item_type": {
      "get": {
        "summary": "Item Types",
        "description": "Items in PlanetSide 2 represent many different things beyond weapons, such as implant packs, cosmetics, or name change tokens. They are also used as internal helpers when pulling outfit resources, spawning vehicles, or interacting with certain terminals.\n\nThis collection lists the different item types, though many of these are never encountered on the API.",
        "tags": [
          "Items & Bundles"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/itemTypeIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item_type_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/item_type.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "knife": {
                    "$ref": "#/components/examples/item_type"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/leaderboard": {
      "get": {
        "summary": "Global Leaderboard",
        "description": "Global leaderboard for a given server. This only includes the top 10'000 players for a given category and is not directly searchable. See `characters_leaderboard` to look up a character's ranking.\n\n`c:start` and `c:limit` are supported and allow for pagination. `c:join` and `c:tree` are also permitted. Any other query commands will be silently ignored.\n\nUnlike most other tables, this one defaults to a `c:limit` value of 10 and is always sorted in ascending order of leaderboard rank.",
        "tags": [
          "Leaderboards"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/leaderboardNameParam"
          },
          {
            "$ref": "#/components/parameters/leaderboardPeriodParam"
          },
          {
            "$ref": "#/components/parameters/worldIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "leaderboard_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/leaderboard.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "key": {
                      "type": "string"
                    },
                    "count": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "cobalt_all_time_kills": {
                    "$ref": "#/components/examples/leaderboard"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/loadout": {
      "get": {
        "summary": "Loadout",
        "description": "Enumeration of the six infantry classes for each playable faction.\n\nNote that this is different from the in-game loadouts, which are not available on the API.",
        "tags": [
          "Basics"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/loadoutIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "loadout_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/loadout.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "ncInfiltrator": {
                    "$ref": "#/components/examples/loadout"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/map": {
      "get": {
        "summary": "Map",
        "description": "Map status endpoint.\n\nThis collection can only be queried with a single `world_id` and any number of `zone_ids` (note that the parameter is plural). Also note the non-standard payload format requiring different parsing rules.\n\nFor partially locked continents, the unavailable regions will report a `FactionId` of zero.",
        "tags": [
          "Map Data"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/worldIdParam"
          },
          {
            "name": "zone_ids",
            "in": "query",
            "description": "Unique identifier of a zone.",
            "schema": {
              "type": "string"
            },
            "x-cast-to": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "map_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/map.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "indar": {
                    "$ref": "#/components/examples/map"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/map_hex": {
      "get": {
        "summary": "Map Hex",
        "description": "Endpoint for retrieving map hex coordinates.\n\nThis data can be used to reconstruct the in-game facility outlines from API data.\n\nThe X and Y coordinates listed in the entries to this collection are not Cartesian and do not match up with the `location_<n>` fields of `map_region`. Instead, they are describing locations in a non-orthogonal hexagonal grid, which must be converted by the user.\n\nThis website has a great write-up on hexagonal coordinate systems: <https://www.redblobgames.com/grids/hexagons/>\nThe coordinate system used by PlanetSide 2 matches the \"Axial coordinates\" described in the article, except that the first coordinate X faces east, and the second coordinate Y faces up and to the right at a 60\u00b0 angle.",
        "tags": [
          "Map Data"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/mapRegionIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "map_hex_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/map_hex.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "indar": {
                    "$ref": "#/components/examples/map_hex"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/map_region": {
      "get": {
        "summary": "Map Region",
        "description": "A region on the in-game map.\n\nMap regions are largely identical to their corresponding regions, but use the internal `facility_name` instead of a localized string. A `map_region_id` and `region_id` are interchangeable.\n\nAdditionally, this collection allows connecting facilities to map region IDs.\n\nNote that the continuous outfit resource gain is listed in \"ticks\", not minutes. Ticks are 5 minutes as of writing, meaning that a Tech Plant will list a tick reward of 8 Synthium, corresponding to the 1.6 Synthium per minute advertised in-game.",
        "tags": [
          "Map Data"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/mapRegionIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "map_region_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/map_region.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "indar": {
                    "$ref": "#/components/examples/map_region"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/marketing_bundle": {
      "get": {
        "summary": "Bundles",
        "description": "Bundles available for purchase in the in-game store (Depot). This collection represents actual bundles. For pseudo-bundles used to purchase individual weapon attachments or cosmetics, see the `marketing_bundle_with_1_item` collection instead.\n\nNote that there is no guaranteed way of determining whether a given bundle is currently available for purchase. This collection contains many entries for defunct items and bundles, such as the single-use camos from the early days of the game.\n\nThis collection is automatically maintained and generally accurate with regards to certification prices, the daybreak/station cash values are generally less reliable.",
        "tags": [
          "Items & Bundles"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/marketingBundleIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "marketing_bundle_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/marketing_bundle.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "ns15mBundle": {
                    "$ref": "#/components/examples/marketing_bundle"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/marketing_bundle_item": {
      "get": {
        "summary": "Items Available in Bundles",
        "description": "Maps marketing bundles to the items they contain.",
        "tags": [
          "Items & Bundles"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/marketingBundleIdParam"
          },
          {
            "$ref": "#/components/parameters/itemIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "marketing_bundle_item_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/marketing_bundle_item.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "ns15mBundle": {
                    "$ref": "#/components/examples/marketing_bundle_item"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/marketing_bundle_with_1_item": {
      "get": {
        "summary": "Individual Item Bundles",
        "description": "These are pseudo-bundles with exactly 1 item each, allowing players to buy individual weapons or cosmetics with Daybreak Cash (formerly Station Cash).\n\nNote that in the case of weapons, these bundles are genreally mirrored by 'regular' bundles in the `ps2/marketing_bundle` collection, with the same `marketing_bundle_id`.",
        "tags": [
          "Items & Bundles"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/marketingBundleIdParam"
          },
          {
            "$ref": "#/components/parameters/itemIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "marketing_bundle_with_1_item_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/marketing_bundle_with_1_item.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "ns15mBundle": {
                    "$ref": "#/components/examples/marketing_bundle_with_1_item"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/metagame_event": {
      "get": {
        "summary": "Metagame Event",
        "description": "In-game alerts and other alert-like events.\n\nNote that this endpoint lists alert types that are not currently enabled in-game, such as the 'Aerial Anomaly' and 'MAXimum Pressure' alert types.",
        "tags": [
          "Metagame & Alerts"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/metagameEventIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "metagame_event_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/metagame_event.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "ns15mBundle": {
                    "$ref": "#/components/examples/metagame_event"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/metagame_event_state": {
      "get": {
        "summary": "Metagame Event State",
        "description": "Enumeratess the available states for alerts.",
        "tags": [
          "Metagame & Alerts"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/metagameEventStateIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "metagame_event_state_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/metagame_event_state.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "ns15mBundle": {
                    "$ref": "#/components/examples/metagame_event_state"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/objective": {
      "get": {
        "summary": "Objective",
        "description": "An objective tracking progress towards a directive, mission, or achievement.\n\nSee the `ps2/objective_type` collection for a list of available objective types.",
        "tags": [
          "Progression"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/objectiveIdParam"
          },
          {
            "$ref": "#/components/parameters/objectiveTypeIdParam"
          },
          {
            "$ref": "#/components/parameters/objectiveGroupIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "objective_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/objective.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "ns15mBundle": {
                    "$ref": "#/components/examples/objective"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/objective_set_to_objective": {
      "get": {
        "summary": "Objective Set Map",
        "description": "Maps objective sets to objective groups.\n\nThis collection is peculiar as neither of the types it connects are available on the API. It is however essential for connecting the `ps2/directive` collection to `ps2/objective` and `ps2/objective_type`.\n\nNote that when joining to these queries, the `^on:` and `^to:` fields must be used to specify the relationship.",
        "tags": [
          "Progression"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/objectiveSetIdParam"
          },
          {
            "$ref": "#/components/parameters/objectiveGroupIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "objective_set_to_objective_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/objective_set_to_objective.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "ns15mBundle": {
                    "$ref": "#/components/examples/objective_set_to_objective"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/objective_type": {
      "get": {
        "summary": "Objective Type",
        "description": "A type of objective.\n\nThe generic `paramX` fields are documented here. Note that not all fields are used by all objective types, or at all.",
        "tags": [
          "Progression"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/objectiveTypeIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "objective_type_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/objective_type.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "capturePoint": {
                    "$ref": "#/components/examples/objective_type"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/outfit": {
      "get": {
        "summary": "Outfit",
        "description": "A player-run outfit or clan.",
        "tags": [
          "Player Outfits"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/outfitIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "outfit_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/outfit.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "fno": {
                    "$ref": "#/components/examples/outfit"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/outfit_member": {
      "get": {
        "summary": "Outfit Member",
        "description": "Outfit membership information for a givne character. Characters that are not members of any outfit will not have an entry in this collection.",
        "tags": [
          "Player Outfits"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/characterIdParam"
          },
          {
            "$ref": "#/components/parameters/outfitIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "outfit_member_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/outfit_member.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "luperza": {
                    "$ref": "#/components/examples/outfit_member"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/outfit_member_extended": {
      "get": {
        "summary": "Outfit Member (Extended)",
        "description": "Another variant of the `ps2/outfit_member` collection, but with the contents of the corresponding `ps2/outfit` merged in. This is useful for bulk lookups of outfit information for heterogenous lists of characters without requiring the explicit use of `c:join` or `c:resolve`.",
        "tags": [
          "Player Outfits"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/characterIdParam"
          },
          {
            "$ref": "#/components/parameters/outfitIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "outfit_member_extended_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/outfit_member_extended.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "luperza": {
                    "$ref": "#/components/examples/outfit_member_extended"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/outfit_rank": {
      "get": {
        "summary": "Custom Outfit Rank",
        "description": "Outfits can define their own custom rank names and permissions, which are listed here. Outfits using the default rank names may not have an entry here.",
        "tags": [
          "Player Outfits"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/outfitIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "outfit_rank_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/outfit_rank.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "fno": {
                    "$ref": "#/components/examples/outfit_rank"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/profile": {
      "get": {
        "summary": "Profile (Infantry)",
        "description": "Original endpoint for infantry profiles. This covers the names and loadout IDs connected to a given profile, and additionally provides movement speed multiplier information for infantry classes. Note that the key fields are also provided by `ps2/profile_2`, which not only covers infantry but also vehicles, deployables, and other entities.",
        "tags": [
          "Basics"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/profileIdParam"
          },
          {
            "$ref": "#/components/parameters/loadoutIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "profile_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/profile.yaml"
                      }
                    }
                  }
                },
                "examples": {
                  "trLightAssault": {
                    "$ref": "#/components/examples/profile"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/profile_2": {
      "get": {
        "summary": "Profile (All)",
        "description": "Extended profile endpoint containing all entity types, including NPCs, construction items, and deployables.",
        "tags": [
          "Basics"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/profileIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "profile_2_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/profile_2.yaml"
                      }
                    }
                  }
                },
                "examples": {
                  "sunderer": {
                    "$ref": "#/components/examples/profile_2"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/profile_armor_map": {
      "get": {
        "summary": "Profile Armor Map",
        "description": "Maps profiles to the relevant `ps2/armor_info` entries.\n\nNote that many of the IDs used here are only available in `ps2/profile_2`. Additionally, armor values only concern vehicles, with infantry and deployable classes not having any entries here.",
        "tags": [
          "Damage Calculation"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/armorInfoIdParam"
          },
          {
            "$ref": "#/components/parameters/profileIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "profile_armor_map_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/profile_armor_map.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "magrider": {
                    "$ref": "#/components/examples/profile_armor_map"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/profile_resist_map": {
      "get": {
        "summary": "Profile Resist Map",
        "description": "Maps profiles to the relevant `ps2/resist_info` entries. Note that many of the profile IDs used here are only available in the `ps2/profile_2` collection.",
        "tags": [
          "Damage Calculation"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/resistInfoIdParam"
          },
          {
            "$ref": "#/components/parameters/profileIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "profile_resist_map_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/profile_resist_map.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "lightning": {
                    "$ref": "#/components/examples/profile_resist_map"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/projectile": {
      "get": {
        "summary": "Projectiles",
        "description": "Projectiles specify the travel characteristics of a weapon on its way to the target, such as its speed, its bullet drop, or maximum flight time/distance.\n\nNote that multiple fire modes can use the same projectile. This usually includes the hipfire vs. aimed fire modes, but can also include different weapons altogether.",
        "tags": [
          "Weapons & Firing Mechanics"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/projectileIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "projectile_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/projectile.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "projectile": {
                    "$ref": "#/components/examples/projectile"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/projectile_flight_type": {
      "get": {
        "summary": "Projectile Flight Type",
        "description": "Enumerates the flight types used to categorize projectiles by their travel characteristics.\n\nThis mostly controls whether the projectile is ballistic, Flak-based, or \"Dynamic\", used to represent thrown items such as grenades, explosives, and ammo packs.",
        "tags": [
          "Weapons & Firing Mechanics"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/projectileFlightTypeIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "projectile_flight_type_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/projectile_flight_type.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "projectile_flight_type": {
                    "$ref": "#/components/examples/projectile_flight_type"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/region": {
      "get": {
        "summary": "Region",
        "description": "Display name of the game regions.\n\nThis endpoint mostly contains the localized display name of the a map region. Regions and map regions are interchangeable and governed by the same IDs.",
        "tags": [
          "Map Data"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/regionIdParam"
          },
          {
            "$ref": "#/components/parameters/zoneIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "region_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/region.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "region": {
                    "$ref": "#/components/examples/region"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/resist_info": {
      "get": {
        "summary": "Resist Info",
        "description": "Lists resistances against certain types of damage.",
        "tags": [
          "Damage Calculation"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/resistInfoIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "resist_info_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/resist_info.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "resist_info": {
                    "$ref": "#/components/examples/resist_info"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/resist_type": {
      "get": {
        "summary": "Resist Types",
        "description": "Enumeration of resistance types used to balance damage types against various targets.",
        "tags": [
          "Damage Calculation"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/resistTypeIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "resist_type_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/resist_type.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "resist_type": {
                    "$ref": "#/components/examples/resist_type"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/resource_type": {
      "get": {
        "summary": "Resource Type",
        "description": "Resources consumed by abilities such as the Heavy Overshield.",
        "tags": [
          "Effects & Abilities"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/resourceTypeIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "resource_type_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/resource_type.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "resource_type": {
                    "$ref": "#/components/examples/resource_type"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/reward": {
      "get": {
        "summary": "Reward",
        "description": "",
        "tags": [
          "Progression"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/rewardIdParam"
          },
          {
            "$ref": "#/components/parameters/rewardTypeIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reward_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/reward.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "reward": {
                    "$ref": "#/components/examples/reward"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/reward_group_to_reward": {
      "get": {
        "summary": "Reward Map",
        "description": "Maps a reward group to one or more rewards.\n\nThis collection, together with `reward_set_to_reward_group`, allows connecting directive tiers to the rewards they grant upon completion.",
        "tags": [
          "Progression"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/rewardIdParam"
          },
          {
            "$ref": "#/components/parameters/rewardGroupIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reward_group_to_reward_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/reward_group_to_reward.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "reward_group_to_reward": {
                    "$ref": "#/components/examples/reward_group_to_reward"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/reward_set_to_reward_group": {
      "get": {
        "summary": "Reward Set Map",
        "description": "Maps a reward set to its reward group.\n\nThis collection, together with `reward_group_to_reward`, allows connecting directive tiers to the rewards they grant upon completion.",
        "tags": [
          "Progression"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/rewardSetIdParam"
          },
          {
            "$ref": "#/components/parameters/rewardGroupIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reward_set_to_reward_group_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/reward_set_to_reward_group.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "reward_set_to_reward_group": {
                    "$ref": "#/components/examples/reward_set_to_reward_group"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/reward_type": {
      "get": {
        "summary": "Reward Type",
        "description": "A type of reward.\n\nThe generic `paramX` fields are documented here. Note that not all fields are used by all reward types, or at all.",
        "tags": [
          "Progression"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/rewardTypeIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reward_type_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/reward_type.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "reward_type": {
                    "$ref": "#/components/examples/reward_type"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/single_character_by_id": {
      "get": {
        "summary": "Single Character By ID",
        "description": "Endpoint for retrieving bulk character stats.\n\nThis endpoint's payload is a superset of `character` and additionally includes data from related `characters_*` collections:\n- `characters_currency`\n- `characters_stat_history`\n- `characters_stat`\n- `characters_stat_by_faction`\n- `characters_weapon_stat`\n- `characters_weapon_stat_by_faction`\n- `characters_items`\n\nThis endpoint is generally faster than querying these collections individually, but it comes with significant bandwidth costs. Note that this endpoint does not support most query commands, and that `c:show` and `c:hide` cannot be used to reduce the amount of data returned.",
        "tags": [
          "Character Information"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/characterIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "single_character_by_id_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/single_character_by_id.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/skill": {
      "get": {
        "summary": "Skill",
        "description": "Purchasable skills, such as certifications and A.S.P. skills.",
        "tags": [
          "Certifications & A.S.P."
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/skillIdParam"
          },
          {
            "$ref": "#/components/parameters/skillLineIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "skill_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/skill.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "skill": {
                    "$ref": "#/components/examples/skill"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/skill_line": {
      "get": {
        "summary": "Skill Line",
        "description": "Skill lines represent upgrade paths for skills, such as Ammo Capacity.",
        "tags": [
          "Certifications & A.S.P."
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/skillLineIdParam"
          },
          {
            "$ref": "#/components/parameters/skillCategoryIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "skill_line_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/skill_line.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "skill_line": {
                    "$ref": "#/components/examples/skill_line"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/skill_category": {
      "get": {
        "summary": "Skill Category",
        "description": "Skill categories represent a grouping of skills.\n\nThey usually group skills by the loadout slots for which they provide items, such as \"Passive Systems\" or \"Ability Slot\". On weapons, they generally represent a given attachment slot.",
        "tags": [
          "Certifications & A.S.P."
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/skillCategoryIdParam"
          },
          {
            "$ref": "#/components/parameters/skillSetIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "skill_category_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/skill_category.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "skill_category": {
                    "$ref": "#/components/examples/skill_category"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/skill_set": {
      "get": {
        "summary": "Skill Set",
        "description": "Skill sets represent the top-level grouping of skills.\n\nIn the old certification menu, this would group weapon-related skill lines into a sub-tree beneath the weapon itself.",
        "tags": [
          "Certifications & A.S.P."
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/skillSetIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "skill_set_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/skill_set.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "skill_set": {
                    "$ref": "#/components/examples/skill_set"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/target_type": {
      "get": {
        "summary": "Target Types",
        "description": "Enumerates the target types used to categorize the applicable targets of a weapon or effect.\n\nThis is effectively a constant mapping and can be cached aggressively.",
        "tags": [
          "Damage Calculation"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/targetTypeIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "target_type_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/target_type.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "target_type": {
                    "$ref": "#/components/examples/target_type"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/title": {
      "get": {
        "summary": "Title",
        "description": "Selectable titles for a character.\n\nNote that title IDs of 0 signify no title being selected.",
        "tags": [
          "Character Information"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/titleIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "title_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/title.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "title": {
                    "$ref": "#/components/examples/title"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/vehicle": {
      "get": {
        "summary": "Vehicle",
        "description": "Basic vehicle information such as name, description, and type.\n\nNote that vehicle types are only used internally and are not directly tied to damage mechanics or resistances. Liberators and Galaxies are still considered \"Light Aircraft\" in this endpoint.",
        "tags": [
          "Vehicles"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/vehicleIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "vehicle_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/vehicle.yaml"
                      }
                    }
                  }
                },
                "examples": {
                  "harasser": {
                    "$ref": "#/components/examples/vehicle"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/vehicle_attachment": {
      "get": {
        "summary": "Vehicle Attachments",
        "description": "Maps items to the vehicles and factions that have access to them.\n\nThe `slot_id` field is used to identify where the item is attached to. The below list shows the types of items for each slot as of June 2023:\n\n```\nID   Description\n\n1    Primary Weapon\n2    Secondary Weapon\n3    Ability Slot\n4    Defensive Slot\n5    Chassis / Airframe\n6    Cockpit / Hood Ornament\n7    Camo\n8    Decal\n9    Exterior\n10   Weapon Slot / Catapult\n11   Weapon Slot / Catapult\n12   Afterburner / Nitrous\n13   (Unused)\n14   (Internal: Headlights)\n15   Horn\n16   Trim\n17   Lighting\n18   Hubcaps\n19   Other\n20   Tire Traits / Catapult\n21   Catapult\n22   Catapult\n```\n\nNote that this list is maintained manually and may be out of date. The slot associations are not available on the API.",
        "tags": [
          "Vehicles"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/vehicleIdParam"
          },
          {
            "$ref": "#/components/parameters/factionIdParam"
          },
          {
            "$ref": "#/components/parameters/itemIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "vehicle_attachment_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/vehicle_attachment.yaml"
                      }
                    }
                  }
                },
                "examples": {
                  "harasser": {
                    "$ref": "#/components/examples/vehicle_attachment"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/vehicle_faction": {
      "get": {
        "summary": "Vehicle Faction Map",
        "description": "Maps vehicles to the factions that have access to them.",
        "tags": [
          "Vehicles"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/vehicleIdParam"
          },
          {
            "$ref": "#/components/parameters/factionIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "vehicle_faction_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/vehicle_faction.yaml"
                      }
                    }
                  }
                },
                "examples": {
                  "harasser": {
                    "$ref": "#/components/examples/vehicle_faction"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/vehicle_skill_set": {
      "get": {
        "summary": "Vehicle Skill Set Map",
        "description": "Maps vehicles to the skill sets that they use.\n\nNote that this relationship is expressed for each faction separetly.",
        "tags": [
          "Vehicles"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/vehicleIdParam"
          },
          {
            "$ref": "#/components/parameters/skillSetIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "vehicle_skill_set_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/vehicle_skill_set.yaml"
                      }
                    }
                  }
                },
                "examples": {
                  "vehicle_skill_set": {
                    "$ref": "#/components/examples/vehicle_skill_set"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/weapon": {
      "get": {
        "summary": "Weapon",
        "description": "Baseline weapon data, such as equip times, stock sights, and movement speed modifiers.",
        "tags": [
          "Weapons & Firing Mechanics"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/weaponIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "weapon_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/weapon.yaml"
                      }
                    }
                  }
                },
                "examples": {
                  "regular": {
                    "$ref": "#/components/examples/weapon_regular"
                  },
                  "knife": {
                    "$ref": "#/components/examples/weapon_knife"
                  },
                  "heat": {
                    "$ref": "#/components/examples/weapon_heat"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/weapon_ammo_slot": {
      "get": {
        "summary": "Ammo Slots",
        "description": "Ammo slot data for a given weapon, including the clip size, reserve ammo capacity, and resupply behaviour.",
        "tags": [
          "Weapons & Firing Mechanics"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/weaponIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "weapon_ammo_slot_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/weapon_ammo_slot.yaml"
                      }
                    }
                  }
                },
                "examples": {
                  "weapon_ammo_slot": {
                    "$ref": "#/components/examples/weapon_ammo_slot"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/weapon_datasheet": {
      "get": {
        "summary": "Weapon Datasheet",
        "description": "**Deprecated:** This table is not directly tied to the underlying fire mode and player state group data and may differ wildly from the true values!\n\nSuggested alternatives for the values provided by this collection are listed as part of the `weapon_datasheet` schema.",
        "tags": [
          "Weapons & Firing Mechanics"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/itemIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "weapon_datasheet_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/weapon_datasheet.yaml"
                      }
                    }
                  }
                },
                "examples": {
                  "weapon_datasheet": {
                    "$ref": "#/components/examples/weapon_datasheet"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/weapon_to_attachment": {
      "get": {
        "summary": "Weapon Attachments",
        "description": "Maps weapons to the attachments available to them. This table is largely synonymous with `ps2/item_attachment`, but contains additional entries that may not resolve to a valid item.\n\nFor this reason, it is recommended to base any attachment queries on the `ps2/item_attachment` endpoint instead.",
        "tags": [
          "Weapons & Firing Mechanics"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/itemIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "weapon_to_attachment_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/weapon_to_attachment.yaml"
                      }
                    }
                  }
                },
                "examples": {
                  "weapon_to_attachment": {
                    "$ref": "#/components/examples/weapon_to_attachment"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/weapon_to_fire_group": {
      "get": {
        "summary": "Weapon Fire Groups",
        "description": "Maps weapons to their set of fire groups. The `fire_group_index` field matches the in-game fire mode selection; hitting 'B' in-game is equivalent to incrementing the index by 1.",
        "tags": [
          "Weapons & Firing Mechanics"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/weaponIdParam"
          },
          {
            "$ref": "#/components/parameters/fireGroupIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "weapon_to_fire_group_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/weapon_to_fire_group.yaml"
                      }
                    }
                  }
                },
                "examples": {
                  "weapon_to_fire_group": {
                    "$ref": "#/components/examples/weapon_to_fire_group"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/world": {
      "get": {
        "summary": "World",
        "description": "A game server for a given region and game.",
        "tags": [
          "Basics"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/worldIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "world_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/world.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "connery": {
                    "$ref": "#/components/examples/world"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/world_event": {
      "get": {
        "summary": "World Event",
        "description": "ReST endpoint for retrieving historical world events.\n\nThe `world_id` and `id` fields are interchangeable.",
        "tags": [
          "Event History"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/worldIdParam"
          },
          {
            "$ref": "#/components/parameters/worldEventWorldIdParam"
          },
          {
            "$ref": "#/components/parameters/worldEventTypeParam"
          },
          {
            "$ref": "#/components/parameters/beforeParam"
          },
          {
            "$ref": "#/components/parameters/afterParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "world_event_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/world_event.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/world_stat_history": {
      "get": {
        "summary": "(Defunct) World Stat History",
        "description": "Historical data for a given global event.",
        "tags": [
          "Metagame & Alerts"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/worldIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "world_stat_history_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/world_stat_history.yaml"
                      }
                    }
                  }
                },
                "examples": {
                  "world_stat_history": {
                    "$ref": "#/components/examples/world_stat_history"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/zone": {
      "get": {
        "summary": "Zone",
        "description": "World continent and dynamic zone information.",
        "tags": [
          "Basics"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/zoneIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "zone_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/zone.yaml"
                      }
                    },
                    "returned": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "indar": {
                    "$ref": "#/components/examples/zone"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/zone_effect": {
      "get": {
        "summary": "Zone Effects",
        "description": "Passive effects such as weapon stat modifications from attachments or equipped skills.\n\nFor weapon damage effects, see `ps2/effect` instead. See the `ps2/zone_effect_type` collection for a list of available zone effect types.",
        "tags": [
          "Effects & Abilities"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/zoneEffectIdParam"
          },
          {
            "$ref": "#/components/parameters/zoneEffectTypeIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "zone_effect_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/zone_effect.yaml"
                      }
                    }
                  }
                },
                "examples": {
                  "zone_effect": {
                    "$ref": "#/components/examples/zone_effect"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{game}/zone_effect_type": {
      "get": {
        "summary": "Zone Effect Types",
        "description": "A type of zone effect.\n\nThe generic fields `paramX` and `stringX` are documented here. Note that not all fields are used by all zone effect types, or at all.",
        "tags": [
          "Effects & Abilities"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gameParam"
          },
          {
            "$ref": "#/components/parameters/zoneEffectTypeIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "zone_effect_type_list": {
                      "type": "array",
                      "items": {
                        "$ref": "schemas/zone_effect_type.yaml"
                      }
                    }
                  }
                },
                "examples": {
                  "zone_effect_type": {
                    "$ref": "#/components/examples/zone_effect_type"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "collectionParam": {
        "name": "collection",
        "in": "path",
        "description": "Name of the collection to access.",
        "required": true,
        "schema": {
          "type": "string",
          "enum": [
            "character",
            "world",
            "zone"
          ]
        },
        "examples": {
          "character": {
            "summary": "Character",
            "value": "character"
          },
          "outfit": {
            "summary": "Outfit",
            "value": "outfit"
          },
          "world": {
            "summary": "Game Servers",
            "value": "world"
          }
        }
      },
      "gameParam": {
        "name": "game",
        "in": "path",
        "description": "The API game to access.",
        "required": true,
        "schema": {
          "type": "string",
          "enum": [
            "ps2",
            "ps2:v2",
            "ps2ps4eu",
            "ps2ps4eu:v2",
            "ps2ps4us",
            "ps2ps4us:v2"
          ]
        },
        "examples": {
          "ps2": {
            "summary": "PS2 on PC (all servers)",
            "value": "ps2"
          },
          "ps2ps4eu": {
            "summary": "PS2 on PS4 (EU server)",
            "value": "ps2ps4eu"
          },
          "ps2ps4us": {
            "summary": "PS2 on PS4 (US server)",
            "value": "ps2ps4us"
          }
        }
      },
      "qcShowParam": {
        "name": "c:show",
        "in": "query",
        "description": "If set, only the response keys listed will be included in the response object. Overrides `c:hide`. Multiple fields can be comma-separated. Dot-notation is supported to select sub-keys.",
        "schema": {
          "type": "string"
        },
        "style": "form",
        "explode": false,
        "examples": {
          "notSet": {
            "summary": "Unset",
            "value": ""
          },
          "Basic Character Info": {
            "summary": "Basic character info only",
            "value": "name.first,character_id,battle_rank.value,prestige_level"
          }
        }
      },
      "qcHideParam": {
        "name": "c:hide",
        "in": "query",
        "description": "If set, the given response fields will be excluded from the response. If `c:show` is also set, this parameter will be ignored. Multiple fields can be comma-separated. Dot-notation is supported to select sub-keys.",
        "schema": {
          "type": "string"
        },
        "style": "form",
        "explode": false,
        "examples": {
          "hideNoisyKeys": {
            "summary": "Remove noisy subkeys",
            "value": "name.first_lower,cert,daily_ribbon"
          }
        }
      },
      "qcSortParam": {
        "name": "c:sort",
        "in": "query",
        "description": "Allows sorting the results by one or more fields. Multiple fields can be comma-separated. The sorting direction can be specified by appending `:1` (ascending, default) or `:-1` (descending).",
        "schema": {
          "type": "string"
        },
        "style": "form",
        "explode": false,
        "examples": {
          "notSet": {
            "summary": "Unset",
            "value": ""
          },
          "factionAsp": {
            "summary": "Sort by faction (asc) and ASP rank (desc)",
            "value": "faction_id,prestige_level:-1"
          }
        }
      },
      "qcHasParam": {
        "name": "c:has",
        "in": "query",
        "description": "Filters results by entries with non-NULL values in the given fields. Multiple fields can be comma-separated.",
        "schema": {
          "type": "string"
        },
        "style": "form",
        "explode": false
      },
      "qcResolveParam": {
        "name": "c:resolve",
        "in": "query",
        "description": "Include additional fields in the response. See the `resolve_list` field of the collection list for permissible values for a given collection.",
        "schema": {
          "type": "string"
        },
        "style": "form",
        "explode": true,
        "examples": {
          "notSet": {
            "summary": "Unset",
            "value": ""
          },
          "outfitMember": {
            "summary": "Outfit Member",
            "value": "outfit_member"
          },
          "profile": {
            "summary": "Last Seen Profile",
            "value": "profile"
          }
        }
      },
      "qcCaseParam": {
        "name": "c:case",
        "in": "query",
        "description": "Whether case sensitivity is enabled for string comparisongs. Defaults to true. Note that this impacts query performance, `ps2/character.name`, `ps2/outfit.name`, `ps2/outfit.alias` all provide lowercase variants for improved performance.",
        "schema": {
          "type": "string",
          "enum": [
            "true",
            "false",
            "0",
            "1"
          ]
        },
        "examples": {
          "notSet": {
            "summary": "Unset",
            "value": ""
          },
          "disable": {
            "summary": "Disabled",
            "value": "false"
          }
        }
      },
      "qcLimitParam": {
        "name": "c:limit",
        "in": "query",
        "description": "Return up to N results from the collection. Defaults to 1.",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 100000
        },
        "examples": {
          "notSet": {
            "summary": "Unset",
            "value": ""
          },
          "five": {
            "summary": "5 Results",
            "value": 5
          }
        }
      },
      "qcLimitPerDbParam": {
        "name": "c:limitPerDB",
        "in": "query",
        "description": "The `ps2/character` collection is distributed across 20 distinct databases. The per-DB limit may be more predictable in some use-cases. If set, `c:limit` will be ignored. For collections other than `ps2/character`, this parameter falls behaves exactly like `c:limit`.",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 5000
        },
        "examples": {
          "notSet": {
            "summary": "Unset",
            "value": ""
          },
          "five": {
            "summary": "1 Result per DB",
            "value": 1
          }
        }
      },
      "qcStartParam": {
        "name": "c:start",
        "in": "query",
        "description": "Skips the first N results from the result list. Together with `c:limit`, can be used for pagination. Note that sorting may be required to get consistent orderings. Due to the multiple databases used, this behaves unusually for the `ps2/character` collection.",
        "schema": {
          "type": "integer",
          "minimum": 0
        },
        "examples": {
          "notSet": {
            "summary": "Unset",
            "value": 0
          },
          "five": {
            "summary": "Skip first 10 Results",
            "value": 10
          }
        }
      },
      "qcIncludeNullParam": {
        "name": "c:includeNull",
        "in": "query",
        "description": "Whether to include response keys for NULL values, rather than omitting them. Note that this does not return the canonical `null`, but the string `\"NULL\"`.",
        "schema": {
          "type": "string",
          "enum": [
            "true",
            "false",
            "1",
            "0"
          ]
        },
        "examples": {
          "notSet": {
            "summary": "Unset",
            "value": ""
          },
          "five": {
            "summary": "Enabled",
            "value": "true"
          }
        }
      },
      "qcLangParam": {
        "name": "c:lang",
        "in": "query",
        "description": "By default, localized fields such as `ps2/item.name` will return results for all supported locales. This field allows specifying a single locale to return, greatly reducing response payload size.",
        "schema": {
          "type": "string",
          "enum": [
            "en",
            "de",
            "es",
            "fr",
            "it",
            "tr"
          ]
        },
        "examples": {
          "enOnly": {
            "summary": "Only EN locale",
            "value": "en"
          }
        }
      },
      "qcJoinParam": {
        "name": "c:join",
        "in": "query",
        "description": "Similar to `c:resolve`, but allows specifying arbitrary subqueries to add to the response. For details, see the [Census API documentation](https://census.daybreakgames.com/#collection-joining) or the community [Census API Primer](https://github.com/leonhard-s/auraxium/wiki/Census-API-Primer#joined-queries).",
        "schema": {
          "type": "string"
        },
        "style": "form",
        "explode": false,
        "examples": {
          "notSet": {
            "summary": "Unset",
            "value": ""
          },
          "charctersWorld": {
            "summary": "Character with game server",
            "value": "characers_world"
          },
          "characterOnlineStatus": {
            "summary": "Character online status",
            "value": "characters_online_status^show:online_status"
          }
        }
      },
      "qcTreeParam": {
        "name": "c:tree",
        "in": "query",
        "description": "Allows rearranging lists of result into a tree. See the [Census API documentation](https://census.daybreakgames.com/#tree-reformatting) for deatils.",
        "schema": {
          "type": "string"
        }
      },
      "qcTimingParam": {
        "name": "c:timing",
        "in": "query",
        "description": "Adds the top-level field `timing` containing timing information to the result object. For queries using `c:resolve` or `c:join`, this also contains information about the subqueries.",
        "schema": {
          "type": "string",
          "enum": [
            "true",
            "false",
            "0",
            "1"
          ]
        },
        "examples": {
          "notSet": {
            "summary": "Unset",
            "value": ""
          },
          "timing": {
            "summary": "With timing info",
            "value": "true"
          }
        }
      },
      "qcExactMatchFirstParam": {
        "name": "c:exactMatchFirst",
        "in": "query",
        "description": "When performing fuzzy string queries, such as `^` (startswith) or `*` (contains), promote any match exactly matching the full input string to the top of the search list. Useful for user-facing name lookups.",
        "schema": {
          "type": "string",
          "enum": [
            "true",
            "false",
            "0",
            "1"
          ]
        }
      },
      "qcDistinctParam": {
        "name": "c:distinct",
        "in": "query",
        "description": "Instead of fetching results, list all distinct values for a given field. Note that this may include duplicate entries for `ps2/character` due to the multiple databases. Results are truncated to 20'000 values.",
        "schema": {
          "type": "string"
        },
        "examples": {
          "notSet": {
            "summary": "Unset",
            "value": ""
          },
          "factions": {
            "summary": "Unique factions",
            "value": "faction_id"
          },
          "profiles": {
            "summary": "Unique profiles",
            "value": "profile_id"
          }
        }
      },
      "qcRetryParam": {
        "name": "c:retry",
        "in": "query",
        "description": "By default, the API will retry any queries once before failing. By setting this value to `false`, you can fail earlier, which can be useful if you have your own retry mechanisms or logging configuration.",
        "schema": {
          "type": "string",
          "enum": [
            "true",
            "false",
            "0",
            "1"
          ]
        },
        "examples": {
          "notSet": {
            "summary": "Unset",
            "value": ""
          },
          "noRetry": {
            "summary": "Retry disabled",
            "value": "false"
          }
        }
      },
      "abilityIdParam": {
        "name": "ability_id",
        "in": "query",
        "description": "Unique ID of an ability.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "abilityTypeIdParam": {
        "name": "ability_type_id",
        "in": "query",
        "description": "Unique ID of an ability type.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "achievementIdParam": {
        "name": "achievement_id",
        "in": "query",
        "description": "Unique ID of an achievement.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "afterParam": {
        "name": "after",
        "in": "query",
        "description": "Only return results newer than the given UTC timestamp.",
        "schema": {
          "type": "string"
        }
      },
      "armorFacingIdParam": {
        "name": "armor_facing_id",
        "in": "query",
        "description": "Unique ID of the armor facing direction.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "armorInfoIdParam": {
        "name": "armor_info_id",
        "in": "query",
        "description": "Unique ID of the armor info entry.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "characterIdParam": {
        "name": "character_id",
        "in": "query",
        "description": "Unique identifier of a charcter. Note that character IDs are not guaranteed to be unique across games; the same ID may be assigned to different characters for `ps2` than for `ps2ps4us`.\n\nWhen converting this value to native representations, note that a 64 bit integer type is required to avoid truncation.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int64",
        "examples": {
          "pc": {
            "summary": "Higby (PC)",
            "value": "5428010618015189601"
          },
          "ps4eu": {
            "summary": "Dreadnaught (PS4 EU)",
            "value": "5428352936466451601"
          },
          "ps4us": {
            "summary": "Kevin (PS4 US)",
            "value": "5428352933375941729"
          }
        }
      },
      "beforeParam": {
        "name": "before",
        "in": "query",
        "description": "Only return results older than the given UTC timestamp.",
        "schema": {
          "type": "string"
        }
      },
      "characterNameFirstParam": {
        "name": "name.first",
        "in": "query",
        "description": "Name of the character. Note that when looking up characters, it is preferable to query `name.first_lower` with a lowercase version of the search string.",
        "schema": {
          "type": "string"
        },
        "examples": {
          "notSet": {
            "summary": "Unset",
            "value": ""
          },
          "higby": {
            "summary": "Higby",
            "value": "Higby"
          }
        }
      },
      "characterNameFirstLowerParam": {
        "name": "name.first_lower",
        "in": "query",
        "description": "Lowercase version of `name.first`. When performing case-insensitive lookups, using this field is more performant than setting `c:case=false`.",
        "schema": {
          "type": "string"
        },
        "examples": {
          "notSet": {
            "summary": "Unset",
            "value": ""
          },
          "higby": {
            "summary": "Higby",
            "value": "higby"
          }
        }
      },
      "currencyIdParam": {
        "name": "currency_id",
        "in": "query",
        "description": "Unique ID of a currency.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "directiveIdParam": {
        "name": "directive_id",
        "in": "query",
        "description": "Unique ID of a directive.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "directiveTierIdParam": {
        "name": "directive_tier_id",
        "in": "query",
        "description": "Unique ID of a directive tier.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "directiveTreeIdParam": {
        "name": "directive_tree_id",
        "in": "query",
        "description": "Unique ID of a directive tree.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "directiveTreeCategoryIdParam": {
        "name": "directive_tree_category_id",
        "in": "query",
        "description": "Unique ID of a directive tree category.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "effectIdParam": {
        "name": "effect_id",
        "in": "query",
        "description": "Unique ID of the effect.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "effectTypeIdParam": {
        "name": "effect_type_id",
        "in": "query",
        "description": "Unique ID of the effect type.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "eventTypeParam": {
        "name": "type",
        "in": "query",
        "description": "Type of event to retrieve.",
        "schema": {
          "type": "string",
          "enum": [
            "BATTLE_RANK",
            "ITEM",
            "ACHIEVEMENT",
            "DEATH",
            "KILL",
            "VEHICLE_DESTROY",
            "FACILITY_CHARACTER",
            "FACILITYCONTROL",
            "METAGAME"
          ]
        }
      },
      "characterEventTypeParam": {
        "name": "type",
        "in": "query",
        "description": "Type of event to retrieve.",
        "schema": {
          "type": "string",
          "enum": [
            "BATTLE_RANK",
            "ITEM",
            "ACHIEVEMENT",
            "DEATH",
            "KILL",
            "VEHICLE_DESTROY",
            "FACILITY_CHARACTER"
          ]
        }
      },
      "characterEventCharacterIdParam": {
        "name": "id",
        "in": "query",
        "description": "Alias for `character_id`.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int64"
      },
      "characterEventsGroupedEventTypeParam": {
        "name": "type",
        "in": "query",
        "description": "Type of event to retrieve.",
        "schema": {
          "type": "string",
          "enum": [
            "DEATH",
            "KILL"
          ]
        }
      },
      "experienceIdParam": {
        "name": "experience_id",
        "in": "query",
        "description": "Unique ID of the experience type.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "facilityIdAParam": {
        "name": "facility_id_a",
        "in": "query",
        "description": "Unique ID of the first facility.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "facilityIdBParam": {
        "name": "facility_id_b",
        "in": "query",
        "description": "Unique ID of the second facility.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "facilityTypeIdParam": {
        "name": "facility_type_id",
        "in": "query",
        "description": "Unique ID of the facility type.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "factionIdParam": {
        "name": "faction_id",
        "in": "query",
        "description": "Unique identifier of a faction.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "fireGroupIdParam": {
        "name": "fire_group_id",
        "in": "query",
        "description": "Unique identifier of a fire group.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "fireModeIdParam": {
        "name": "fire_mode_id",
        "in": "query",
        "description": "Unique identifier of a fire mode.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "fireModeTypeIdParam": {
        "name": "fire_mode_type_id",
        "in": "query",
        "description": "Unique identifier of a fire mode type.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "imageIdParam": {
        "name": "image_id",
        "in": "query",
        "description": "Unique identifier of an image.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "imageSetIdParam": {
        "name": "image_set_id",
        "in": "query",
        "description": "Identifier of an image set.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "itemIdParam": {
        "name": "item_id",
        "in": "query",
        "description": "Unique identifier of an item.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "itemTypeIdParam": {
        "name": "item_type_id",
        "in": "query",
        "description": "Unique identifier of an item type.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "itemCategoryIdParam": {
        "name": "item_category_id",
        "in": "query",
        "description": "Unique identifier of an item category.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "leaderboardNameParam": {
        "name": "name",
        "in": "query",
        "description": "Name of a statistic for leaderboards.",
        "required": true,
        "schema": {
          "type": "string",
          "enum": [
            "Kills",
            "Score",
            "Time",
            "Deaths"
          ]
        }
      },
      "leaderboardPeriodParam": {
        "name": "period",
        "in": "query",
        "description": "Time period for a leadboard.",
        "required": true,
        "schema": {
          "type": "string",
          "enum": [
            "Forever",
            "Monthly",
            "Weekly",
            "Daily",
            "OneLife"
          ]
        }
      },
      "leaderboardCharacterIdParam": {
        "name": "character_id",
        "in": "query",
        "description": "Unique identifier of a character for which to fetch leaderboard data.",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int64"
      },
      "leaderboardWorldParam": {
        "name": "world",
        "in": "query",
        "description": "Server for which to fetch leaderboard data. Note that this may return results for defunct servers, such as Lithcorp (ID 11) despite those characters since having been transfered to Cobalt (ID 13).",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "loadoutIdParam": {
        "name": "loadout_id",
        "in": "query",
        "description": "Unique identifier of a loadout.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "mapRegionIdParam": {
        "name": "map_region_id",
        "in": "query",
        "description": "Unique identifier of a map region.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "marketingBundleIdParam": {
        "name": "marketing_bundle_id",
        "in": "query",
        "description": "Unique identifier of a marketing bundle.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "metagameEventIdParam": {
        "name": "metagame_event_id",
        "in": "query",
        "description": "Unique identifier of a metagame event.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "metagameEventStateIdParam": {
        "name": "metagame_event_state_id",
        "in": "query",
        "description": "Unique identifier of a metagame event state.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "objectiveIdParam": {
        "name": "objective_id",
        "in": "query",
        "description": "Unique identifier of an objective.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "objectiveGroupIdParam": {
        "name": "objective_group_id",
        "in": "query",
        "description": "Unique identifier of an objective group.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "objectiveSetIdParam": {
        "name": "objective_set_id",
        "in": "query",
        "description": "Unique identifier of an objective set.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "objectiveTypeIdParam": {
        "name": "objective_type_id",
        "in": "query",
        "description": "Unique identifier of an objective type.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "outfitIdParam": {
        "name": "outfit_id",
        "in": "query",
        "description": "Unique identifier of an outfit.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int64"
      },
      "profileIdParam": {
        "name": "profile_id",
        "in": "query",
        "description": "Unique identifier of a profile.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "projectileIdParam": {
        "name": "projectile_id",
        "in": "query",
        "description": "Unique identifier of a projectile.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "projectileFlightTypeIdParam": {
        "name": "projectile_flight_type_id",
        "in": "query",
        "description": "Unique identifier of a projectile flight type.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "regionIdParam": {
        "name": "region_id",
        "in": "query",
        "description": "Unique identifier of a region.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "rewardIdParam": {
        "name": "reward_id",
        "in": "query",
        "description": "Unique identifier of a reward.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "rewardGroupIdParam": {
        "name": "reward_group_id",
        "in": "query",
        "description": "Unique identifier of a reward group.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "rewardSetIdParam": {
        "name": "reward_set_id",
        "in": "query",
        "description": "Unique identifier of a reward set.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "rewardTypeIdParam": {
        "name": "reward_type_id",
        "in": "query",
        "description": "Unique identifier of a reward type.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "skillIdParam": {
        "name": "skill_id",
        "in": "query",
        "description": "Unique identifier of a skill.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "skillLineIdParam": {
        "name": "skill_line_id",
        "in": "query",
        "description": "Unique identifier of a skill line.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "skillCategoryIdParam": {
        "name": "skill_category_id",
        "in": "query",
        "description": "Unique identifier of a skill category.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "skillSetIdParam": {
        "name": "skill_set_id",
        "in": "query",
        "description": "Unique identifier of a skill set.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "statNameParam_characters_stat": {
        "name": "stat_name",
        "in": "query",
        "description": "Name of a statistic for the `characters_stat` collection.",
        "schema": {
          "type": "string",
          "enum": [
            "achievement_count",
            "assist_count",
            "deaths",
            "facility_defended_count",
            "fire_count",
            "hit_count",
            "medal_count",
            "play_time",
            "score",
            "skill_points",
            "weapon_deaths",
            "weapon_fire_count",
            "weapon_hit_count",
            "weapon_play_time",
            "weapon_score"
          ]
        }
      },
      "statNameParam_characters_stat_by_faction": {
        "name": "stat_name",
        "in": "query",
        "description": "Name of a statistic for the `characters_stat_by_faction` collection.",
        "schema": {
          "type": "string",
          "enum": [
            "domination_count",
            "facility_capture_count",
            "killed_by",
            "kills",
            "revenge_count",
            "weapon_damage_given",
            "weapon_damage_taken_by",
            "weapon_headshots",
            "weapon_killed_by",
            "weapon_kills",
            "weapon_vehicle_kills"
          ]
        }
      },
      "statNameParam_characters_stat_history": {
        "name": "stat_name",
        "in": "query",
        "description": "Name of a statistic for the `characters_stat_history` collection.",
        "schema": {
          "type": "string",
          "enum": [
            "battle_rank",
            "certs",
            "deaths",
            "facility_capture",
            "facility_defend",
            "kills",
            "medals",
            "ribbons",
            "score",
            "time"
          ]
        }
      },
      "statNameParam_characters_weapon_stat": {
        "name": "stat_name",
        "in": "query",
        "description": "Name of a statistic for the `characters_weapon_stat` collection.",
        "schema": {
          "type": "string",
          "enum": [
            "weapon_deaths",
            "weapon_fire_count",
            "weapon_hit_count",
            "weapon_play_time",
            "weapon_score"
          ]
        }
      },
      "statNameParam_characters_weapon_stat_by_faction": {
        "name": "stat_name",
        "in": "query",
        "description": "Name of a statistic for the `characters_weapon_stat_by_faction` collection.",
        "schema": {
          "type": "string",
          "enum": [
            "weapon_damage_given",
            "weapon_damage_taken_by",
            "weapon_headshots",
            "weapon_killed_by",
            "weapon_kills",
            "weapon_vehicle_kills"
          ]
        }
      },
      "profileIdParam_character": {
        "name": "profile_id",
        "in": "query",
        "description": "Subset of identifiers from the `profile_id` collection. The values map onto the NC loadout IDs regardless of faction. 0: All time, 1: Infiltrator, 3: Light Assault, 4: Combat Medic, 5: Engineer, 6: MAX Unit.",
        "schema": {
          "type": "string",
          "enum": [
            "0",
            "1",
            "3",
            "4",
            "5",
            "6",
            "7"
          ]
        }
      },
      "resistInfoIdParam": {
        "name": "resist_info_id",
        "in": "query",
        "description": "Unique identifier of a resist info entry.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "resistTypeIdParam": {
        "name": "resist_type_id",
        "in": "query",
        "description": "Unique identifier of a resist type.",
        "schema": {
          "type": "string"
        }
      },
      "resourceTypeIdParam": {
        "name": "resource_type_id",
        "in": "query",
        "description": "Unique identifier of a resource type.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "targetTypeIdParam": {
        "name": "target_type_id",
        "in": "query",
        "description": "Unique identifier of a target type.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "titleIdParam": {
        "name": "title_id",
        "in": "query",
        "description": "Unique identifier of a character title.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "vehicleIdParam": {
        "name": "vehicle_id",
        "in": "query",
        "description": "Unique identifier of a vehicle.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "weaponIdParam": {
        "name": "weapon_id",
        "in": "query",
        "description": "Unique identifier of a weapon.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "worldIdParam": {
        "name": "world_id",
        "in": "query",
        "description": "Unique identifier of a world.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "worldEventTypeParam": {
        "name": "type",
        "in": "query",
        "description": "Event name for the `world_event` collection.",
        "schema": {
          "type": "string",
          "enum": [
            "FACILITYCONTROL",
            "METAGAME"
          ]
        }
      },
      "worldEventWorldIdParam": {
        "name": "id",
        "in": "query",
        "description": "Alias for `world_id`.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "zoneIdParam": {
        "name": "zone_id",
        "in": "query",
        "description": "Unique identifier of a zone.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "zoneEffectIdParam": {
        "name": "zone_effect_id",
        "in": "query",
        "description": "Unique ID of a zone effect.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      },
      "zoneEffectTypeIdParam": {
        "name": "zone_effect_type_id",
        "in": "query",
        "description": "Unique ID of a zone  type.",
        "schema": {
          "type": "string"
        },
        "x-cast-to": "int32"
      }
    },
    "schemas": {},
    "examples": {
      "ability": {
        "summary": "AoE Heal (Level 6).\nhttps://census.daybreakgames.com/get/ps2/ability?ability_id=7719",
        "value": {
          "ability_list": [
            {
              "ability_id": "7719",
              "ability_type_id": "10",
              "resource_type_id": "38",
              "resource_first_cost": "0.32",
              "resource_cost_per_msec": "0.32",
              "radius_max": "7",
              "flag_toggle": "1"
            }
          ],
          "returned": 1
        }
      },
      "ability_type": {
        "summary": "All ability types.\nhttps://census.daybreakgames.com/get/ps2/ability_type?c:limit=50",
        "value": {
          "ability_type_list": [
            {
              "ability_type_id": "3"
            },
            {
              "ability_type_id": "4"
            },
            {
              "ability_type_id": "5",
              "description": "Target not used"
            },
            {
              "ability_type_id": "6"
            },
            {
              "ability_type_id": "8"
            },
            {
              "ability_type_id": "10",
              "param1": "Check Target Requirement Periodically"
            },
            {
              "ability_type_id": "12"
            },
            {
              "ability_type_id": "13"
            },
            {
              "ability_type_id": "16"
            },
            {
              "ability_type_id": "17",
              "param1": "Check Target Requirement Periodically"
            },
            {
              "ability_type_id": "19"
            },
            {
              "ability_type_id": "26",
              "description": "Stays locked on first valid target found"
            },
            {
              "ability_type_id": "30"
            },
            {
              "ability_type_id": "34",
              "description": "MountedVehicleMaintainOnGuid"
            }
          ],
          "returned": 14
        }
      },
      "achievement_medals": {
        "summary": "Betelgeuse Weapon Medals.\nhttps://census.daybreakgames.com/get/ps2/achievement?item_id=1894&c:limit=10&repeatable=0",
        "value": {
          "achievement_list": [
            {
              "achievement_id": "12411",
              "item_id": "1894",
              "objective_group_id": "12411",
              "reward_id": "100",
              "repeatable": "0",
              "name": {
                "de": "Betelgeuse 54-A",
                "en": "Betelgeuse 54-A",
                "es": "Betelgeuse 54-A",
                "fr": "B\u00e9telgeuse 54-A",
                "it": "Betelgeuse 54-A"
              },
              "description": {
                "de": "10 Feinde get\u00f6tet",
                "en": "10 Enemies Killed",
                "es": "10 enemigos muertos",
                "fr": "10 ennemis tu\u00e9s",
                "it": "10 nemici uccisi",
                "tr": "10 D\u00fc\u015fman \u00d6ld\u00fcr\u00fcld\u00fc"
              },
              "image_set_id": "1564",
              "image_id": "3072",
              "image_path": "/files/ps2/images/static/3072.png"
            },
            {
              "achievement_id": "12412",
              "item_id": "1894",
              "objective_group_id": "12412",
              "reward_id": "101",
              "repeatable": "0",
              "name": {
                "de": "Betelgeuse 54-A",
                "en": "Betelgeuse 54-A",
                "es": "Betelgeuse 54-A",
                "fr": "B\u00e9telgeuse 54-A",
                "it": "Betelgeuse 54-A"
              },
              "description": {
                "de": "50 Feinde get\u00f6tet",
                "en": "50 Enemies Killed",
                "es": "50 enemigos muertos",
                "fr": "50 ennemis tu\u00e9s",
                "it": "50 nemici uccisi",
                "tr": "50 D\u00fc\u015fman \u00d6ld\u00fcr\u00fcld\u00fc"
              },
              "image_set_id": "1565",
              "image_id": "3079",
              "image_path": "/files/ps2/images/static/3079.png"
            },
            {
              "achievement_id": "12413",
              "item_id": "1894",
              "objective_group_id": "12413",
              "reward_id": "102",
              "repeatable": "0",
              "name": {
                "de": "Betelgeuse 54-A",
                "en": "Betelgeuse 54-A",
                "es": "Betelgeuse 54-A",
                "fr": "B\u00e9telgeuse 54-A",
                "it": "Betelgeuse 54-A"
              },
              "description": {
                "de": "100 Feinde get\u00f6tet",
                "en": "100 Enemies Killed",
                "es": "100 enemigos muertos",
                "fr": "100 ennemis tu\u00e9s",
                "it": "100 nemici uccisi",
                "tr": "100 D\u00fc\u015fman \u00d6ld\u00fcr\u00fcld\u00fc"
              },
              "image_set_id": "1566",
              "image_id": "3075",
              "image_path": "/files/ps2/images/static/3075.png"
            },
            {
              "achievement_id": "12414",
              "item_id": "1894",
              "objective_group_id": "12414",
              "reward_id": "615",
              "repeatable": "0",
              "name": {
                "de": "Betelgeuse 54-A",
                "en": "Betelgeuse 54-A",
                "es": "Betelgeuse 54-A",
                "fr": "B\u00e9telgeuse 54-A",
                "it": "Betelgeuse 54-A"
              },
              "description": {
                "de": "1000 Feinde get\u00f6tet",
                "en": "1000 Enemies Killed",
                "es": "1000 enemigos muertos",
                "fr": "1 000 ennemis tu\u00e9s",
                "it": "1000 nemici uccisi",
                "tr": "1000 D\u00fc\u015fman \u00d6ld\u00fcr\u00fcld\u00fc"
              },
              "image_set_id": "1567",
              "image_id": "3068",
              "image_path": "/files/ps2/images/static/3068.png"
            }
          ],
          "returned": 4
        }
      },
      "achievement_ribbon": {
        "summary": "Healing Ribbons.\nhttps://census.daybreakgames.com/get/ps2/achievement?achievement_id=2554",
        "value": {
          "achievement_list": [
            {
              "achievement_id": "2554",
              "item_id": "0",
              "objective_group_id": "2554",
              "reward_id": "3019",
              "repeatable": "1",
              "name": {
                "de": "Heilung l\u00e4uft",
                "en": "Healing",
                "es": "Curaci\u00f3n",
                "fr": "Gu\u00e9rison en cours",
                "it": "Guarigione",
                "tr": "\u0130yile\u015ftiriliyor"
              },
              "description": {
                "de": "Sanit\u00e4ter k\u00f6nnen schnell den Schaden heilen, der verb\u00fcndeten Truppen zugef\u00fcgt wurde und sie dadurch l\u00e4nger im Kampf behalten.",
                "en": "Medics can quickly heal damage that has been done to allied troops keeping in the fight longer.",
                "es": "Los m\u00e9dicos pueden curar a las tropas aliadas r\u00e1pidamente para mantenerlas m\u00e1s tiempo en combate.",
                "fr": "Les M\u00e9decins peuvent gu\u00e9rir rapidement les d\u00e9g\u00e2ts inflig\u00e9s aux troupes alli\u00e9es et les garder plus longtemps au combat. ",
                "it": "I medici possono velocemente guarire i danni inferti alle truppe alleate facendole restare pi\u00f9 a lungo nel combattimento.",
                "tr": "S\u0131hh\u0131yeler m\u00fcttefik askerlerin daha uzun s\u00fcre sava\u015fmalar\u0131n\u0131 sa\u011flamak i\u00e7in h\u0131zl\u0131ca yaralar\u0131 sarabilirler."
              },
              "image_set_id": "7996",
              "image_id": "8440",
              "image_path": "/files/ps2/images/static/8440.png"
            }
          ],
          "returned": 1
        }
      },
      "armor_facing": {
        "summary": "All armor facing directions.\nhttps://census.daybreakgames.com/get/ps2/armor_facing?c:limit=10",
        "value": {
          "armor_facing_list": [
            {
              "armor_facing_id": "0",
              "description": "Front"
            },
            {
              "armor_facing_id": "1",
              "description": "Right"
            },
            {
              "armor_facing_id": "2",
              "description": "Top"
            },
            {
              "armor_facing_id": "3",
              "description": "Rear"
            },
            {
              "armor_facing_id": "4",
              "description": "Left"
            },
            {
              "armor_facing_id": "5",
              "description": "Bottom"
            },
            {
              "armor_facing_id": "6",
              "description": "All"
            }
          ],
          "returned": 7
        }
      },
      "armor_info": {
        "summary": "Default Sunderer armor values, excluding Blockade Armor.\nhttps://census.daybreakgames.com/get/ps2/armor_info?&description=^Sunderer&armor_info_id=%3C50&c:limit=10",
        "value": {
          "armor_info_list": [
            {
              "armor_info_id": "20",
              "armor_facing_id": "0",
              "armor_percent": "0",
              "description": "Sunderer - Front"
            },
            {
              "armor_info_id": "21",
              "armor_facing_id": "1",
              "armor_percent": "0",
              "description": "Sunderer - Right"
            },
            {
              "armor_info_id": "22",
              "armor_facing_id": "2",
              "armor_percent": "0",
              "description": "Sunderer - Top"
            },
            {
              "armor_info_id": "23",
              "armor_facing_id": "3",
              "armor_percent": "0",
              "description": "Sunderer - Rear"
            },
            {
              "armor_info_id": "24",
              "armor_facing_id": "4",
              "armor_percent": "0",
              "description": "Sunderer - Left"
            },
            {
              "armor_info_id": "25",
              "armor_facing_id": "5",
              "armor_percent": "0",
              "description": "Sunderer - Bottom"
            }
          ],
          "returned": 6
        }
      },
      "character_higby": {
        "summary": "Higby",
        "value": {
          "character_list": [
            {
              "character_id": "5428010618015189601",
              "name": {
                "first": "Higby",
                "first_lower": "higby"
              },
              "faction_id": "2",
              "head_id": "1",
              "title_id": "100",
              "times": {
                "creation": "1353427357",
                "creation_date": "2012-11-20 16:02:37.0",
                "last_save": "1669323771",
                "last_save_date": "2022-11-24 21:02:51.0",
                "last_login": "1669320455",
                "last_login_date": "2022-11-24 20:07:35.0",
                "login_count": "1738",
                "minutes_played": "75517"
              },
              "certs": {
                "earned_points": "214706",
                "gifted_points": "78844",
                "spent_points": "257491",
                "available_points": "36059",
                "percent_to_next": "0.1721388888362"
              },
              "battle_rank": {
                "percent_to_next": "2",
                "value": "101"
              },
              "profile_id": "4",
              "daily_ribbon": {
                "count": "0",
                "time": "1669248000",
                "date": "2022-11-24 00:00:00.0"
              },
              "prestige_level": "0"
            }
          ],
          "returned": 1
        }
      },
      "character_name_higby": {
        "summary": "Higby",
        "value": {
          "character_list": [
            {
              "character_id": "5428010618015189601",
              "name": {
                "first": "Higby",
                "first_lower": "higby"
              }
            }
          ],
          "returned": 1
        }
      },
      "characters_achievement_medal": {
        "summary": "SVA-88 Bronze Medal.\nhttps://census.daybreakgames.com/get/ps2/characters_achievement?character_id=5428010618015189601&achievement_id=113",
        "value": {
          "characters_achievement_list": [
            {
              "character_id": "5428010618015189601",
              "achievement_id": "113",
              "earned_count": "1",
              "start": "1384645540",
              "start_date": "2013-11-16 23:45:40.0",
              "finish": "1404874213",
              "finish_date": "2014-07-09 02:50:13.0",
              "last_save": "1412784696",
              "last_save_date": "2014-10-08 16:11:36.142294"
            }
          ],
          "returned": 1
        }
      },
      "characters_achievement_ribbon": {
        "summary": "Revive Ribbons.\nhttps://census.daybreakgames.com/get/ps2/characters_achievement?character_id=5428010618015189601&achievement_id=2552",
        "value": {
          "characters_achievement_list": [
            {
              "character_id": "5428010618015189601",
              "achievement_id": "2552",
              "earned_count": "468",
              "start": "1432682221",
              "start_date": "2015-05-26 23:17:01.0",
              "finish": "0",
              "finish_date": "1970-01-01 00:00:00.0",
              "last_save": "1432659069",
              "last_save_date": "2015-05-26 16:51:09.0"
            }
          ],
          "returned": 1
        }
      },
      "characters_currency": {
        "summary": "Higby's currencies.\nhttps://census.daybreakgames.com/get/ps2/characters_currency?character_id=5428010618015189601",
        "value": {
          "characters_currency_list": [
            {
              "character_id": "5428010618015189601",
              "currency_id": "4",
              "currency_name": "nanites",
              "quantity": "750",
              "prestige_currency": "0"
            }
          ],
          "returned": 1
        }
      },
      "characters_directive": {
        "summary": "Healing.\nhttps://census.daybreakgames.com/get/ps2/characters_directive?character_id=5428010618015189601&directive_id=141",
        "value": {
          "characters_directive_list": [
            {
              "character_id": "5428010618015189601",
              "directive_tree_id": "28",
              "directive_id": "141",
              "completion_time": "1585080577",
              "completion_time_date": "2020-03-24 20:09:37.0"
            }
          ],
          "returned": 1
        }
      },
      "characters_directive_objective": {
        "summary": "Headshot kill progress.\nhttps://census.daybreakgames.com/get/ps2/characters_directive_objective?character_id=5428010618015189601&directive_id=1732",
        "value": {
          "characters_directive_objective_list": [
            {
              "character_id": "5428010618015189601",
              "directive_id": "1732",
              "objective_id": "13402",
              "objective_group_id": "13402",
              "status": "1",
              "state_data": "42"
            }
          ],
          "returned": 1
        }
      },
      "characters_directive_tier": {
        "summary": "Carbines (Novice).\nhttps://census.daybreakgames.com/get/ps2/characters_directive_tier?character_id=5428010618015189601&directive_tree_id=4&directive_tier_id=1",
        "value": {
          "characters_directive_tier_list": [
            {
              "character_id": "5428010618015189601",
              "directive_tree_id": "4",
              "directive_tier_id": "1",
              "completion_time": "1585080577",
              "completion_time_date": "2020-03-24 20:09:37.0"
            }
          ],
          "returned": 1
        }
      },
      "characters_directive_tree": {
        "summary": "Carbines.\nhttps://census.daybreakgames.com/get/ps2/characters_directive_tree?character_id=5428010618015189601&directive_tree_id=4",
        "value": {
          "characters_directive_tree_list": [
            {
              "character_id": "5428010618015189601",
              "directive_tree_id": "4",
              "current_directive_tier_id": "5",
              "current_level": "0",
              "completion_time": "1585080577",
              "completion_time_date": "2020-03-24 20:09:37.0"
            }
          ],
          "returned": 1
        }
      },
      "characters_friend": {
        "summary": "Higby",
        "description": "Only the first 3 friends are shown for brevity.",
        "value": {
          "characters_friend_list": [
            {
              "character_id": "5428010618015189601",
              "name": null,
              "friend_list": [
                {
                  "character_id": "5428010618014254785",
                  "last_login_time": "1679721693",
                  "online": "0"
                },
                {
                  "character_id": "5428010618014429969",
                  "last_login_time": "1658899596",
                  "online": "0"
                },
                {
                  "character_id": "5428010618015193969",
                  "last_login_time": "1679718619",
                  "online": "0"
                }
              ]
            }
          ],
          "returned": 1
        }
      },
      "characters_item": {
        "summary": "Higby's items. Note that the list has been truncated to 5 items as it always returns the full list.\nhttps://census.daybreakgames.com/get/ps2/characters_item?character_id=5428010618015189601",
        "value": {
          "characters_item_list": [
            {
              "character_id": "5428010618015189601",
              "item_id": "1"
            },
            {
              "character_id": "5428010618015189601",
              "item_id": "7"
            },
            {
              "character_id": "5428010618015189601",
              "item_id": "13"
            },
            {
              "character_id": "5428010618015189601",
              "item_id": "19"
            },
            {
              "character_id": "5428010618015189601",
              "item_id": "23"
            }
          ],
          "returned": 2522
        }
      },
      "characters_leaderboard": {
        "summary": "Higby's leaderboard entry for all-time kills.\nhttps://census.daybreakgames.com/get/ps2/characters_leaderboard?character_id=5428010618015189601&name=Kills&period=Forever",
        "value": {
          "limit": 1,
          "characters_leaderboard_list": [
            {
              "character_id": "5428010618015189601",
              "value": "68754",
              "rank": "6583"
            }
          ],
          "returned": 1,
          "key": "Forever_Kills",
          "count": 10000
        }
      },
      "characters_online_status": {
        "summary": "Higby",
        "value": {
          "characters_online_status_list": [
            {
              "character_id": "5428010618015189601",
              "online_status": "0"
            }
          ],
          "returned": 1
        }
      },
      "characters_skill": {
        "summary": "Nanite Auto Repair.\nhttps://census.daybreakgames.com/get/ps2/characters_skill?character_id=5428010618015189601&skill_id=113",
        "value": {
          "characters_skill_list": [
            {
              "character_id": "5428010618015189601",
              "skill_id": "113",
              "last_save": "1412784699",
              "last_save_date": "2014-10-08 16:11:39.389"
            }
          ],
          "returned": 1
        }
      },
      "characters_world": {
        "summary": "Higby",
        "value": {
          "characters_world_list": [
            {
              "character_id": "5428010618015189601",
              "world_id": "1"
            }
          ],
          "returned": 1
        }
      },
      "characters_stat": {
        "summary": "Character Statistics",
        "description": "Shows the playtime for Combat Medic.\nhttps://census.daybreakgames.com/get/ps2/characters_stat?character_id=5428010618015189601&stat_name=play_time&profile_id=4",
        "value": {
          "characters_stat_list": [
            {
              "character_id": "5428010618015189601",
              "stat_name": "play_time",
              "profile_id": "4",
              "value_forever": "4947689",
              "value_monthly": "41461",
              "value_weekly": "13599",
              "value_daily": "197",
              "value_one_life_max": "10459",
              "last_save": "1684499211",
              "last_save_date": "2023-05-19 12:26:50.711936"
            }
          ],
          "returned": 1
        }
      },
      "characters_stat_by_faction": {
        "summary": "Character Statistics by Faction",
        "description": "Shows the kills of an NC character. Note that no NC kills are listed, which is doubtful.\nhttps://census.daybreakgames.com/get/ps2/characters_stat_by_faction?character_id=5428010618015189601&stat_name=kills",
        "value": {
          "characters_stat_by_faction_list": [
            {
              "character_id": "5428010618015189601",
              "stat_name": "kills",
              "profile_id": "1",
              "value_forever_vs": "3026",
              "value_forever_nc": "3356",
              "value_forever_tr": "2551",
              "value_monthly_vs": "3",
              "value_monthly_nc": "0",
              "value_monthly_tr": "8",
              "value_weekly_vs": "1",
              "value_weekly_nc": "0",
              "value_weekly_tr": "3",
              "value_daily_vs": "0",
              "value_daily_nc": "0",
              "value_daily_tr": "1",
              "value_one_life_max_vs": "7",
              "value_one_life_max_nc": "9",
              "value_one_life_max_tr": "6",
              "last_save": "1669295387",
              "last_save_date": "2022-11-24 13:09:46.730053"
            }
          ],
          "returned": 1
        }
      },
      "characters_stat_history": {
        "summary": "Historical Statistics",
        "description": "Historical kills of an NC character.\nhttps://census.daybreakgames.com/get/ps2/characters_stat_history?character_id=5428010618015189601&stat_name=kills",
        "value": {
          "characters_stat_history_list": [
            {
              "character_id": "5428010618015189601",
              "stat_name": "kills",
              "all_time": "68754",
              "one_life_max": "185",
              "day": {
                "d01": "26",
                "d02": "0",
                "d03": "0",
                "d04": "5",
                "d05": "20",
                "d06": "51",
                "d07": "0",
                "d08": "0",
                "d09": "0",
                "d10": "0",
                "d11": "0",
                "d12": "0",
                "d13": "0",
                "d14": "0",
                "d15": "0",
                "d16": "0",
                "d17": "0",
                "d18": "0",
                "d19": "0",
                "d20": "0",
                "d21": "0",
                "d22": "0",
                "d23": "0",
                "d24": "0",
                "d25": "0",
                "d26": "0",
                "d27": "0",
                "d28": "0",
                "d29": "0",
                "d30": "0",
                "d31": "0"
              },
              "month": {
                "m01": "102",
                "m02": "0",
                "m03": "0",
                "m04": "0",
                "m05": "0",
                "m06": "0",
                "m07": "0",
                "m08": "0",
                "m09": "0",
                "m10": "0",
                "m11": "0",
                "m12": "0"
              },
              "week": {
                "w01": "51",
                "w02": "51",
                "w03": "0",
                "w04": "0",
                "w05": "0",
                "w06": "0",
                "w07": "0",
                "w08": "0",
                "w09": "0",
                "w10": "0",
                "w11": "0",
                "w12": "0",
                "w13": "0"
              },
              "last_save": "1669295387",
              "last_save_date": "2022-11-24 13:09:47.032"
            }
          ],
          "returned": 1
        }
      },
      "characters_weapon_stat_infantry_weapon": {
        "summary": "Infantry Weapon Statistics",
        "description": "Hit count of the NC1 Gauss Rifle of an NC character.\nhttps://census.daybreakgames.com/get/ps2/characters_weapon_stat?character_id=5428010618015189601&stat_name=weapon_hit_count&item_id=4",
        "value": {
          "characters_weapon_stat_list": [
            {
              "character_id": "5428010618015189601",
              "stat_name": "weapon_hit_count",
              "item_id": "4",
              "vehicle_id": "0",
              "value": "11446",
              "last_save": "1394703677",
              "last_save_date": "2014-03-13 09:41:17.0"
            }
          ],
          "returned": 1
        }
      },
      "characters_weapon_stat_vehicle": {
        "summary": "Vehicle Statistics",
        "description": "Death count of the Flash of an NC character.\nhttps://census.daybreakgames.com/get/ps2/characters_weapon_stat?character_id=5428010618015189601&item_id=0&vehicle_id=!0&stat_name=weapon_deaths&vehicle_id=1",
        "value": {
          "characters_weapon_stat_list": [
            {
              "character_id": "5428010618015189601",
              "stat_name": "weapon_deaths",
              "item_id": "0",
              "vehicle_id": "1",
              "value": "16",
              "last_save": "1448994374",
              "last_save_date": "2015-12-01 18:26:14.0"
            }
          ],
          "returned": 1
        }
      },
      "characters_weapon_stat_by_faction_infantry_weapon": {
        "summary": "Infantry Weapon Statistics",
        "description": "Hit count of the NC1 Gauss Rifle of an NC character.\nhttps://census.daybreakgames.com/get/ps2/characters_weapon_stat_by_faction?character_id=5428010618015189601&stat_name=weapon_headshots&vehicle_id=0&item_id=4",
        "value": {
          "characters_weapon_stat_by_faction_list": [
            {
              "character_id": "5428010618015189601",
              "stat_name": "weapon_headshots",
              "item_id": "4",
              "vehicle_id": "0",
              "value_vs": "94",
              "value_nc": "0",
              "value_tr": "149",
              "last_save": "1394669799",
              "last_save_date": "2014-03-13 00:16:39.0"
            }
          ],
          "returned": 1
        }
      },
      "characters_weapon_stat_by_faction_vehicle": {
        "summary": "Vehicle Statistics",
        "description": "Total vehicle kills for a Vanguard, any weapon.\nhttps://census.daybreakgames.com/get/ps2/characters_weapon_stat_by_faction?character_id=5428010618015189601&stat_name=weapon_vehicle_kills&vehicle_id=5&item_id=0",
        "value": {
          "characters_weapon_stat_by_faction_list": [
            {
              "character_id": "5428010618015189601",
              "stat_name": "weapon_vehicle_kills",
              "item_id": "0",
              "vehicle_id": "5",
              "value_vs": "5",
              "value_nc": "0",
              "value_tr": "5",
              "last_save": "1571838169",
              "last_save_date": "2019-10-23 13:42:49.0"
            }
          ],
          "returned": 1
        }
      },
      "collection_characterInfo": {
        "summary": "Character Info",
        "description": "Shows basic character information while hiding unwanted fields.\nhttps://census.daybreakgames.com/get/ps2/character?c:show=name.first,faction_id,battle_rank.value,prestige_level",
        "value": {
          "character_list": [
            {
              "name": {
                "first": "360Xvortex"
              },
              "faction_id": "3",
              "battle_rank": {
                "value": "1"
              },
              "prestige_level": "0"
            }
          ],
          "returned": 1
        }
      },
      "collection_factionTags": {
        "summary": "Faction tags",
        "description": "Uses `c:distinct` to get all faction tags.\nhttps://census.daybreakgames.com/get/ps2/faction?c:distinct=code_tag",
        "value": {
          "count": 5,
          "faction_list": [
            {
              "code_tag": [
                "NC",
                "None",
                "NSO",
                "TR",
                "VS"
              ]
            }
          ],
          "returned": 1
        }
      },
      "collection_mapFacilities": {
        "summary": "Map state with facility names",
        "description": "Example using nested key access to insert data into the middle of a payload. Note that only one record is shown for brevity, the provided link returns the entire zone's region list.\nhttps://census.daybreakgames.com/get/ps2/map?world_id=1&zone_ids=2&c:join=map_region%5Einject_at:map_region%5Eon:Regions.Row.RowData.RegionId%5Eto:map_region_id",
        "value": {
          "map_list": [
            {
              "ZoneId": "2",
              "Regions": {
                "IsList": "1",
                "Row": [
                  {
                    "RowData": {
                      "RegionId": "2101",
                      "FactionId": "3",
                      "map_region": {
                        "map_region_id": "2101",
                        "zone_id": "2",
                        "facility_id": "7500",
                        "facility_name": "Hvar",
                        "facility_type_id": "4",
                        "facility_type": "Tech Plant",
                        "location_x": "-656.0273",
                        "location_y": "491.7669",
                        "location_z": "-2444.069",
                        "reward_amount": "1",
                        "reward_currency_id": "1000"
                      }
                    }
                  }
                ]
              }
            }
          ],
          "returned": 1
        }
      },
      "count_success": {
        "summary": "Success",
        "value": {
          "count": 14
        }
      },
      "count_error": {
        "summary": "Error",
        "value": {
          "count": -1
        }
      },
      "currency": {
        "summary": "Nanites.\nhttps://census.daybreakgames.com/get/ps2/currency?c:limit=10",
        "value": {
          "currency_list": [
            {
              "currency_id": "4",
              "name": {
                "de": "Naniten",
                "en": "Nanites",
                "es": "Nanites",
                "fr": "Nanites",
                "it": "Naniti"
              },
              "icon_id": "13606",
              "inventory_cap": "750"
            }
          ],
          "returned": 1
        }
      },
      "datatype_character": {
        "summary": "Character",
        "value": {
          "datatype_list": {
            "name": "character",
            "hidden": false,
            "count": 15095335,
            "resolve_list": [
              "item",
              "item_full",
              "profile",
              "faction",
              "stat",
              "stat_by_faction",
              "weapon_stat",
              "weapon_stat_by_faction",
              "stat_history",
              "online_status",
              "friends",
              "world",
              "outfit",
              "outfit_member",
              "outfit_member_extended",
              "currency"
            ]
          },
          "returned": 1
        }
      },
      "datatype_outfitMember": {
        "summary": "Outfit Member",
        "value": {
          "datatype_list": {
            "name": "outfit_member",
            "hidden": false,
            "count": "?",
            "resolve_list": [
              "character",
              "character_name",
              "characters_stat_history",
              "online_status",
              "outfit"
            ]
          },
          "returned": 1
        }
      },
      "datatype_characterOnlineStatus": {
        "summary": "Character Online Status",
        "value": {
          "datatype_list": {
            "count": "dynamic",
            "hidden": "false",
            "name": "characters_online_status",
            "resolve_list": []
          },
          "returned": 1
        }
      },
      "directive": {
        "summary": "Saviour kills.\nhttps://census.daybreakgames.com/get/ps2/directive?directive_id=153",
        "value": {
          "directive_list": [
            {
              "directive_id": "153",
              "directive_tree_id": "28",
              "directive_tier_id": "1",
              "objective_set_id": "4154",
              "name": {
                "de": "Rettungskills",
                "en": "Savior Kills",
                "es": "V\u00edctimas: salvadores",
                "fr": "Victimes Sauveur",
                "it": "Uccisioni come Salvatore"
              },
              "description": {
                "de": "Rette Verb\u00fcndete vor dem Tod, indem du Feinde t\u00f6test, die dabei sind, sie zu t\u00f6ten.",
                "en": "Save allies from death by killing enemies who are about to kill them.",
                "es": "Salva de la muerte a tus aliados acabando con los enemigos que est\u00e9n a punto de matarlos.",
                "fr": "Sauver des alli\u00e9s de la mort en tuant des ennemis sur le point de les tuer.",
                "it": "Salva gli alleati dalla morte uccidendo i nemici che stanno per ucciderli."
              },
              "image_set_id": "13518",
              "image_id": "77759",
              "image_path": "/files/ps2/images/static/77759.png"
            }
          ],
          "returned": 1
        }
      },
      "directive_tier": {
        "summary": "Light Assault Master Tier (VS).\nhttps://census.daybreakgames.com/get/ps2/directive_tier?directive_tier_id=4&directive_tree_id=24",
        "value": {
          "directive_tier_list": [
            {
              "directive_tree_id": "24",
              "directive_tier_id": "4",
              "reward_set_id": "4466",
              "directive_points": "100",
              "completion_count": "5",
              "name": {
                "de": "Meister",
                "en": "Master",
                "es": "Maestro",
                "fr": "Ma\u00eetre",
                "it": "Maestri"
              },
              "image_set_id": "13650",
              "image_id": "78275",
              "image_path": "/files/ps2/images/static/78275.png"
            }
          ],
          "returned": 1
        }
      },
      "directive_tree": {
        "summary": "Light Machine Guns.\nhttps://census.daybreakgames.com/get/ps2/directive_tree?directive_tree_id=8",
        "value": {
          "directive_tree_list": [
            {
              "directive_tree_id": "8",
              "directive_tree_category_id": "7",
              "name": {
                "de": "Leichte Maschinengewehre",
                "en": "Light Machine Guns",
                "es": "Ametralladoras ligeras",
                "fr": "Mitrailleuses l\u00e9g\u00e8res",
                "it": "Mitragliatrici leggere"
              },
              "image_set_id": "14193",
              "image_id": "79616",
              "image_path": "/files/ps2/images/static/79616.png"
            }
          ],
          "returned": 1
        }
      },
      "directive_tree_category": {
        "summary": "Infantry.\nhttps://census.daybreakgames.com/get/ps2/directive_tree_category?directive_tree_category_id=3",
        "value": {
          "directive_tree_category_list": [
            {
              "directive_tree_category_id": "3",
              "name": {
                "de": "Infanterie",
                "en": "Infantry",
                "es": "Infanter\u00eda",
                "fr": "Infanterie",
                "it": "Fanteria",
                "tr": "Piyade"
              }
            }
          ],
          "returned": 1
        }
      },
      "effect": {
        "summary": "Lasher X2 damage effects.\nhttps://census.daybreakgames.com/get/ps2/effect?effect_id=7540,249&c:limit=2",
        "value": {
          "effect_list": [
            {
              "effect_id": "249",
              "effect_type_id": "40",
              "target_type_id": "3",
              "resist_type_id": "6",
              "is_drain": "0",
              "duration_seconds": "0",
              "param1": "75",
              "param2": "1",
              "param3": "25",
              "param5": "3",
              "param6": "0",
              "param7": "0",
              "param8": "0",
              "param9": "0",
              "param13": "75"
            },
            {
              "effect_id": "7540",
              "effect_type_id": "45",
              "ability_id": "0",
              "target_type_id": "2",
              "resist_type_id": "2",
              "is_drain": "0",
              "duration_seconds": "0",
              "param1": "155",
              "param2": "10",
              "param3": "105",
              "param5": "65",
              "param6": "0",
              "param7": "0",
              "param8": "0",
              "param9": "0"
            }
          ],
          "returned": 2
        }
      },
      "effect_type": {
        "summary": "A selection of common effect types.\nhttps://census.daybreakgames.com/get/ps2/effect_type?effect_type_id=11,12,36,40&c:limit=4",
        "value": {
          "effect_type_list": [
            {
              "effect_type_id": "11",
              "description": "Heal",
              "param1": "HP per sec",
              "param2": "Distance Max",
              "param3": "0 Heal, 1 Repair"
            },
            {
              "effect_type_id": "12",
              "description": "Revive",
              "param1": "Health Percent",
              "param2": "Distance Max",
              "param3": "Sec to revive"
            },
            {
              "effect_type_id": "36",
              "description": "Damage",
              "param1": "Damage Amount"
            },
            {
              "effect_type_id": "40",
              "description": "Indirect Damage",
              "param1": "Damage within inside radius",
              "param2": "Inside Radius (min)",
              "param3": "Minimum Damage (Damage at max radius)",
              "param4": "There is no Param4",
              "param5": "Outside Radius (max)",
              "param6": "Direct Impact Damage",
              "param7": "Fire off Ability ID",
              "param8": "Arming Distance",
              "param9": "Arming Scaling Distance",
              "param10": "Ignore Impacted Object (1 = true)",
              "param11": "Screen Effect ID",
              "param12": "Armor Penetration",
              "param13": "Same faction resist percentage"
            }
          ],
          "returned": 4
        }
      },
      "empire_scores": {
        "summary": "World Domination Series Pre-season.\nhttps://census.daybreakgames.com/get/ps2/empire_scores?tracker_name=WDS01",
        "value": {
          "empire_scores_list": [
            {
              "tracker_name": "WDS01",
              "tracker_description": "WDS01",
              "start_date": "2013-09-16 07:00:00.0",
              "start_time": "1379314800",
              "end_date": "2013-10-28 07:00:00.0",
              "end_time": "1382943600",
              "name": {
                "de": "World Domination Series 1 - Vorsaison",
                "en": "World Domination Series Pre-season",
                "es": "Pretemporada de World Domination Series",
                "fr": "Les s\u00e9ries Domination du Monde Pr\u00e9-saison",
                "it": "Precampionato Serie Dominio Universale",
                "tr": "World Domination Series Pre-season"
              }
            }
          ],
          "returned": 1
        }
      },
      "experience": {
        "summary": "Heal Experience Tick.\nhttps://census.daybreakgames.com/get/ps2/experience?experience_id=4",
        "value": {
          "experience_list": [
            {
              "experience_id": "4",
              "description": "Heal Player",
              "xp": "10"
            }
          ],
          "returned": 1
        }
      },
      "experience_rank": {
        "summary": "BR100, non-ASP.\nhttps://census.daybreakgames.com/get/ps2/experience_rank?rank=100&vs.title.en=!A.S.P.%20Operative",
        "value": {
          "experience_rank_list": [
            {
              "rank": "100",
              "xp_max": "18868950",
              "vs": {
                "title": {
                  "de": "Paragon",
                  "en": "Paragon",
                  "es": "Parag\u00f3n",
                  "fr": "Parangon",
                  "it": "Campione",
                  "tr": "Paragon"
                },
                "image_set_id": "1927",
                "image_id": "4363"
              },
              "vs_image_path": "/files/ps2/images/static/4363.png",
              "nc": {
                "title": {
                  "de": "Vollstrecker",
                  "en": "Executor",
                  "es": "Ejecutor",
                  "fr": "Ex\u00e9cuteur",
                  "it": "Esecutore",
                  "tr": "Uygulay\u0131c\u0131"
                },
                "image_set_id": "1727",
                "image_id": "4364"
              },
              "nc_image_path": "/files/ps2/images/static/4364.png",
              "tr": {
                "title": {
                  "de": "Feldmarschall",
                  "en": "Field Marshal",
                  "es": "Mariscal de campo",
                  "fr": "Mar\u00e9chal",
                  "it": "Generale dell'Esercito",
                  "tr": "Mare\u015fal"
                },
                "image_set_id": "1827",
                "image_id": "4362"
              },
              "tr_image_path": "/files/ps2/images/static/4362.png"
            }
          ],
          "returned": 1
        }
      },
      "facility_link": {
        "summary": "Indar Northern Warpgate Links.\nhttps://census.daybreakgames.com/get/ps2/facility_link?facility_id_a=7801&c:limit=10",
        "value": {
          "facility_link_list": [
            {
              "zone_id": "2",
              "facility_id_a": "7801",
              "facility_id_b": "201"
            },
            {
              "zone_id": "2",
              "facility_id_a": "7801",
              "facility_id_b": "209",
              "description": "Indar - WG.Ocean to SO10.CraterFiringRange"
            },
            {
              "zone_id": "2",
              "facility_id_a": "7801",
              "facility_id_b": "210",
              "description": "Indar - WG.Ocean to SO11.AlkaliStorage"
            }
          ],
          "returned": 3
        }
      },
      "facility_type": {
        "summary": "Interlinks.\nhttps://census.daybreakgames.com/get/ps2/facility_type?facility_type_id=8",
        "value": {
          "facility_type_list": [
            {
              "facility_type_id": "8",
              "description": "Interlink Facility",
              "image_id": "9121",
              "image_set_id": "3158",
              "image_path": "/files/ps2/images/static/9121.png"
            }
          ],
          "returned": 1
        }
      },
      "faction": {
        "summary": "TR",
        "value": {
          "faction_list": [
            {
              "faction_id": "3",
              "name": {
                "de": "Terranische Republik",
                "en": "Terran Republic",
                "es": "Rep\u00fablica Terran",
                "fr": "R\u00e9publique Terrane",
                "it": "Repubblica Terrestre",
                "tr": "Terran Cumhuriyeti"
              },
              "image_set_id": "20",
              "image_id": "18",
              "image_path": "/files/ps2/images/static/18.png",
              "code_tag": "TR",
              "user_selectable": "1"
            }
          ],
          "returned": 1
        }
      },
      "fire_group_chamber": {
        "summary": "TRS-12 Uppercut. Note that it has per-chamber reload and can rechamber while aiming down sights.\nhttps://census.daybreakgames.com/get/ps2/fire_group?fire_group_id=39001",
        "value": {
          "fire_group_list": [
            {
              "fire_group_id": "39001",
              "chamber_duration_ms": "600",
              "can_chamber_ironsights": "1"
            }
          ],
          "returned": 1
        }
      },
      "fire_group_regular": {
        "summary": "NC1 Gauss Rifle. Example of a standard infantry weapon fire group.\nhttps://census.daybreakgames.com/get/ps2/fire_group?fire_group_id=4",
        "value": {
          "fire_group_list": [
            {
              "fire_group_id": "4",
              "transition_duration_ms": "500",
              "can_chamber_ironsights": "0"
            }
          ],
          "returned": 1
        }
      },
      "fire_group_spool": {
        "summary": "G30 Vulcan. This weapon has a spool-up time, meaning that its rate-of-fire increases over time.\nhttps://census.daybreakgames.com/get/ps2/fire_group?fire_group_id=424",
        "value": {
          "fire_group_list": [
            {
              "fire_group_id": "424",
              "spool_up_ms": "1000",
              "spool_up_initial_refire_ms": "200",
              "can_chamber_ironsights": "0"
            }
          ],
          "returned": 1
        }
      },
      "fire_mode": {
        "summary": "NS-11A.\nhttps://census.daybreakgames.com/get/ps2/fire_mode?c:includeNull=1&fire_mode_id=2000",
        "value": {
          "fire_mode_list": [
            {
              "fire_mode_id": "2000",
              "item_id": "2009",
              "type": "primary",
              "description": {
                "de": "Automatik",
                "en": "Auto",
                "es": "Autom\u00e1tico",
                "fr": "Automatique",
                "it": "Automatico",
                "tr": "Otomatik"
              },
              "player_state_group_id": "653",
              "cof_recoil": "0.1",
              "reload_time_ms": "2000",
              "reload_chamber_time_ms": "450",
              "pellets_per_shot": "1",
              "pellet_spread": "0",
              "default_zoom": "1",
              "muzzle_velocity": "640",
              "speed": "550",
              "max_speed": "0",
              "damage_radius": "0",
              "projectile_description": "NS: Assault Rifle 01",
              "damage_type": "DamageFalloff",
              "damage": "NULL",
              "damage_min": "125",
              "damage_max": "143",
              "damage_min_range": "65",
              "damage_max_range": "10",
              "damage_target_type": "2",
              "damage_resist_type": "2",
              "indirect_damage_max": "NULL",
              "indirect_damage_max_range": "NULL",
              "indirect_damage_min": "NULL",
              "indirect_damage_min_range": "NULL",
              "indirect_damage_target_type": "NULL",
              "indirect_damage_resist_type": "NULL"
            }
          ],
          "returned": 1
        }
      },
      "fire_mode_2_ns11a": {
        "summary": "NS-11A (Automatic weapon).\nhttps://census.daybreakgames.com/get/ps2/fire_mode_2?fire_mode_id=2001",
        "value": {
          "fire_mode_2_list": [
            {
              "fire_mode_id": "2001",
              "fire_mode_type_id": "0",
              "automatic": "1",
              "grief_immune": "0",
              "iron_sights": "1",
              "laser_guided": "0",
              "move_modifier": "0.75",
              "projectile_speed_override": "640",
              "sprint_fire": "0",
              "turn_modifier": "1",
              "use_in_water": "1",
              "zoom_default": "1.35",
              "cof_override": "0",
              "cof_pellet_spread": "0",
              "cof_range": "100",
              "cof_recoil": "0.05",
              "cof_scalar": "1",
              "cof_scalar_moving": "1",
              "player_state_group_id": "654",
              "damage_direct_effect_id": "70006",
              "damage_head_multiplier": "1",
              "damage_legs_multiplier": "-0.1",
              "fire_ammo_per_shot": "1",
              "fire_auto_fire_ms": "0",
              "fire_burst_count": "1",
              "fire_charge_up_ms": "0",
              "fire_delay_ms": "0",
              "fire_detect_range": "40",
              "fire_refire_ms": "92",
              "fire_pellets_per_shot": "1",
              "lockon_maintain": "0",
              "lockon_required": "0",
              "recoil_angle_max": "-17",
              "recoil_angle_min": "-20",
              "recoil_first_shot_modifier": "3",
              "recoil_horizontal_max": "0.2",
              "recoil_horizontal_min": "0.2",
              "recoil_horizontal_tolerance": "0.6",
              "recoil_increase": "0.1",
              "recoil_increase_crouched": "0.1",
              "recoil_magnitude_max": "0.22",
              "recoil_magnitude_min": "0.22",
              "recoil_max_total_magnitude": "0",
              "recoil_recovery_acceleration": "1000",
              "recoil_recovery_delay_ms": "92",
              "recoil_recovery_rate": "18",
              "recoil_shots_at_min_magnitude": "0",
              "reload_block_auto": "0",
              "reload_continuous": "0",
              "reload_ammo_fill_ms": "1838",
              "reload_chamber_ms": "450",
              "reload_time_ms": "2000",
              "sway_can_steady": "0",
              "armor_penetration": "0",
              "max_damage": "143",
              "max_damage_range": "10",
              "min_damage": "125",
              "min_damage_range": "65",
              "shield_bypass_pct": "0",
              "bullet_arc_kick_angle": "0.175",
              "charge_minimum_ms": "0",
              "description": {
                "de": "Automatik",
                "en": "Auto",
                "es": "Autom\u00e1tico",
                "fr": "Automatique",
                "it": "Automatico",
                "tr": "Otomatik"
              }
            }
          ],
          "returned": 1
        }
      },
      "fire_mode_2_lasherx2": {
        "summary": "Lasher X2 (Explosive weapon).\nhttps://census.daybreakgames.com/get/ps2/fire_mode_2?fire_mode_id=8069",
        "value": {
          "fire_mode_2_list": [
            {
              "fire_mode_id": "8069",
              "fire_mode_type_id": "0",
              "automatic": "1",
              "grief_immune": "0",
              "iron_sights": "1",
              "laser_guided": "0",
              "move_modifier": "0.5",
              "sprint_fire": "0",
              "turn_modifier": "1",
              "use_in_water": "0",
              "zoom_default": "1.35",
              "cof_override": "0",
              "cof_pellet_spread": "0",
              "cof_range": "100",
              "cof_recoil": "0",
              "cof_scalar": "1",
              "cof_scalar_moving": "1",
              "player_state_group_id": "2332",
              "damage_direct_effect_id": "7540",
              "damage_head_multiplier": "1",
              "damage_indirect_effect_id": "249",
              "damage_legs_multiplier": "-0.1",
              "fire_ammo_per_shot": "1",
              "fire_auto_fire_ms": "0",
              "fire_burst_count": "1",
              "fire_charge_up_ms": "0",
              "fire_detect_range": "40",
              "fire_refire_ms": "180",
              "fire_pellets_per_shot": "1",
              "lockon_maintain": "0",
              "lockon_required": "0",
              "recoil_angle_max": "10",
              "recoil_angle_min": "10",
              "recoil_first_shot_modifier": "1.5",
              "recoil_horizontal_max": "0.2",
              "recoil_horizontal_max_increase": "0",
              "recoil_horizontal_min": "0.1",
              "recoil_horizontal_min_increase": "0",
              "recoil_horizontal_tolerance": "0.75",
              "recoil_increase": "0",
              "recoil_increase_crouched": "0",
              "recoil_magnitude_max": "0.4",
              "recoil_magnitude_min": "0.4",
              "recoil_max_total_magnitude": "0",
              "recoil_recovery_acceleration": "1000",
              "recoil_recovery_delay_ms": "0",
              "recoil_recovery_rate": "15",
              "recoil_shots_at_min_magnitude": "0",
              "reload_block_auto": "0",
              "reload_continuous": "0",
              "reload_ammo_fill_ms": "4420",
              "reload_chamber_ms": "1000",
              "reload_time_ms": "4200",
              "sway_can_steady": "0",
              "armor_penetration": "0",
              "max_damage": "155",
              "max_damage_ind": "75",
              "max_damage_ind_radius": "1",
              "max_damage_range": "10",
              "min_damage": "105",
              "min_damage_ind": "25",
              "min_damage_ind_radius": "3",
              "min_damage_range": "65",
              "shield_bypass_pct": "0",
              "bullet_arc_kick_angle": "0",
              "charge_minimum_ms": "0",
              "description": {
                "de": "Automatik",
                "en": "Auto",
                "es": "Autom\u00e1tico",
                "fr": "Automatique",
                "it": "Automatico",
                "tr": "Otomatik"
              }
            }
          ],
          "returned": 1
        }
      },
      "fire_mode_2_hawkgd68": {
        "summary": "Hawk GD-68 (Lock-on launcher).\nhttps://census.daybreakgames.com/get/ps2/fire_mode_2?fire_mode_id=33004",
        "value": {
          "fire_mode_2_list": [
            {
              "fire_mode_id": "33004",
              "fire_mode_type_id": "0",
              "automatic": "0",
              "grief_immune": "0",
              "iron_sights": "0",
              "laser_guided": "0",
              "move_modifier": "1",
              "sprint_fire": "0",
              "turn_modifier": "1",
              "use_in_water": "0",
              "zoom_default": "1",
              "cof_override": "0",
              "cof_pellet_spread": "0",
              "cof_range": "50",
              "cof_recoil": "2",
              "cof_scalar": "1",
              "cof_scalar_moving": "1",
              "player_state_group_id": "75564",
              "damage_direct_effect_id": "1421",
              "damage_head_multiplier": "0",
              "damage_indirect_effect_id": "33004",
              "damage_legs_multiplier": "-0.1",
              "fire_ammo_per_shot": "1",
              "fire_auto_fire_ms": "0",
              "fire_burst_count": "1",
              "fire_charge_up_ms": "0",
              "fire_delay_ms": "0",
              "fire_detect_range": "100",
              "fire_refire_ms": "300",
              "fire_pellets_per_shot": "1",
              "lockon_maintain": "0",
              "lockon_required": "0",
              "recoil_first_shot_modifier": "1",
              "recoil_increase": "0",
              "recoil_increase_crouched": "0",
              "reload_block_auto": "0",
              "reload_continuous": "0",
              "reload_ammo_fill_ms": "2744",
              "reload_time_ms": "3430",
              "sway_can_steady": "0",
              "armor_penetration": "0",
              "max_damage": "700",
              "max_damage_ind": "300",
              "max_damage_ind_radius": "0.5",
              "min_damage_ind": "50",
              "min_damage_ind_radius": "3",
              "min_damage_range": "0",
              "shield_bypass_pct": "0",
              "bullet_arc_kick_angle": "1",
              "charge_minimum_ms": "0",
              "description": {
                "de": "Aufschaltung",
                "en": "Lock-on",
                "es": "Blanco fijo",
                "fr": "Verrouillage",
                "it": "Lock-On",
                "tr": "Kilitlenme"
              }
            }
          ],
          "returned": 1
        }
      },
      "fire_mode_2_betelgeuse54a": {
        "summary": "Betelgeuse 54-A (Heat mechanic).\nhttps://census.daybreakgames.com/get/ps2/fire_mode_2?fire_mode_id=740",
        "value": {
          "fire_mode_2_list": [
            {
              "fire_mode_id": "740",
              "fire_mode_type_id": "0",
              "automatic": "1",
              "grief_immune": "0",
              "iron_sights": "0",
              "laser_guided": "0",
              "move_modifier": "1",
              "sprint_fire": "0",
              "turn_modifier": "1",
              "use_in_water": "0",
              "zoom_default": "1",
              "cof_range": "50",
              "cof_scalar": "1",
              "cof_scalar_moving": "1",
              "player_state_group_id": "75499",
              "damage_direct_effect_id": "90009",
              "damage_head_multiplier": "1",
              "damage_legs_multiplier": "-0.1",
              "fire_ammo_per_shot": "1",
              "fire_burst_count": "1",
              "fire_detect_range": "100",
              "fire_refire_ms": "111",
              "lockon_maintain": "0",
              "lockon_required": "0",
              "recoil_first_shot_modifier": "1",
              "recoil_recovery_acceleration": "1000",
              "reload_block_auto": "0",
              "reload_continuous": "0",
              "reload_time_ms": "3500",
              "sway_can_steady": "0",
              "armor_penetration": "0",
              "max_damage": "200",
              "max_damage_range": "50",
              "min_damage": "143",
              "min_damage_range": "100",
              "shield_bypass_pct": "0",
              "charge_minimum_ms": "0",
              "description": {
                "de": "Automatik",
                "en": "Auto",
                "es": "Autom\u00e1tico",
                "fr": "Automatique",
                "it": "Automatico",
                "tr": "Otomatik"
              }
            }
          ],
          "returned": 1
        }
      },
      "fire_mode_2_g30vulcan": {
        "summary": "G30 Vulcan (Spool-up mechanic).\nhttps://census.daybreakgames.com/get/ps2/fire_mode_2?fire_mode_id=424",
        "value": {
          "fire_mode_2_list": [
            {
              "fire_mode_id": "424",
              "fire_mode_type_id": "0",
              "automatic": "1",
              "grief_immune": "0",
              "iron_sights": "0",
              "laser_guided": "0",
              "move_modifier": "1",
              "sprint_fire": "0",
              "turn_modifier": "1",
              "use_in_water": "0",
              "zoom_default": "1",
              "cof_range": "50",
              "cof_recoil": "0.01",
              "cof_scalar": "1",
              "cof_scalar_moving": "1",
              "player_state_group_id": "301",
              "damage_direct_effect_id": "174",
              "damage_legs_multiplier": "-0.1",
              "fire_ammo_per_shot": "1",
              "fire_burst_count": "1",
              "fire_detect_range": "50",
              "fire_refire_ms": "80",
              "fire_pellets_per_shot": "1",
              "lockon_maintain": "0",
              "lockon_required": "0",
              "recoil_first_shot_modifier": "1",
              "reload_block_auto": "0",
              "reload_continuous": "0",
              "reload_time_ms": "2500",
              "sway_can_steady": "0",
              "armor_penetration": "0",
              "max_damage": "143",
              "max_damage_range": "15",
              "min_damage": "100",
              "min_damage_range": "60",
              "shield_bypass_pct": "0",
              "charge_minimum_ms": "0",
              "description": {
                "de": "Automatik",
                "en": "Auto",
                "es": "Autom\u00e1tico",
                "fr": "Automatique",
                "it": "Automatico",
                "tr": "Otomatik"
              }
            }
          ],
          "returned": 1
        }
      },
      "fire_mode_to_projectile": {
        "summary": "NS-11A\nhttps://census.daybreakgames.com/get/ps2/fire_mode_to_projectile?fire_mode_id=2001",
        "value": {
          "fire_mode_to_projectile_list": [
            {
              "fire_mode_id": "2001",
              "projectile_id": "8000"
            }
          ],
          "returned": 1
        }
      },
      "image": {
        "summary": "A.M.P. Station map icon.\nhttps://census.daybreakgames.com/get/ps2/image?image_id=24",
        "value": {
          "image_list": [
            {
              "image_id": "24",
              "description": "energy_facility.dds",
              "path": "/files/ps2/images/static/24.png"
            }
          ],
          "returned": 1
        }
      },
      "image_set": {
        "summary": "A.M.P. Station map icons (all sizes).\nhttps://census.daybreakgames.com/get/ps2/image_set?image_id=24&c:limit=10",
        "value": {
          "image_set_list": [
            {
              "image_set_id": "806486",
              "image_id": "24",
              "description": "energy_facility.dds",
              "type_id": "4",
              "type_description": "Very Small (16 pixel height)",
              "image_path": "/files/ps2/images/static/24.png"
            },
            {
              "image_set_id": "806486",
              "image_id": "24",
              "description": "energy_facility.dds",
              "type_id": "5",
              "type_description": "Small (32 pixel height)",
              "image_path": "/files/ps2/images/static/24.png"
            },
            {
              "image_set_id": "806486",
              "image_id": "24",
              "description": "energy_facility.dds",
              "type_id": "6",
              "type_description": "Medium (64 pixel height)",
              "image_path": "/files/ps2/images/static/24.png"
            }
          ],
          "returned": 3
        }
      },
      "image_set_default": {
        "summary": "Default image for A.M.P. Station map icons.\nhttps://census.daybreakgames.com/get/ps2/image_set_default?image_set_id=806486",
        "value": {
          "image_set_default_list": [
            {
              "image_set_id": "806486",
              "image_id": "24",
              "description": "energy_facility.dds",
              "type_id": "6",
              "type_description": "Medium (64 pixel height)",
              "image_path": "/files/ps2/images/static/24.png"
            }
          ],
          "returned": 1
        }
      },
      "item": {
        "summary": "NC1 Gauss Rifle",
        "value": {
          "item_list": [
            {
              "item_id": "4",
              "item_type_id": "26",
              "item_category_id": "7",
              "is_vehicle_weapon": "0",
              "name": {
                "de": "NC1 Gau\u00dfgewehr",
                "en": "NC1 Gauss Rifle",
                "es": "Rifle Gauss NC1",
                "fr": "Fusil Gauss NC1",
                "it": "Fucile Gauss NC1",
                "tr": "NC1 Gauss T\u00fcfe\u011fi"
              },
              "description": {
                "de": "Das Standard-Gau\u00dfgewehr NC1 war die erste erfolgreiche Einf\u00fchrung der Gau\u00dfgewehr-Technologie in kleinen Waffen. Nur f\u00fcr NK.",
                "en": "The standard issue NC1 Gauss Rifle was the first successful implementation of coilgun technology in small arms. NC use only.",
                "es": "El rifle NC1 Gauss est\u00e1ndar represent\u00f3 la primera implementaci\u00f3n de tecnolog\u00eda coilgun en armas peque\u00f1as. Solo para NC",
                "fr": "Le fusil Gauss NC1 standard repr\u00e9sente la premi\u00e8re application r\u00e9ussie de la technologie de canon magn\u00e9tique aux armes de petit calibre. NC uniquement.",
                "it": "Il fucile Gauss NC1 standard rappresenta la prima applicazione riuscita della tecnologia di accelerazione magnetica nelle armi di piccole dimensioni. Esclusivo NC.",
                "tr": "Standart \u00fcretim NC1 Gauss T\u00fcfe\u011fi, bobinsilah\u0131 teknolojisininin hafif silahlara ilk ba\u015far\u0131l\u0131 uygulanmas\u0131d\u0131r. Yaln\u0131zca Yeni Birle\u015fim kullan\u0131m\u0131 i\u00e7in."
              },
              "faction_id": "2",
              "max_stack_size": "1",
              "image_set_id": "2745",
              "image_id": "5310",
              "image_path": "/files/ps2/images/static/5310.png",
              "skill_set_id": "132",
              "is_default_attachment": "0"
            }
          ],
          "returned": 1
        }
      },
      "fire_mode_type": {
        "summary": "Full list of all fire mode types.\nhttps://census.daybreakgames.com/get/ps2/fire_mode_type?c:limit=20",
        "value": {
          "fire_mode_type_list": [
            {
              "fire_mode_type_id": "0",
              "description": "Projectile"
            },
            {
              "fire_mode_type_id": "3",
              "description": "Melee"
            },
            {
              "fire_mode_type_id": "8",
              "description": "Trigger Item Ability"
            },
            {
              "fire_mode_type_id": "12",
              "description": "Thrown"
            }
          ],
          "returned": 4
        }
      },
      "item_attachment": {
        "summary": "10 Attachments for the NC1 Gauss Rifle\nhttps://census.daybreakgames.com/get/ps2/item_attachment?item_id=4&c:limit=10",
        "value": {
          "item_attachment_list": [
            {
              "item_id": "4",
              "attachment_item_id": "34"
            },
            {
              "item_id": "4",
              "attachment_item_id": "74"
            },
            {
              "item_id": "4",
              "attachment_item_id": "115"
            },
            {
              "item_id": "4",
              "attachment_item_id": "148"
            },
            {
              "item_id": "4",
              "attachment_item_id": "149"
            },
            {
              "item_id": "4",
              "attachment_item_id": "150"
            },
            {
              "item_id": "4",
              "attachment_item_id": "151"
            },
            {
              "item_id": "4",
              "attachment_item_id": "558"
            },
            {
              "item_id": "4",
              "attachment_item_id": "796"
            },
            {
              "item_id": "4",
              "attachment_item_id": "799"
            }
          ],
          "returned": 10
        }
      },
      "item_category": {
        "summary": "Assault Rifles",
        "value": {
          "item_category_list": [
            {
              "item_category_id": "7",
              "name": {
                "de": "Sturmgewehr",
                "en": "Assault Rifle",
                "es": "Rifle de asalto",
                "fr": "Fusil d'assaut",
                "it": "Fucile d'assalto",
                "tr": "Taarruz T\u00fcfe\u011fi"
              }
            }
          ],
          "returned": 1
        }
      },
      "item_profile": {
        "summary": "Classes that can use the default NC pistol.\nhttps://census.daybreakgames.com/get/ps2/item_profile?item_id=1&c:limit=10",
        "value": {
          "item_profile_list": [
            {
              "item_id": "1",
              "profile_id": "2"
            },
            {
              "item_id": "1",
              "profile_id": "4"
            },
            {
              "item_id": "1",
              "profile_id": "5"
            },
            {
              "item_id": "1",
              "profile_id": "6"
            },
            {
              "item_id": "1",
              "profile_id": "7"
            }
          ],
          "returned": 5
        }
      },
      "item_to_weapon": {
        "summary": "Connects the Beamer VS3 to its weapon object.\ncensus.daybreakgames.com/get/ps2/item_to_weapon?item_id=21",
        "value": {
          "item_to_weapon_list": [
            {
              "item_id": "21",
              "weapon_id": "13"
            }
          ],
          "returned": 1
        }
      },
      "item_type": {
        "summary": "A selection of common item types.\nhttps://census.daybreakgames.com/get/ps2/item_type?item_type_id=26,27,38,39,48",
        "value": {
          "item_type_list": [
            {
              "item_type_id": "26",
              "name": "Weapon",
              "code": "Weapon"
            },
            {
              "item_type_id": "27",
              "name": "Attachment",
              "code": "Attachment"
            },
            {
              "item_type_id": "38",
              "name": "Vehicle Cosmetic",
              "code": "VehicleCosmetic"
            },
            {
              "item_type_id": "39",
              "name": "Infantry Cosmetic",
              "code": "InfantryCosmetic"
            },
            {
              "item_type_id": "48",
              "name": "Construction Module",
              "code": "ConstructionModule"
            }
          ],
          "returned": 5
        }
      },
      "map": {
        "summary": "Connery Indar State (truncated to 2 entries).\nhttps://census.daybreakgames.com/get/ps2/map?zone_ids=2&world_id=1",
        "value": {
          "map_list": [
            {
              "ZoneId": "2",
              "Regions": {
                "IsList": "1",
                "Row": [
                  {
                    "RowData": {
                      "RegionId": "2101",
                      "FactionId": "1"
                    }
                  },
                  {
                    "RowData": {
                      "RegionId": "2421",
                      "FactionId": "1"
                    }
                  }
                ]
              }
            }
          ],
          "returned": 1
        }
      },
      "map_hex": {
        "summary": "Old Auraxium Mines.\nhttps://census.daybreakgames.com/get/ps2/map_hex?map_region_id=2448&c:limit=10",
        "value": {
          "map_hex_list": [
            {
              "zone_id": "2",
              "map_region_id": "2448",
              "x": "17",
              "y": "-12",
              "hex_type": "0",
              "type_name": "Unrestricted access"
            },
            {
              "zone_id": "2",
              "map_region_id": "2448",
              "x": "17",
              "y": "-11",
              "hex_type": "0",
              "type_name": "Unrestricted access"
            },
            {
              "zone_id": "2",
              "map_region_id": "2448",
              "x": "18",
              "y": "-13",
              "hex_type": "0",
              "type_name": "Unrestricted access"
            },
            {
              "zone_id": "2",
              "map_region_id": "2448",
              "x": "18",
              "y": "-12",
              "hex_type": "0",
              "type_name": "Unrestricted access"
            },
            {
              "zone_id": "2",
              "map_region_id": "2448",
              "x": "18",
              "y": "-11",
              "hex_type": "0",
              "type_name": "Unrestricted access"
            }
          ],
          "returned": 5
        }
      },
      "map_region": {
        "summary": "Mao Tech Plant.\nhttps://census.daybreakgames.com/get/ps2/map_region?facility_id=4401",
        "value": {
          "map_region_list": [
            {
              "map_region_id": "2102",
              "zone_id": "2",
              "facility_id": "4401",
              "facility_name": "Mao",
              "facility_type_id": "4",
              "facility_type": "Tech Plant",
              "location_x": "1810",
              "location_y": "110",
              "location_z": "1514",
              "reward_amount": "1",
              "reward_currency_id": "1000",
              "capture_reward": {
                "description": "Synthium - Uncommon",
                "amount": "8"
              },
              "tick_reward": {
                "description": "Synthium - Uncommon",
                "amount": "8"
              }
            }
          ],
          "returned": 1
        }
      },
      "marketing_bundle": {
        "summary": "'PlanetSide Legacy Bundle (2022)'. Note the NULL value for the cert price as this is a DBC-only bundle.\nhttps://census.daybreakgames.com/get/ps2/marketing_bundle?marketing_bundle_id=812821&c:includeNull=1",
        "value": {
          "marketing_bundle_list": [
            {
              "marketing_bundle_id": "812821",
              "name": {
                "de": "PlanetSide-Legacy-Paket (2022)",
                "en": "PlanetSide Legacy Bundle (2022)",
                "es": "Lote de legado de Planetside (2022)",
                "fr": "Ensemble \"H\u00e9ritage de PlanetSide\"(2022)",
                "it": "Pacchetto Legacy PlanetSide (2022)",
                "tr": "NULL"
              },
              "description": {
                "de": "Feiere die Geschichte der PlanetSide-Serie! Dieses Paket beinhaltet kosmetische Gegenst\u00e4nde f\u00fcr alle Fraktionen und Waffen f\u00fcr VS, NK und TR. Der Heldenbooster wird nur dem Charakter gew\u00e4hrt, der das Paket kauft. \"Perfekte\" Implantate sind f\u00fcr das komplette Konto verf\u00fcgbar und k\u00f6nnen nicht zerlegt werden.",
                "en": "Celebrate the legacy of the PlanetSide franchise! This bundle contains cosmetics for all factions, and weapons for VS, NC, and TR. Heroic Boost is granted only to the character that purchases the bundle. \"Perfect\" Implants are granted account-wide, and cannot be broken down.",
                "es": "\"\u00a1Celebra el legado de la serie PlanetSide! El lote contiene decoraciones para todas las facciones y armas para SV, NC y RT. El potenciador \nheroico solo est\u00e1 disponible para el personaje que compre el lote. Los implantes \"\"perfectos\"\" se conceden a toda la cuenta y no pueden desmontarse.\"",
                "fr": "F\u00eatez l'h\u00e9ritage de la franchise PlanetSide ! Cet ensemble contient des armes pour toutes les factions, et des \u00e9l\u00e9ments esth\u00e9tiques pour la RT, le NC et la SV. Le Boost h\u00e9ro\u00efque n'est fourni que pour le personnage qui ach\u00e8te le lot. Les implants de type \"Parfait\" sont disponibles pour l'ensemble du compte et ne peuvent \u00eatre d\u00e9compos\u00e9s.",
                "it": "Celebra le origini del franchise di PlanetSide! Questo pacchetto contiene oggetti cosmetici per tutte le fazioni e armi per SV, NC e RT. Il potenziamento eroico pu\u00f2 essere usato solo dal personaggio che ha acquistato il pacchetto. Gli impianti \"Perfect\" sono per tutto l'account e non si possono smontare.",
                "tr": "NULL"
              },
              "image_id": "807193",
              "station_cash_price": "0",
              "cert_price": "NULL",
              "release_time": "1683702000"
            }
          ],
          "returned": 1
        }
      },
      "marketing_bundle_item": {
        "summary": "Lists items contained in the 'PlanetSide Legacy Bundle (2022)'.\nhttps://census.daybreakgames.com/get/ps2/marketing_bundle_item?marketing_bundle_id=812821&c:limit=20",
        "value": {
          "marketing_bundle_item_list": [
            {
              "marketing_bundle_id": "812821",
              "item_id": "75432",
              "quantity": "1",
              "release_time": "1683702000"
            },
            {
              "marketing_bundle_id": "812821",
              "item_id": "6013508",
              "quantity": "1",
              "release_time": "1683702000"
            },
            {
              "marketing_bundle_id": "812821",
              "item_id": "6013533",
              "quantity": "1",
              "release_time": "1683702000"
            },
            {
              "marketing_bundle_id": "812821",
              "item_id": "6013480",
              "quantity": "1",
              "release_time": "1683702000"
            },
            {
              "marketing_bundle_id": "812821",
              "item_id": "6013477",
              "quantity": "1",
              "release_time": "1683702000"
            },
            {
              "marketing_bundle_id": "812821",
              "item_id": "6013476",
              "quantity": "1",
              "release_time": "1683702000"
            },
            {
              "marketing_bundle_id": "812821",
              "item_id": "6013586",
              "quantity": "1",
              "release_time": "1683702000"
            },
            {
              "marketing_bundle_id": "812821",
              "item_id": "6013587",
              "quantity": "1",
              "release_time": "1683702000"
            },
            {
              "marketing_bundle_id": "812821",
              "item_id": "6013588",
              "quantity": "1",
              "release_time": "1683702000"
            },
            {
              "marketing_bundle_id": "812821",
              "item_id": "6013589",
              "quantity": "1",
              "release_time": "1683702000"
            },
            {
              "marketing_bundle_id": "812821",
              "item_id": "6013590",
              "quantity": "1",
              "release_time": "1683702000"
            },
            {
              "marketing_bundle_id": "812821",
              "item_id": "6013592",
              "quantity": "1",
              "release_time": "1683702000"
            },
            {
              "marketing_bundle_id": "812821",
              "item_id": "6013593",
              "quantity": "1",
              "release_time": "1683702000"
            },
            {
              "marketing_bundle_id": "812821",
              "item_id": "6013594",
              "quantity": "1",
              "release_time": "1683702000"
            }
          ],
          "returned": 14
        }
      },
      "marketing_bundle_with_1_item": {
        "summary": "Comet VM2.\nhttps://census.daybreakgames.com/get/ps2/marketing_bundle_with_1_item?marketing_bundle_id=465",
        "value": {
          "marketing_bundle_with_1_item_list": [
            {
              "marketing_bundle_id": "465",
              "item_id": "17001",
              "item_quantity": "1",
              "station_cash_price": "100",
              "release_time": "1334041200"
            }
          ],
          "returned": 1
        }
      },
      "metagame_event": {
        "summary": "Oshur Alert (started by VS).\nhttps://census.daybreakgames.com/get/ps2/metagame_event?metagame_event_id=224",
        "value": {
          "metagame_event_list": [
            {
              "metagame_event_id": "224",
              "name": {
                "de": "Oshur-Erleuchtung",
                "en": "Oshur Enlightenment",
                "es": "Iluminaci\u00f3n en Oshur",
                "fr": "\u00c9veil spirituel d'Oshur",
                "it": "Risveglio di Oshur"
              },
              "description": {
                "de": "Kontrolliere das Gebiet, um Oshur zu sperren.",
                "en": "Control territory to lock Oshur",
                "es": "Controla territorio para bloquear Oshur",
                "fr": "Contr\u00f4lez le territoire pour verrouiller Oshur",
                "it": "Controlla il territorio per bloccare Oshur"
              },
              "type": "9",
              "experience_bonus": "25"
            }
          ],
          "returned": 1
        }
      },
      "metagame_event_state": {
        "summary": "All alert states.\nhttps://census.daybreakgames.com/get/ps2/metagame_event_state?c:limit=10",
        "value": {
          "metagame_event_state_list": [
            {
              "metagame_event_state_id": "135",
              "name": "started"
            },
            {
              "metagame_event_state_id": "136",
              "name": "restarted"
            },
            {
              "metagame_event_state_id": "137",
              "name": "canceled"
            },
            {
              "metagame_event_state_id": "138",
              "name": "ended"
            },
            {
              "metagame_event_state_id": "139",
              "name": "xp bonus changed"
            }
          ],
          "returned": 5
        }
      },
      "leaderboard": {
        "summary": "All-time kills on Cobalt.\nhttps://census.daybreakgames.com/get/ps2/leaderboard?name=Kills&period=Forever&world=13",
        "value": {
          "limit": 10,
          "leaderboard_list": [
            {
              "character_id": "5428011263289812449",
              "value": "1004944",
              "rank": "0"
            },
            {
              "character_id": "5428092148238898497",
              "value": "933727",
              "rank": "1"
            },
            {
              "character_id": "5428143250883637345",
              "value": "871442",
              "rank": "2"
            },
            {
              "character_id": "8252189355200955505",
              "value": "726831",
              "rank": "3"
            },
            {
              "character_id": "8280485721807277905",
              "value": "611044",
              "rank": "4"
            },
            {
              "character_id": "5428123302629266225",
              "value": "587284",
              "rank": "5"
            },
            {
              "character_id": "5428359100729973969",
              "value": "564648",
              "rank": "6"
            },
            {
              "character_id": "5428064957346113809",
              "value": "554749",
              "rank": "7"
            },
            {
              "character_id": "5428551667113611937",
              "value": "552295",
              "rank": "8"
            },
            {
              "character_id": "8261280742797131393",
              "value": "548013",
              "rank": "9"
            }
          ],
          "returned": 10,
          "key": "Forever_Kills",
          "count": 10000
        }
      },
      "loadout": {
        "summary": "NC Infiltrator",
        "value": {
          "loadout_list": [
            {
              "loadout_id": "1",
              "profile_id": "2",
              "faction_id": "2",
              "code_name": "NC Infiltrator"
            }
          ],
          "returned": 1
        }
      },
      "objective": {
        "summary": "Combat Medic Kills.\nhttps://census.daybreakgames.com/get/ps2/objective?objective_id=11649",
        "value": {
          "objective_list": [
            {
              "objective_id": "11649",
              "objective_type_id": "12",
              "objective_group_id": "10137",
              "param1": "15",
              "param4": "-1",
              "param5": "-1",
              "param8": "-1"
            }
          ],
          "returned": 1
        }
      },
      "objective_set_to_objective": {
        "summary": "Objective Group for the \"Combat Medic Kills\" directive.\nhttps://census.daybreakgames.com/get/ps2/objective_set_to_objective?objective_set_id=4113",
        "value": {
          "objective_set_to_objective_list": [
            {
              "objective_set_id": "4113",
              "objective_group_id": "10137"
            }
          ],
          "returned": 1
        }
      },
      "objective_type": {
        "summary": "Kill Count.\nhttps://census.daybreakgames.com/get/ps2/objective_type?objective_type_id=12",
        "value": {
          "objective_type_list": [
            {
              "objective_type_id": "12",
              "description": "Total Kill Count",
              "param1": "Kill Count",
              "param2": "Npc",
              "param3": "Npc Classification",
              "param4": "Vehicle",
              "param5": "Item",
              "param6": "Item Classification",
              "param8": "Friendly Fire"
            }
          ],
          "returned": 1
        }
      },
      "outfit": {
        "summary": "Friday Night Ops",
        "value": {
          "outfit_list": [
            {
              "outfit_id": "37525047953333155",
              "name": "Friday Night Ops",
              "name_lower": "friday night ops",
              "alias": "FNO",
              "alias_lower": "fno",
              "time_created": "1413001215",
              "time_created_date": "2014-10-11 04:20:15.0",
              "leader_character_id": "5428010618015197505",
              "member_count": "5"
            }
          ],
          "returned": 1
        }
      },
      "outfit_member": {
        "summary": "Luperza",
        "value": {
          "outfit_member_list": [
            {
              "outfit_id": "37525047953333155",
              "character_id": "5428010618015197505",
              "member_since": "1413001215",
              "member_since_date": "2014-10-11 04:20:15.0",
              "rank": "Leader",
              "rank_ordinal": "1"
            }
          ],
          "returned": 1
        }
      },
      "outfit_member_extended": {
        "summary": "Luperza",
        "value": {
          "outfit_member_extended_list": [
            {
              "character_id": "5428010618015197505",
              "member_since": "1413001215",
              "member_since_date": "2014-10-11 04:20:15.0",
              "member_rank": "Leader",
              "member_rank_ordinal": "1",
              "outfit_id": "37525047953333155",
              "name": "Friday Night Ops",
              "name_lower": "friday night ops",
              "alias": "FNO",
              "alias_lower": "fno",
              "time_created": "1413001215",
              "time_created_date": "2014-10-11 04:20:15.0",
              "leader_character_id": "5428010618015197505",
              "member_count": "5"
            }
          ],
          "returned": 1
        }
      },
      "outfit_rank": {
        "summary": "URGE Bastion Commander",
        "value": {
          "outfit_rank_list": [
            {
              "outfit_id": "37564049462661850",
              "ordinal": "5",
              "name": "BASTION COMMANDER",
              "description": "Outfit Enlisted"
            }
          ],
          "returned": 1
        }
      },
      "profile": {
        "summary": "TR Light Assault",
        "value": {
          "profile_list": [
            {
              "profile_id": "12",
              "profile_type_id": "3",
              "profile_type_description": "Light Assault",
              "faction_id": "3",
              "name": {
                "de": "Leichte Angriffseinheit",
                "en": "Light Assault",
                "es": "Asalto ligero",
                "fr": "Assaut l\u00e9ger",
                "it": "Assalto Leggero",
                "tr": "Hafif Taarruz"
              },
              "description": {
                "de": "Leichte Angriffseinheit",
                "en": "Light Assault",
                "es": "Asalto ligero",
                "fr": "Assaut l\u00e9ger",
                "it": "Assalto Leggero",
                "tr": "Hafif Taarruz"
              },
              "image_set_id": "8",
              "image_id": "62",
              "image_path": "/files/ps2/images/static/62.png",
              "movement_speed": "4",
              "backpedal_speed_modifier": "0.75",
              "sprint_speed_modifier": "1.625",
              "strafe_speed_modifier": "0.75"
            }
          ],
          "returned": 1
        }
      },
      "profile_2": {
        "summary": "Sunderer",
        "value": {
          "profile_2_list": [
            {
              "profile_id": "33",
              "description": "Sunderer"
            }
          ],
          "returned": 1
        }
      },
      "profile_armor_map": {
        "summary": "Armor map for the Magrider.\nhttps://census.daybreakgames.com/get/ps2/profile_armor_map?profile_id=29&c:limit=6",
        "value": {
          "profile_armor_map_list": [
            {
              "profile_id": "29",
              "armor_info_id": "40",
              "rank": "1"
            },
            {
              "profile_id": "29",
              "armor_info_id": "41",
              "rank": "1"
            },
            {
              "profile_id": "29",
              "armor_info_id": "42",
              "rank": "1"
            },
            {
              "profile_id": "29",
              "armor_info_id": "43",
              "rank": "1"
            },
            {
              "profile_id": "29",
              "armor_info_id": "44",
              "rank": "1"
            },
            {
              "profile_id": "29",
              "armor_info_id": "45",
              "rank": "1"
            }
          ],
          "returned": 6
        }
      },
      "profile_resist_map": {
        "summary": "Resist map for the Lightning. Note that the example has been truncated for brevity.\nhttps://census.daybreakgames.com/get/ps2/profile_resist_map?profile_id=26&c:limit=50",
        "value": {
          "profile_resist_map_list": [
            {
              "profile_id": "26",
              "resist_info_id": "31",
              "rank": "1"
            },
            {
              "profile_id": "26",
              "resist_info_id": "32",
              "rank": "1"
            },
            {
              "profile_id": "26",
              "resist_info_id": "33",
              "rank": "1"
            },
            {
              "profile_id": "26",
              "resist_info_id": "34",
              "rank": "1"
            }
          ],
          "returned": 26
        }
      },
      "projectile": {
        "summary": "Hawk GD-68\nhttps://census.daybreakgames.com/get/ps2/projectile?projectile_id=33004",
        "value": {
          "projectile_list": [
            {
              "projectile_id": "33004",
              "projectile_flight_type_id": "1",
              "speed": "50",
              "speed_max": "100",
              "turn_rate": "1.5",
              "lifespan": "5",
              "drag": "0",
              "gravity": "1",
              "lockon_acceleration": "6.67",
              "lockon_lifespan": "5",
              "detonate_on_contact": "1",
              "sticky": "0",
              "sticks_to_players": "0",
              "lockon_lose_angle": "145",
              "lockon_seek_in_flight": "0",
              "projectile_radius": "0.03"
            }
          ],
          "returned": 1
        }
      },
      "projectile_flight_type": {
        "summary": "List all flight types.\nhttps://census.daybreakgames.com/get/ps2/projectile_flight_type?c:limit=10",
        "value": {
          "projectile_flight_type_list": [
            {
              "projectile_flight_type_id": "1",
              "description": "Ballistic"
            },
            {
              "projectile_flight_type_id": "3",
              "description": "True Ballstic - Uses Real Gravity"
            },
            {
              "projectile_flight_type_id": "9",
              "description": "Dynamic"
            },
            {
              "projectile_flight_type_id": "10",
              "description": "Proximity Detonate"
            }
          ],
          "returned": 4
        }
      },
      "region": {
        "summary": "Mao Tech Plant.\nhttps://census.daybreakgames.com/get/ps2/region?region_id=2102",
        "value": {
          "region_list": [
            {
              "region_id": "2102",
              "zone_id": "2",
              "initial_faction_id": "1",
              "name": {
                "de": "Mao",
                "en": "Mao",
                "es": "Mao",
                "fr": "Mao",
                "it": "Mao",
                "tr": "Mao"
              }
            }
          ],
          "returned": 1
        }
      },
      "resist_info": {
        "summary": "MAX Melee resistance.\nhttps://census.daybreakgames.com/get/ps2/resist_info?resist_info_id=1",
        "value": {
          "resist_info_list": [
            {
              "resist_info_id": "1",
              "resist_type_id": "1",
              "resist_percent": "80",
              "multiplier_when_headshot": "1",
              "description": "MAX - Melee"
            }
          ],
          "returned": 1
        }
      },
      "resist_type": {
        "summary": "List of all resist types.\nhttps://census.daybreakgames.com/get/ps2/resist_type?c:limit=100",
        "value": {
          "resist_type_list": [
            {
              "resist_type_id": "0",
              "description": "None"
            },
            {
              "resist_type_id": "1",
              "description": "Melee"
            },
            {
              "resist_type_id": "2",
              "description": "Small Arms"
            },
            {
              "resist_type_id": "4",
              "description": "Heavy Machine Guns"
            },
            {
              "resist_type_id": "5",
              "description": "Heavy Anti-Armor"
            },
            {
              "resist_type_id": "6",
              "description": "Common Explosive"
            },
            {
              "resist_type_id": "7",
              "description": "Tank Shell"
            },
            {
              "resist_type_id": "8",
              "description": "Aircraft Machine Gun"
            },
            {
              "resist_type_id": "12",
              "description": "Flak Explosive Blast"
            },
            {
              "resist_type_id": "20",
              "description": "Sniper Rifles"
            },
            {
              "resist_type_id": "22",
              "description": "Anti-Aircraft Machine Gun"
            },
            {
              "resist_type_id": "23",
              "description": "Air to Ground Warhead"
            },
            {
              "resist_type_id": "28",
              "description": "AP Gatling"
            },
            {
              "resist_type_id": "34",
              "description": "Infantry Rocket Launchers"
            },
            {
              "resist_type_id": "40",
              "description": "Anti-Materiel Rifle"
            },
            {
              "resist_type_id": "45",
              "description": "A2A Missile"
            },
            {
              "resist_type_id": "46",
              "description": "Core Explosion / Glaive"
            },
            {
              "resist_type_id": "47",
              "description": "Orbital Strike"
            },
            {
              "resist_type_id": "64",
              "description": "Burning"
            },
            {
              "resist_type_id": "68",
              "description": "Infantry Lock-on"
            },
            {
              "resist_type_id": "69",
              "description": "Melee: Armor Piercing"
            }
          ],
          "returned": 21
        }
      },
      "resource_type": {
        "summary": "All resource types.\nhttps://census.daybreakgames.com/get/ps2/resource_type?c:limit=50",
        "value": {
          "resource_type_list": [
            {
              "resource_type_id": "1",
              "description": "Health"
            },
            {
              "resource_type_id": "7",
              "description": "Fuel"
            },
            {
              "resource_type_id": "9",
              "description": "Heavy Shield"
            },
            {
              "resource_type_id": "35",
              "description": "Cloaker Juice"
            },
            {
              "resource_type_id": "38",
              "description": "Medic Fuel"
            },
            {
              "resource_type_id": "41",
              "description": "NC MAX Aegis Shield 01"
            },
            {
              "resource_type_id": "43",
              "description": "NC MAX Aegis Shield 02"
            },
            {
              "resource_type_id": "44",
              "description": "NC MAX Aegis Shield 03"
            },
            {
              "resource_type_id": "45",
              "description": "NC MAX Aegis Shield 04"
            },
            {
              "resource_type_id": "46",
              "description": "NC MAX Aegis Shield 05"
            },
            {
              "resource_type_id": "50",
              "description": "VS: MAX: Ability: Zealot"
            },
            {
              "resource_type_id": "58",
              "description": "Cortium"
            },
            {
              "resource_type_id": "75",
              "description": "Ambusher Fuel"
            },
            {
              "resource_type_id": "133",
              "description": "NSO: MAX: Time Bomb"
            },
            {
              "resource_type_id": "154",
              "description": "Thrust"
            },
            {
              "resource_type_id": "157",
              "description": "Demeter Veil"
            }
          ],
          "returned": 16
        }
      },
      "reward": {
        "summary": "VS Auraxium Light Assault armor.\nhttps://census.daybreakgames.com/get/ps2/reward?reward_id=4771",
        "value": {
          "reward_list": [
            {
              "reward_id": "4771",
              "reward_type_id": "1",
              "count_min": "1",
              "count_max": "1",
              "param1": "15746",
              "param2": "0",
              "param3": "0"
            }
          ],
          "returned": 1
        }
      },
      "reward_group_to_reward": {
        "summary": "VS Light Assault Mastery reward group to rewards.\nhttps://census.daybreakgames.com/get/ps2/reward_group_to_reward?reward_group_id=10074&c:limit=10",
        "value": {
          "reward_group_to_reward_list": [
            {
              "reward_group_id": "10074",
              "reward_id": "4771"
            },
            {
              "reward_group_id": "10074",
              "reward_id": "4772"
            },
            {
              "reward_group_id": "10074",
              "reward_id": "4773"
            },
            {
              "reward_group_id": "10074",
              "reward_id": "6699"
            }
          ],
          "returned": 4
        }
      },
      "reward_set_to_reward_group": {
        "summary": "VS Light Assault Mastery reward group.\nhttps://census.daybreakgames.com/get/ps2/reward_set_to_reward_group?reward_set_id=4466",
        "value": {
          "reward_set_to_reward_group_list": [
            {
              "reward_set_id": "4466",
              "reward_group_id": "10074"
            }
          ],
          "returned": 1
        }
      },
      "reward_type": {
        "summary": "All reward types.\nhttps://census.daybreakgames.com/get/ps2/reward_type?c:limit=10",
        "value": {
          "reward_type_list": [
            {
              "reward_type_id": "1",
              "description": "Item",
              "count_min": "# of items to give",
              "param1": "Item ID",
              "param2": "currency_type (-1 for coin)",
              "param3": "Flag Goto Claim",
              "param4": "Required Scalar Percent"
            },
            {
              "reward_type_id": "2",
              "description": "Currency",
              "count_min": "rand # to add to P1",
              "param1": "# of coin",
              "param2": "currency_type (-1 for coin)",
              "param3": "award type"
            },
            {
              "reward_type_id": "3",
              "description": "XP",
              "param1": "# of exp",
              "param2": "Profile (0 = current)",
              "param3": "award type"
            }
          ],
          "returned": 3
        }
      },
      "skill": {
        "summary": "Suppressor.\nhttps://census.daybreakgames.com/get/ps2/skill?skill_id=34",
        "value": {
          "skill_list": [
            {
              "skill_id": "34",
              "skill_line_id": "13",
              "skill_line_index": "0",
              "skill_points": "100",
              "grant_item_id": "182",
              "name": {
                "de": "Schalld\u00e4mpfer",
                "en": "Suppressor",
                "es": "Silenciador",
                "fr": "Silencieux",
                "it": "Soppressore",
                "tr": "Susturucu"
              },
              "description": {
                "de": "Verringert M\u00fcndungsfeuer und Lautst\u00e4rke.",
                "en": "Decreases muzzle flash and audio range.",
                "es": "Disminuye el alcance del fogonazo y el sonido al disparar.",
                "fr": "Diminue l'\u00e9clair du tir et le bruit.",
                "it": "Riduce la fiammata e la gittata sonora dell'arma.",
                "tr": "Namlu alevi ve sesinin duyulma mesafesini azalt\u0131r."
              },
              "image_set_id": "443",
              "image_id": "1300",
              "image_path": "/files/ps2/images/static/1300.png"
            }
          ],
          "returned": 1
        }
      },
      "skill_line": {
        "summary": "Maximum Ammo Capacity.\nhttps://census.daybreakgames.com/get/ps2/skill_line?skill_line_id=88",
        "value": {
          "skill_line_list": [
            {
              "skill_line_id": "88",
              "skill_points": "0",
              "skill_category_id": "44",
              "skill_category_index": "0",
              "name": {
                "de": "Maximale Munitionskapazit\u00e4t",
                "en": "Maximum Ammo Capacity",
                "es": "Capacidad de munici\u00f3n m\u00e1xima",
                "fr": "Capacit\u00e9 maximale en munitions",
                "it": "Capacit\u00e0 di munizioni massima",
                "tr": "Maksimum Cephane Kapasitesi"
              },
              "description": {
                "de": "Erh\u00f6ht die maximale Munitionskapazit\u00e4t der Waffe.",
                "en": "Increases the maximum ammo capacity of the weapon.",
                "es": "Aumenta la capacidad de munici\u00f3n m\u00e1xima del arma.",
                "fr": "Augmente la capacit\u00e9 maximale en munitions de l'arme.",
                "it": "Aumenta la capacit\u00e0 massima di munizioni dell'arma.",
                "tr": "Silah\u0131n azami cephane kapasitesini artt\u0131r\u0131r."
              },
              "image_set_id": "2049",
              "image_id": "3744",
              "image_path": "/files/ps2/images/static/3744.png"
            }
          ],
          "returned": 1
        }
      },
      "skill_category": {
        "summary": "Passive Systems.\nhttps://census.daybreakgames.com/get/ps2/skill_category?skill_category_id=1",
        "value": {
          "skill_category_list": [
            {
              "skill_category_id": "1",
              "skill_set_id": "10",
              "skill_set_index": "0",
              "skill_points": "0",
              "name": {
                "de": "Passive Systeme",
                "en": "Passive Systems",
                "es": "Sistemas pasivos",
                "fr": "Syst\u00e8mes passifs",
                "it": "Sistemi passivi",
                "tr": "Pasif Sistemler"
              },
              "image_set_id": "1",
              "image_id": "35",
              "image_path": "/files/ps2/images/static/35.png"
            }
          ],
          "returned": 1
        }
      },
      "skill_set": {
        "summary": "M40 Fury-F skill set.\nhttps://census.daybreakgames.com/get/ps2/skill_set?skill_set_id=43",
        "value": {
          "skill_set_list": [
            {
              "skill_set_id": "43",
              "skill_points": "875",
              "required_item_id": "2510",
              "name": {
                "de": "PRIM\u00c4RWAFFE: M40 Fury-F",
                "en": "PRIMARY WEAPON:  M40 Fury-F",
                "es": "ARMA PRIMARIA: M40 Fury-F",
                "fr": "ARME PRINCIPALE: Furie-F M40",
                "it": "ARMA PRIMARIA: M40 Fury-F",
                "tr": "PRIMARY WEAPON:  M40 Fury-F"
              },
              "description": {
                "de": "Der Fury feuert 40mm-Granaten, die effektiv gegen die Infanterie  und leichte Panzerungen sind. Er kann ebenso leichten Schaden an schwer gepanzerten Ziele verursachen. F\u00fcr alle Fraktionen.",
                "en": "The Fury launches 40mm grenades that are effective against infantry and light armor.  It is also capable of light damage against heavy armor.  All factions can use this weapon.",
                "es": "El Fury lanza granadas de 40 mm eficaces contra infanter\u00eda y blindaje ligero. Adem\u00e1s, son capaces de da\u00f1ar ligeramente blindajes pesados. Todas las facciones pueden usar esta arma.",
                "fr": "Le Furie lance des grenades de 40mm qui sont efficaces contre l'infanterie et les blindages l\u00e9gers. Il est \u00e9galement capable d'infliger des d\u00e9g\u00e2ts l\u00e9gers aux blindages lourds. Toutes les factions peuvent l'utiliser.",
                "it": "Il Fury lancia granate di 40 mm efficaci contro la fanteria e le corazzature leggere. Pu\u00f2 anche infliggere danni leggeri ai corazzati pesanti. Quest'arma pu\u00f2 essere usata da tutte le fazioni.",
                "tr": "The Fury launches 40mm grenades that are effective against infantry and light armor.  It is also capable of light damage against heavy armor.  All factions can use this weapon."
              },
              "image_set_id": "2029",
              "image_id": "3724",
              "image_path": "/files/ps2/images/static/3724.png"
            }
          ],
          "returned": 1
        }
      },
      "target_type": {
        "summary": "List of all target types.\nhttps://census.daybreakgames.com/get/ps2/target_type?c:limit=10",
        "value": {
          "target_type_list": [
            {
              "target_type_id": "1",
              "description": "Self"
            },
            {
              "target_type_id": "2",
              "description": "Any"
            },
            {
              "target_type_id": "3",
              "description": "Enemy"
            },
            {
              "target_type_id": "4",
              "description": "Ally"
            }
          ],
          "returned": 4
        }
      },
      "title": {
        "summary": "Dreadnaught (BR 120).\nhttps://census.daybreakgames.com/get/ps2/title?title_id=202",
        "value": {
          "title_list": [
            {
              "title_id": "202",
              "name": {
                "de": "Dreadnaught",
                "en": "Dreadnaught",
                "es": "Acorazado",
                "fr": "Dreadnaught",
                "it": "Dreadnaught"
              }
            }
          ],
          "returned": 1
        }
      },
      "vehicle": {
        "summary": "Liberator.\nhttps://census.daybreakgames.com/get/ps2/vehicle?vehicle_id=10",
        "value": {
          "vehicle_list": [
            {
              "vehicle_id": "10",
              "name": {
                "de": "Liberator",
                "en": "Liberator",
                "es": "Liberator",
                "fr": "Lib\u00e9rateur",
                "it": "Liberator",
                "tr": "KURTARICI"
              },
              "description": {
                "de": "Der Liberator ist ein Drei-Mann-Kampfflugzeug. Das Artelleriegesch\u00fctz ist extrem wirksam gegen Bodenziele und er verf\u00fcgt ebenso \u00fcber ein Heckgesch\u00fctz, um gegnerische J\u00e4ger abzuwehren.",
                "en": "The Liberator is a three man gun ship.  The bombardier weapon is very powerful against ground targets and it has a tail gun to ward off enemy fighters.",
                "es": "El Liberator es una nave de asalto de tres plazas. Su arma bombardera es muy potente contra objetivos terrestres y tiene un puesto de artillero de cola para defenderse de los cazas enemigos.",
                "fr": "Le Lib\u00e9rateur est un appareil de combat servi par 3 hommes d'\u00e9quipage. Son bombardier est tr\u00e8s puissant contre les cibles au sol et il poss\u00e8de un canonnier arri\u00e8re pour repousser les combattants ennemis.",
                "it": "Il Liberator \u00e8 una cannoniera volante con tre uomini di equipaggio. L'armamento di bordo \u00e8 molto potente contro i bersagli a terra e possiede anche un cannone sulla coda per tenere lontani i caccia nemici.",
                "tr": "Kurtar\u0131c\u0131, \u00fc\u00e7 ki\u015filik bir sava\u015f helikopteridir. Bombard\u0131man silah\u0131 yer hedeflerine kar\u015f\u0131 \u00e7ok g\u00fc\u00e7l\u00fcd\u00fcr ve kuyruk silah\u0131 d\u00fc\u015fman sava\u015f\u00e7\u0131lar\u0131n\u0131 parampar\u00e7a eder."
              },
              "type_id": "1",
              "type_name": "Light Aircraft",
              "cost": "0",
              "cost_resource_id": "4",
              "image_set_id": "93",
              "image_id": "3981",
              "image_path": "/files/ps2/images/static/3981.png"
            }
          ],
          "returned": 1
        }
      },
      "vehicle_attachment": {
        "summary": "Primary weapons for a VS Harasser.\nhttps://census.daybreakgames.com/get/ps2/vehicle_attachment?vehicle_id=12&faction_id=1&slot_id=1&c:limit=100",
        "value": {
          "vehicle_attachment_list": [
            {
              "item_id": "6100",
              "vehicle_id": "12",
              "faction_id": "1",
              "description": "Harasser VS",
              "slot_id": "1",
              "item_id_join_item": {
                "name": {
                  "en": "M12 Kobalt-H"
                }
              }
            },
            {
              "item_id": "6103",
              "vehicle_id": "12",
              "faction_id": "1",
              "description": "Harasser VS",
              "slot_id": "1",
              "item_id_join_item": {
                "name": {
                  "en": "M20 Basilisk-H"
                }
              }
            },
            {
              "item_id": "6106",
              "vehicle_id": "12",
              "faction_id": "1",
              "description": "Harasser VS",
              "slot_id": "1",
              "item_id_join_item": {
                "name": {
                  "en": "G30 Walker"
                }
              }
            },
            {
              "item_id": "6109",
              "vehicle_id": "12",
              "faction_id": "1",
              "description": "Harasser VS",
              "slot_id": "1",
              "item_id_join_item": {
                "name": {
                  "en": "G40-F Ranger"
                }
              }
            },
            {
              "item_id": "6112",
              "vehicle_id": "12",
              "faction_id": "1",
              "description": "Harasser VS",
              "slot_id": "1",
              "item_id_join_item": {
                "name": {
                  "en": "M60-G Bulldog-H"
                }
              }
            },
            {
              "item_id": "6115",
              "vehicle_id": "12",
              "faction_id": "1",
              "description": "Harasser VS",
              "slot_id": "1",
              "item_id_join_item": {
                "name": {
                  "en": "M40 Fury-H"
                }
              }
            },
            {
              "item_id": "6118",
              "vehicle_id": "12",
              "faction_id": "1",
              "description": "Harasser VS",
              "slot_id": "1",
              "item_id_join_item": {
                "name": {
                  "en": "E540 Halberd-H"
                }
              }
            },
            {
              "item_id": "6125",
              "vehicle_id": "12",
              "faction_id": "1",
              "description": "Harasser VS",
              "slot_id": "1",
              "item_id_join_item": {
                "name": {
                  "en": "Proton II PPA-H"
                }
              }
            },
            {
              "item_id": "6126",
              "vehicle_id": "12",
              "faction_id": "1",
              "description": "Harasser VS",
              "slot_id": "1",
              "item_id_join_item": {
                "name": {
                  "en": "Saron HRB-H"
                }
              }
            },
            {
              "item_id": "802898",
              "vehicle_id": "12",
              "faction_id": "1",
              "description": "Harasser VS",
              "slot_id": "1",
              "item_id_join_item": {
                "name": {
                  "en": "Aphelion VEX-4H"
                }
              }
            },
            {
              "item_id": "6006397",
              "vehicle_id": "12",
              "faction_id": "1",
              "description": "Harasser VS",
              "slot_id": "1",
              "item_id_join_item": {
                "name": {
                  "en": "Halberd-H SE"
                }
              }
            },
            {
              "item_id": "6011884",
              "vehicle_id": "12",
              "faction_id": "1",
              "description": "Harasser VS",
              "slot_id": "1",
              "item_id_join_item": {
                "name": {
                  "en": "V42 Pariah-H"
                }
              }
            }
          ],
          "returned": 12
        }
      },
      "vehicle_faction": {
        "summary": "Factions that can use the Harasser.\nhttps://census.daybreakgames.com/get/ps2/vehicle_faction?vehicle_id=12&c:limit=10",
        "value": {
          "vehicle_faction_list": [
            {
              "vehicle_id": "12",
              "faction_id": "1"
            },
            {
              "vehicle_id": "12",
              "faction_id": "2"
            },
            {
              "vehicle_id": "12",
              "faction_id": "3"
            },
            {
              "vehicle_id": "12",
              "faction_id": "4"
            }
          ],
          "returned": 4
        }
      },
      "vehicle_skill_set": {
        "summary": "L-30R Vektor (VS).\nhttps://census.daybreakgames.com/get/ps2/vehicle_skill_set?vehicle_id=10&skill_set_id=39&faction_id=1",
        "value": {
          "vehicle_skill_set_list": [
            {
              "vehicle_id": "10",
              "skill_set_id": "39",
              "faction_id": "1",
              "display_index": "4"
            }
          ],
          "returned": 1
        }
      },
      "weapon_regular": {
        "summary": "NC1 Gauss Rifle.\nhttps://census.daybreakgames.com/get/ps2/weapon?weapon_id=4",
        "value": {
          "weapon_list": [
            {
              "weapon_id": "4",
              "weapon_group_id": "3",
              "turn_modifier": "1.0",
              "move_modifier": "1.0",
              "sprint_recovery_ms": "300",
              "equip_ms": "650",
              "unequip_ms": "250",
              "to_iron_sights_ms": "150",
              "from_iron_sights_ms": "150"
            }
          ],
          "returned": 1
        }
      },
      "weapon_knife": {
        "summary": "Auraxium Chainblade (Knife).\nhttps://census.daybreakgames.com/get/ps2/weapon?weapon_id=20",
        "value": {
          "weapon_list": [
            {
              "weapon_id": "20",
              "turn_modifier": "1.0",
              "move_modifier": "1.0",
              "sprint_recovery_ms": "0",
              "equip_ms": "250",
              "unequip_ms": "250",
              "to_iron_sights_ms": "150",
              "from_iron_sights_ms": "150",
              "melee_detect_width": "0.15",
              "melee_detect_height": "0.1"
            }
          ],
          "returned": 1
        }
      },
      "weapon_heat": {
        "summary": "Darkstar (Heat-based weapon).\nhttps://census.daybreakgames.com/get/ps2/weapon?weapon_id=111",
        "value": {
          "weapon_list": [
            {
              "weapon_id": "111",
              "weapon_group_id": "1226",
              "turn_modifier": "1.0",
              "move_modifier": "1.0",
              "sprint_recovery_ms": "300",
              "equip_ms": "750",
              "unequip_ms": "250",
              "to_iron_sights_ms": "150",
              "from_iron_sights_ms": "150",
              "heat_capacity": "999",
              "heat_bleed_off_rate": "364",
              "heat_overheat_penalty_ms": "1750"
            }
          ],
          "returned": 1
        }
      },
      "weapon_ammo_slot": {
        "summary": "Ammo Slots for the NC1 Gauss Rifle.\nhttps://census.daybreakgames.com/get/ps2/weapon_ammo_slot?weapon_id=4&c:limit=10",
        "value": {
          "weapon_ammo_slot_list": [
            {
              "weapon_id": "4",
              "weapon_slot_index": "0",
              "clip_size": "30",
              "capacity": "180",
              "refill_ammo_rate": "30"
            },
            {
              "weapon_id": "4",
              "weapon_slot_index": "1",
              "clip_size": "1",
              "capacity": "4",
              "refill_ammo_rate": "1"
            },
            {
              "weapon_id": "4",
              "weapon_slot_index": "2",
              "clip_size": "1",
              "capacity": "2",
              "refill_ammo_rate": "1",
              "refill_ammo_delay_ms": "5000"
            },
            {
              "weapon_id": "4",
              "weapon_slot_index": "3",
              "clip_size": "1",
              "capacity": "2",
              "refill_ammo_rate": "1",
              "refill_ammo_delay_ms": "5000"
            }
          ],
          "returned": 4
        }
      },
      "weapon_datasheet": {
        "summary": "Datasheet for the NS-11A. Note the incorrect damage values; none of which match the 143-to-125 damage model it has as of writing.\nhttps://census.daybreakgames.com/get/ps2/weapon_datasheet?item_id=70998",
        "value": {
          "weapon_datasheet_list": [
            {
              "item_id": "70998",
              "damage": "143",
              "damage_min": "75",
              "damage_max": "225",
              "fire_cone": "1.125",
              "fire_cone_min": "0",
              "fire_cone_max": "7",
              "fire_rate_ms": "92",
              "fire_rate_ms_min": "60",
              "fire_rate_mx_max": "135",
              "reload_ms": "2000",
              "reload_ms_min": "1250",
              "reload_ms_max": "3500",
              "clip_size": "35",
              "capacity": "210",
              "range": {
                "de": "Lang",
                "en": "Long",
                "es": "Largo",
                "fr": "Long",
                "it": "Lunga",
                "tr": "Uzun"
              },
              "show_clip_size": "1",
              "show_fire_modes": "1",
              "show_range": "1"
            }
          ],
          "returned": 1
        }
      },
      "weapon_to_attachment": {
        "summary": "NC1 Gauss Rifle attachments.\nhttps://census.daybreakgames.com/get/ps2/weapon_to_attachment?weapon_group_id=3&c:limit=5",
        "value": {
          "weapon_to_attachment_list": [
            {
              "weapon_group_id": "3",
              "attachment_id": "300",
              "item_id": "74"
            },
            {
              "weapon_group_id": "3",
              "attachment_id": "302",
              "item_id": "76"
            },
            {
              "weapon_group_id": "3",
              "attachment_id": "303",
              "item_id": "115"
            },
            {
              "weapon_group_id": "3",
              "attachment_id": "304",
              "item_id": "148"
            },
            {
              "weapon_group_id": "3",
              "attachment_id": "305",
              "item_id": "149"
            }
          ],
          "returned": 5
        }
      },
      "weapon_to_fire_group": {
        "summary": "Cycler TRV fire groups.\nhttps://census.daybreakgames.com/get/ps2/weapon_to_fire_group?weapon_id=7124&c:limit=10",
        "value": {
          "weapon_to_fire_group_list": [
            {
              "weapon_id": "7124",
              "fire_group_id": "7124",
              "fire_group_index": "0"
            },
            {
              "weapon_id": "7124",
              "fire_group_id": "17124",
              "fire_group_index": "1"
            }
          ],
          "returned": 2
        }
      },
      "world": {
        "summary": "Cobalt",
        "value": {
          "world_list": [
            {
              "world_id": "13",
              "state": "online",
              "name": {
                "en": "Cobalt",
                "de": "Cobalt",
                "es": "Cobalt",
                "fr": "Cobalt",
                "it": "Cobalt",
                "tr": "Cobalt"
              }
            }
          ],
          "returned": 1
        }
      },
      "world_stat_history": {
        "summary": "World Domination Series Pre-season (Connery NC).\nhttps://census.daybreakgames.com/get/ps2/world_stat_history?tracker_name=WDS01&world_id=1&faction=nc",
        "value": {
          "world_stat_history_list": [
            {
              "world_id": "1",
              "stat_name": "EmpireScore.WDS01.NC",
              "type": "EmpireScore",
              "tracker_name": "WDS01",
              "faction": "nc",
              "all_time": "361919",
              "day": {
                "d01": "0",
                "d02": "0",
                "d03": "0",
                "d04": "0",
                "d05": "0",
                "d06": "0",
                "d07": "0",
                "d08": "0",
                "d09": "0",
                "d10": "0",
                "d11": "0",
                "d12": "0",
                "d13": "0",
                "d14": "0",
                "d15": "0",
                "d16": "0",
                "d17": "0",
                "d18": "0",
                "d19": "0",
                "d20": "0",
                "d21": "0",
                "d22": "0",
                "d23": "0",
                "d24": "0",
                "d25": "0",
                "d26": "0",
                "d27": "0",
                "d28": "0",
                "d29": "0",
                "d30": "0",
                "d31": "0"
              },
              "month": {
                "m01": "0",
                "m02": "0",
                "m03": "0",
                "m04": "0",
                "m05": "309277",
                "m06": "52642",
                "m07": "0",
                "m08": "0",
                "m09": "0",
                "m10": "0",
                "m11": "0",
                "m12": "0"
              },
              "week": {
                "w01": "0",
                "w02": "0",
                "w03": "0",
                "w04": "0",
                "w05": "0",
                "w06": "0",
                "w07": "0",
                "w08": "0",
                "w09": "0",
                "w10": "0",
                "w11": "0",
                "w12": "0",
                "w13": "0"
              },
              "last_save": "1393574969",
              "last_save_date": "2014-02-28 08:09:29.0"
            }
          ],
          "returned": 1
        }
      },
      "zone": {
        "summary": "Oshur",
        "value": {
          "zone_list": [
            {
              "zone_id": "344",
              "code": "Oshur",
              "hex_size": "100",
              "name": {
                "de": "Oshur",
                "en": "Oshur",
                "es": "Oshur",
                "fr": "Oshur",
                "it": "Oshur"
              },
              "description": {
                "de": "Oshurs Strand-Archipel und das glitzernde blaue Wasser bieten die M\u00f6glichkeit f\u00fcr Eins\u00e4tze zu Land, Luft und Wasser.",
                "en": "Oshur's sandy archipelago and sparkling blue waters provide opportunities for engagement by land, sea, and air.",
                "es": "El arenoso archipi\u00e9lago de Oshur y sus resplandecientes aguas azules son el entorno ideal para luchar por tierra, mar y aire.",
                "fr": "L'archipel sablonneux d'Oshur et ses eaux bleues cristallines offrent des possibilit\u00e9s de combats terrestres, maritimes et a\u00e9riens.",
                "it": "L'arcipelago sabbioso e le vivaci acque blu di Oshur forniscono ottime opportunit\u00e0 d'ingaggio via mare, terra e aria."
              },
              "geometry_id": "367",
              "dynamic": "0"
            }
          ],
          "returned": 1
        }
      },
      "zone_effect": {
        "summary": "Suppressor.\nhttps://census.daybreakgames.com/get/ps2/zone_effect?zone_effect_id=750052",
        "value": {
          "zone_effect_list": [
            {
              "zone_effect_id": "750052",
              "zone_effect_type_id": "58",
              "ability_id": "80412",
              "param1": "0",
              "param2": "1",
              "param3": "1",
              "param4": "0",
              "string1": "BlockSpotOnDamageTaken"
            }
          ],
          "returned": 1
        }
      },
      "zone_effect_type": {
        "summary": "Modify character flag.\nhttps://census.daybreakgames.com/get/ps2/zone_effect_type?zone_effect_type_id=58",
        "value": {
          "zone_effect_type_list": [
            {
              "zone_effect_type_id": "58",
              "description": "Modify the given character flag",
              "param1": "Operation (see tooltip)",
              "param2": "ModifyValue",
              "param3": "Persist",
              "param4": "OneShot",
              "param5": "Always Create ",
              "string1": "CharacterFlagKey"
            }
          ],
          "returned": 1
        }
      }
    }
  }
}